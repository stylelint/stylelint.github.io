{"head":{"description":"Benchmarks There's a simple way to run benchmarks on any given rule with any valid config for it: If the config argument is anything otherâ€¦","title":"Benchmarks"},"body":"<h1 id=\"benchmarks\"><a href=\"#benchmarks\" class=\"phenomic-HeadingAnchor\">#</a>Benchmarks</h1>\n<p>There's a simple way to run benchmarks on any given rule with any valid config for it:</p>\n<pre><code class=\"hljs language-shell\">npm run benchmark-<span class=\"hljs-keyword\">rule</span> -- <span class=\"hljs-comment\">[rule-name]</span> <span class=\"hljs-comment\">[config]</span></code></pre>\n<p>If the <code>config</code> argument is anything other than a string or a boolean, it must be valid JSON wrapped in quotation marks.</p>\n<pre><code class=\"hljs language-shell\">npm <span class=\"hljs-built_in\">run</span> benchmark-rule <span class=\"hljs-comment\">-- selector-combinator-space-after never</span></code></pre>\n<pre><code class=\"hljs language-shell\">npm <span class=\"hljs-built_in\">run</span> benchmark-rule <span class=\"hljs-comment\">-- selector-combinator-space-after always</span></code></pre>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-built_in\">npm</span> run benchmark-rule -- selector-<span class=\"hljs-literal\">no</span>-combinator <span class=\"hljs-literal\">true</span></code></pre>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- block-opening-brace-space-before <span class=\"hljs-string\">\"[<span class=\"hljs-subst\">\\\"</span>always<span class=\"hljs-subst\">\\\"</span>, {<span class=\"hljs-subst\">\\\"</span>ignoreAtRules<span class=\"hljs-subst\">\\\"</span>: [<span class=\"hljs-subst\">\\\"</span>else<span class=\"hljs-subst\">\\\"</span>]}]\"</span></code></pre>\n<p>The script loads Bootstrap's CSS (from its CDN) and runs it through the configured rule.</p>\n<p>It will end up printing some simple stats like this:</p>\n<pre><code class=\"hljs language-shell\"><span class=\"hljs-symbol\">Warnings:</span> <span class=\"hljs-number\">1441</span>\n<span class=\"hljs-symbol\">Mean:</span> <span class=\"hljs-number\">74.17598357142856</span> ms\n<span class=\"hljs-symbol\">Deviation:</span> <span class=\"hljs-number\">16.63969674310928</span> ms</code></pre>\n<p>What can you do with this? <strong>When writing new rules or refactoring existing rules, use these measurements to determine the efficiency of your code.</strong></p>\n<p>A stylelint rule can repeat it's core logic many, many times (e.g. checking every value node of every declaration in a vast CSS codebase). So it's worth paying attention to performance and doing what we can to improve it!</p>\n<p><strong>This is a great way to contribute if you just want a quick little project.</strong> Try picking a rule and seeing if there's anything you can do to speed it up.</p>\n<p>Make sure to include benchmark measurements in your PR's!</p>\n","__filename":"developer-guide/benchmarks.md","__url":"/developer-guide/benchmarks/","__resourceUrl":"/developer-guide/benchmarks/index.html","__dataUrl":"/developer-guide/benchmarks/index.html.8c53f76a5907c563c75a63eed1ca109d.json"}