{"head":{"title":"Benchmarks","description":"Benchmarks There's a simple way to run benchmarks on any given rule with any valid config for it: If the config argument is anything otherâ€¦"},"body":"<h1 id=\"benchmarks\"><a href=\"#benchmarks\" class=\"phenomic-HeadingAnchor\">#</a>Benchmarks</h1>\n<p>There&#x27;s a simple way to run benchmarks on any given rule with any valid config for it:</p>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- [rule-name] [config]</code></pre>\n<p>If the <code>config</code> argument is anything other than a string or a boolean, it must be valid JSON wrapped in quotation marks.</p>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- selector-combinator-space-after never</code></pre>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- selector-combinator-space-after always</code></pre>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- selector-no-combinator true</code></pre>\n<pre><code class=\"hljs language-shell\">npm run benchmark-rule -- block-opening-brace-space-before \"[\\\"always\\\", {\\\"ignoreAtRules\\\": [\\\"else\\\"]}]\"</code></pre>\n<p>The script loads Bootstrap&#x27;s CSS (from its CDN) and runs it through the configured rule.</p>\n<p>It will end up printing some simple stats like this:</p>\n<pre><code class=\"hljs language-shell\">Warnings: 1441\nMean: 74.17598357142856 ms\nDeviation: 16.63969674310928 ms</code></pre>\n<p>What can you do with this? <strong>When writing new rules or refactoring existing rules, use these measurements to determine the efficiency of your code.</strong></p>\n<p>A stylelint rule can repeat it&#x27;s core logic many, many times (e.g. checking every value node of every declaration in a vast CSS codebase). So it&#x27;s worth paying attention to performance and doing what we can to improve it!</p>\n<p><strong>This is a great way to contribute if you just want a quick little project.</strong> Try picking a rule and seeing if there&#x27;s anything you can do to speed it up.</p>\n<p>Make sure to include benchmark measurements in your PR&#x27;s!</p>\n","rawBody":"\n# Benchmarks\n\nThere's a simple way to run benchmarks on any given rule with any valid config for it:\n\n```shell\nnpm run benchmark-rule -- [rule-name] [config]\n```\n\nIf the `config` argument is anything other than a string or a boolean, it must be valid JSON wrapped in quotation marks.\n\n```shell\nnpm run benchmark-rule -- selector-combinator-space-after never\n```\n\n```shell\nnpm run benchmark-rule -- selector-combinator-space-after always\n```\n\n```shell\nnpm run benchmark-rule -- selector-no-combinator true\n```\n\n```shell\nnpm run benchmark-rule -- block-opening-brace-space-before \"[\\\"always\\\", {\\\"ignoreAtRules\\\": [\\\"else\\\"]}]\"\n```\n\nThe script loads Bootstrap's CSS (from its CDN) and runs it through the configured rule.\n\nIt will end up printing some simple stats like this:\n\n```shell\nWarnings: 1441\nMean: 74.17598357142856 ms\nDeviation: 16.63969674310928 ms\n```\n\nWhat can you do with this? **When writing new rules or refactoring existing rules, use these measurements to determine the efficiency of your code.**\n\nA stylelint rule can repeat it's core logic many, many times (e.g. checking every value node of every declaration in a vast CSS codebase). So it's worth paying attention to performance and doing what we can to improve it!\n\n**This is a great way to contribute if you just want a quick little project.** Try picking a rule and seeing if there's anything you can do to speed it up.\n\nMake sure to include benchmark measurements in your PR's!\n","raw":"---\ntitle: Benchmarks\n---\n\n# Benchmarks\n\nThere's a simple way to run benchmarks on any given rule with any valid config for it:\n\n```shell\nnpm run benchmark-rule -- [rule-name] [config]\n```\n\nIf the `config` argument is anything other than a string or a boolean, it must be valid JSON wrapped in quotation marks.\n\n```shell\nnpm run benchmark-rule -- selector-combinator-space-after never\n```\n\n```shell\nnpm run benchmark-rule -- selector-combinator-space-after always\n```\n\n```shell\nnpm run benchmark-rule -- selector-no-combinator true\n```\n\n```shell\nnpm run benchmark-rule -- block-opening-brace-space-before \"[\\\"always\\\", {\\\"ignoreAtRules\\\": [\\\"else\\\"]}]\"\n```\n\nThe script loads Bootstrap's CSS (from its CDN) and runs it through the configured rule.\n\nIt will end up printing some simple stats like this:\n\n```shell\nWarnings: 1441\nMean: 74.17598357142856 ms\nDeviation: 16.63969674310928 ms\n```\n\nWhat can you do with this? **When writing new rules or refactoring existing rules, use these measurements to determine the efficiency of your code.**\n\nA stylelint rule can repeat it's core logic many, many times (e.g. checking every value node of every declaration in a vast CSS codebase). So it's worth paying attention to performance and doing what we can to improve it!\n\n**This is a great way to contribute if you just want a quick little project.** Try picking a rule and seeing if there's anything you can do to speed it up.\n\nMake sure to include benchmark measurements in your PR's!\n","__filename":"developer-guide/benchmarks.md","__url":"/developer-guide/benchmarks/","__resourceUrl":"/developer-guide/benchmarks/index.html","__dataUrl":"/developer-guide/benchmarks/index.html.bd0c881fe35d3841a2965be091a1a5e0.json"}