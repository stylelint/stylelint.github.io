{"head":{"description":"Writing formatters A formatter is a function that accepts an array of these stylelint result objects and outputs a string:â€¦","title":"Writing formatters"},"body":"<h1 id=\"writing-formatters\"><a href=\"#writing-formatters\" class=\"phenomic-HeadingAnchor\">#</a>Writing formatters</h1>\n<p>A formatter is a function that accepts <em>an array of these stylelint result objects</em> and outputs a string:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// A stylelint result object</span>\n{\n  <span class=\"hljs-attr\">source</span>:  <span class=\"hljs-string\">\"path/to/file.css\"</span>, <span class=\"hljs-comment\">// The filepath or PostCSS identifier like &#x3C;input css 1></span>\n  errored: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// This is `true` if at least one rule with an \"error\"-level severity triggered a warning</span>\n  warnings: [ <span class=\"hljs-comment\">// Array of rule violation warning objects, each like the following ...</span>\n    {\n      <span class=\"hljs-attr\">line</span>: <span class=\"hljs-number\">3</span>,\n      <span class=\"hljs-attr\">column</span>: <span class=\"hljs-number\">12</span>,\n      <span class=\"hljs-attr\">rule</span>: <span class=\"hljs-string\">\"block-no-empty\"</span>,\n      <span class=\"hljs-attr\">severity</span>: <span class=\"hljs-string\">\"error\"</span>,\n      <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">\"You should not have an empty block (block-no-empty)\"</span>\n    },\n    ..\n  ],\n  <span class=\"hljs-attr\">deprecations</span>: [ <span class=\"hljs-comment\">// Array of deprecation warning objects, each like the following ...</span>\n    {\n      <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">\"Feature X has been deprecated and will be removed in the next major version.\"</span>,\n      <span class=\"hljs-attr\">reference</span>: <span class=\"hljs-string\">\"http://stylelint.io/docs/feature-x.md\"</span>\n    }\n  ],\n  <span class=\"hljs-attr\">invalidOptionWarnings</span>: [ <span class=\"hljs-comment\">// Array of invalid option warning objects, each like the following ...</span>\n    {\n      <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">\"Invalid option X for rule Y\"</span>,\n    }\n  ],\n  <span class=\"hljs-attr\">ignored</span>: <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// This is `true` if the file's path matches a provided ignore pattern</span>\n}</code></pre>\n<h2 id=\"stylelintformatters\"><a href=\"#stylelintformatters\" class=\"phenomic-HeadingAnchor\">#</a><code>stylelint.formatters</code></h2>\n<p>stylelint's internal formatters are exposed publicly in <code>stylelint.formatters</code>.</p>\n","__filename":"developer-guide/formatters.md","__url":"/developer-guide/formatters/","__resourceUrl":"/developer-guide/formatters/index.html","__dataUrl":"/developer-guide/formatters/index.html.9c3c63500945b7bf9862794bd03e1607.json"}