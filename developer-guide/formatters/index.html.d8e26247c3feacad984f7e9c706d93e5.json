{"head":{"title":"Writing formatters","description":"Writing formatters A formatter is a function that accepts an array of these stylelint result objects and outputs a string:"},"body":"<h1 id=\"writing-formatters\"><a href=\"#writing-formatters\" class=\"phenomic-HeadingAnchor\">#</a>Writing formatters</h1>\n<p>A formatter is a function that accepts <em>an array of these stylelint result objects</em> and outputs a string:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// A stylelint result object</span>\n{\n  source:  <span class=\"hljs-string\">\"path/to/file.css\"</span>, <span class=\"hljs-comment\">// The filepath or PostCSS identifier like &lt;input css 1&gt;</span>\n  errored: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// This is `true` if at least one rule with an \"error\"-level severity triggered a warning</span>\n  warnings: [ <span class=\"hljs-comment\">// Array of rule violation warning objects, each like the following ...</span>\n    {\n      line: <span class=\"hljs-number\">3</span>,\n      column: <span class=\"hljs-number\">12</span>,\n      rule: <span class=\"hljs-string\">\"block-no-empty\"</span>,\n      severity: <span class=\"hljs-string\">\"error\"</span>,\n      text: <span class=\"hljs-string\">\"You should not have an empty block (block-no-empty)\"</span>\n    },\n    ..\n  ],\n  deprecations: [ <span class=\"hljs-comment\">// Array of deprecation warning objects, each like the following ...</span>\n    {\n      text: <span class=\"hljs-string\">\"Feature X has been deprecated and will be removed in the next major version.\"</span>,\n      reference: <span class=\"hljs-string\">\"http://stylelint.io/feature-x/\"</span>\n    }\n  ],\n  invalidOptionWarnings: [ <span class=\"hljs-comment\">// Array of invalid option warning objects, each like the following ...</span>\n    {\n      text: <span class=\"hljs-string\">\"Invalid option X for rule Y\"</span>,\n    }\n  ]\n}</code></pre>\n","rawBody":"\n# Writing formatters\n\nA formatter is a function that accepts *an array of these stylelint result objects* and outputs a string:\n\n```js\n// A stylelint result object\n{\n  source:  \"path/to/file.css\", // The filepath or PostCSS identifier like <input css 1>\n  errored: true, // This is `true` if at least one rule with an \"error\"-level severity triggered a warning\n  warnings: [ // Array of rule violation warning objects, each like the following ...\n    {\n      line: 3,\n      column: 12,\n      rule: \"block-no-empty\",\n      severity: \"error\",\n      text: \"You should not have an empty block (block-no-empty)\"\n    },\n    ..\n  ],\n  deprecations: [ // Array of deprecation warning objects, each like the following ...\n    {\n      text: \"Feature X has been deprecated and will be removed in the next major version.\",\n      reference: \"http://stylelint.io/feature-x/\"\n    }\n  ],\n  invalidOptionWarnings: [ // Array of invalid option warning objects, each like the following ...\n    {\n      text: \"Invalid option X for rule Y\",\n    }\n  ]\n}\n```\n","raw":"---\ntitle: Writing formatters\n---\n\n# Writing formatters\n\nA formatter is a function that accepts *an array of these stylelint result objects* and outputs a string:\n\n```js\n// A stylelint result object\n{\n  source:  \"path/to/file.css\", // The filepath or PostCSS identifier like <input css 1>\n  errored: true, // This is `true` if at least one rule with an \"error\"-level severity triggered a warning\n  warnings: [ // Array of rule violation warning objects, each like the following ...\n    {\n      line: 3,\n      column: 12,\n      rule: \"block-no-empty\",\n      severity: \"error\",\n      text: \"You should not have an empty block (block-no-empty)\"\n    },\n    ..\n  ],\n  deprecations: [ // Array of deprecation warning objects, each like the following ...\n    {\n      text: \"Feature X has been deprecated and will be removed in the next major version.\",\n      reference: \"http://stylelint.io/feature-x/\"\n    }\n  ],\n  invalidOptionWarnings: [ // Array of invalid option warning objects, each like the following ...\n    {\n      text: \"Invalid option X for rule Y\",\n    }\n  ]\n}\n```\n","__filename":"developer-guide/formatters.md","__url":"/developer-guide/formatters/","__resourceUrl":"/developer-guide/formatters/index.html","__dataUrl":"/developer-guide/formatters/index.html.d8e26247c3feacad984f7e9c706d93e5.json"}