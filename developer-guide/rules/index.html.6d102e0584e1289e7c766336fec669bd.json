{"head":{"title":"Writing rules","description":"Writing rules\n\nHave a look at the rules guide to familiarize yourself the rule naming conventions.\n\nLet everyone know\n\nFirst, open an issue…"},"body":"<h1 id=\"writing-rules\"><a class=\"markdownIt-Anchor\" href=\"#writing-rules\">#</a> Writing rules</h1>\n<p>Have a look at the <a href=\"/user-guide/rules\">rules guide</a> to familiarize yourself the rule naming conventions.</p>\n<h2 id=\"let-everyone-know\"><a class=\"markdownIt-Anchor\" href=\"#let-everyone-know\">#</a> Let everyone know</h2>\n<ol>\n<li>First, open <a href=\"https://github.com/stylelint/stylelint/issues/new\">an issue</a> and let everyone else know when you intend to start on the new rule.</li>\n<li>Once you have something to show, create a <a href=\"https://github.com/stylelint/stylelint/compare\">pull request</a>.</li>\n</ol>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p>Use explicit, rather than implicit, options. For example:</p>\n<ul>\n<li><code>color-hex-case: &quot;upper&quot;|&quot;lower&quot;</code> rather than <code>color-hex-uppercase: &quot;always&quot;|&quot;never&quot;</code></li>\n</ul>\n<p>As <code>color-hex-uppercase: &quot;never&quot;</code> <em>implies</em> always lowercase.</p>\n<h2 id=\"messages\"><a class=\"markdownIt-Anchor\" href=\"#messages\">#</a> Messages</h2>\n<p>Take the form of:</p>\n<ul>\n<li>“Expected a … something”.</li>\n<li>“Unexpected … something” (for rejection e.g. when something is disallowed).</li>\n</ul>\n<h2 id=\"readme\"><a class=\"markdownIt-Anchor\" href=\"#readme\">#</a> README</h2>\n<p>Each rule must be accompanied by a README, which takes the form of:</p>\n<ol>\n<li>Rule name.</li>\n<li>Single line description.</li>\n<li>Code example (if necessary).</li>\n<li>Expanded description (if necessary).</li>\n<li>Options (if applicable).</li>\n<li>Example patterns that are considered warnings (for each option value).</li>\n<li>Example patterns that are <em>not</em> considered warnings (for each option value).</li>\n<li>Optional options (if applicable).</li>\n</ol>\n<h2 id=\"single-line-descriptions\"><a class=\"markdownIt-Anchor\" href=\"#single-line-descriptions\">#</a> Single line descriptions</h2>\n<p>Take the form of:</p>\n<ul>\n<li>“Disallow …” (for <code>no</code> rules).</li>\n<li>“Limit …” (for <code>max</code> rules).</li>\n<li>“Require …” (for <code>after</code>, <code>before</code> and <code>inside</code> rules).</li>\n<li>“Specify …” (for everything else).</li>\n</ul>\n<h2 id=\"tests\"><a class=\"markdownIt-Anchor\" href=\"#tests\">#</a> Tests</h2>\n<p>Each rule must be accompanied by tests that contain:</p>\n<ul>\n<li>All patterns that are considered warnings.</li>\n<li>All patterns that should <em>not</em> be considered warnings.</li>\n</ul>\n<h3 id=\"running-tests\"><a class=\"markdownIt-Anchor\" href=\"#running-tests\">#</a> Running tests</h3>\n<p>You can run the tests via:</p>\n<pre><code class=\"language-console\">npm <span class=\"hljs-built_in\">test</span>\n</code></pre>\n<p>To run tests in a single file, instead of all the tests at once, you’ll need to use <code>babel-tape-runner</code> (because the codebase is ES6). For example, to run the test for the <code>color-hex-case</code> rule:</p>\n<pre><code class=\"language-console\">.<span class=\"hljs-regexp\">/node_modules/</span>.bin<span class=\"hljs-regexp\">/babel-tape-runner src/</span>rules<span class=\"hljs-regexp\">/color-hex-case/</span>__tests__/index.js\n</code></pre>\n<h2 id=\"wiring-up-the-rule-up\"><a class=\"markdownIt-Anchor\" href=\"#wiring-up-the-rule-up\">#</a> Wiring up the rule up</h2>\n<p>The final step is to refer to the new rule in the following places:</p>\n<ul>\n<li><a href=\"https://github.com/stylelint/stylelint/blob/master/src/rules/index.js\">The rules <code>index.js</code> file</a></li>\n<li><a href=\"https://github.com/stylelint/stylelint/blob/master/CHANGELOG\">The CHANGELOG</a></li>\n<li><a href=\"https://github.com/stylelint/stylelint/blob/master/user-guide/rules\">The list of rules</a></li>\n<li><a href=\"https://github.com/stylelint/stylelint/blob/master/user-guide/example-config\">The example config</a></li>\n</ul>\n","rawBody":"\n# Writing rules\n\nHave a look at the [rules guide](/user-guide/rules) to familiarize yourself the rule naming conventions.\n\n## Let everyone know\n\n1. First, open [an issue](https://github.com/stylelint/stylelint/issues/new) and let everyone else know when you intend to start on the new rule.\n2. Once you have something to show, create a [pull request](https://github.com/stylelint/stylelint/compare).\n\n## Options\n\nUse explicit, rather than implicit, options. For example:\n\n- `color-hex-case: \"upper\"|\"lower\"` rather than `color-hex-uppercase: \"always\"|\"never\"`\n\nAs `color-hex-uppercase: \"never\"` *implies* always lowercase.\n\n## Messages\n\nTake the form of:\n\n- \"Expected a ... something\".\n- \"Unexpected ... something\" (for rejection e.g. when something is disallowed).\n\n## README\n\nEach rule must be accompanied by a README, which takes the form of:\n\n1. Rule name.\n2. Single line description.\n3. Code example (if necessary).\n4. Expanded description (if necessary).\n5. Options (if applicable).\n6. Example patterns that are considered warnings (for each option value).\n7. Example patterns that are *not* considered warnings (for each option value).\n8. Optional options (if applicable).\n\n## Single line descriptions\n\nTake the form of:\n\n- \"Disallow ...\" (for `no` rules).\n- \"Limit ...\" (for `max` rules).\n- \"Require ...\" (for `after`, `before` and `inside` rules).\n- \"Specify ...\" (for everything else).\n\n## Tests\n\nEach rule must be accompanied by tests that contain:\n\n- All patterns that are considered warnings.\n- All patterns that should *not* be considered warnings.\n\n### Running tests\n\nYou can run the tests via:\n\n```console\nnpm test\n```\n\nTo run tests in a single file, instead of all the tests at once, you'll need to use `babel-tape-runner` (because the codebase is ES6). For example, to run the test for the `color-hex-case` rule:\n\n```console\n./node_modules/.bin/babel-tape-runner src/rules/color-hex-case/__tests__/index.js\n```\n\n## Wiring up the rule up\n\nThe final step is to refer to the new rule in the following places:\n\n- [The rules `index.js` file](https://github.com/stylelint/stylelint/blob/master/src/rules/index.js)\n- [The CHANGELOG](https://github.com/stylelint/stylelint/blob/master/CHANGELOG)\n- [The list of rules](https://github.com/stylelint/stylelint/blob/master/user-guide/rules)\n- [The example config](https://github.com/stylelint/stylelint/blob/master/user-guide/example-config)\n","raw":"---\ntitle: Writing rules\n---\n\n# Writing rules\n\nHave a look at the [rules guide](/user-guide/rules) to familiarize yourself the rule naming conventions.\n\n## Let everyone know\n\n1. First, open [an issue](https://github.com/stylelint/stylelint/issues/new) and let everyone else know when you intend to start on the new rule.\n2. Once you have something to show, create a [pull request](https://github.com/stylelint/stylelint/compare).\n\n## Options\n\nUse explicit, rather than implicit, options. For example:\n\n- `color-hex-case: \"upper\"|\"lower\"` rather than `color-hex-uppercase: \"always\"|\"never\"`\n\nAs `color-hex-uppercase: \"never\"` *implies* always lowercase.\n\n## Messages\n\nTake the form of:\n\n- \"Expected a ... something\".\n- \"Unexpected ... something\" (for rejection e.g. when something is disallowed).\n\n## README\n\nEach rule must be accompanied by a README, which takes the form of:\n\n1. Rule name.\n2. Single line description.\n3. Code example (if necessary).\n4. Expanded description (if necessary).\n5. Options (if applicable).\n6. Example patterns that are considered warnings (for each option value).\n7. Example patterns that are *not* considered warnings (for each option value).\n8. Optional options (if applicable).\n\n## Single line descriptions\n\nTake the form of:\n\n- \"Disallow ...\" (for `no` rules).\n- \"Limit ...\" (for `max` rules).\n- \"Require ...\" (for `after`, `before` and `inside` rules).\n- \"Specify ...\" (for everything else).\n\n## Tests\n\nEach rule must be accompanied by tests that contain:\n\n- All patterns that are considered warnings.\n- All patterns that should *not* be considered warnings.\n\n### Running tests\n\nYou can run the tests via:\n\n```console\nnpm test\n```\n\nTo run tests in a single file, instead of all the tests at once, you'll need to use `babel-tape-runner` (because the codebase is ES6). For example, to run the test for the `color-hex-case` rule:\n\n```console\n./node_modules/.bin/babel-tape-runner src/rules/color-hex-case/__tests__/index.js\n```\n\n## Wiring up the rule up\n\nThe final step is to refer to the new rule in the following places:\n\n- [The rules `index.js` file](https://github.com/stylelint/stylelint/blob/master/src/rules/index.js)\n- [The CHANGELOG](https://github.com/stylelint/stylelint/blob/master/CHANGELOG)\n- [The list of rules](https://github.com/stylelint/stylelint/blob/master/user-guide/rules)\n- [The example config](https://github.com/stylelint/stylelint/blob/master/user-guide/example-config)\n","__filename":"developer-guide/rules.md","__url":"/developer-guide/rules/","__resourceUrl":"/developer-guide/rules/index.html","__dataUrl":"/developer-guide/rules/index.html.6d102e0584e1289e7c766336fec669bd.json"}