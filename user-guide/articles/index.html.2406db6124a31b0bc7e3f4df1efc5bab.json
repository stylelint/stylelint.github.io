{"head":{"title":"Articles","description":"Articles A collection of articles and tutorials about stylelint. Lint your CSS with stylelint: Written by one of stylelint's co-creators…"},"body":"<h1 id=\"articles\"><a href=\"#articles\" class=\"phenomic-HeadingAnchor\">#</a>Articles</h1>\n<p>A collection of articles and tutorials about stylelint.</p>\n<ul>\n<li><a href=\"https://css-tricks.com/stylelint/\">Lint your CSS with stylelint</a>: Written by one of stylelint&#x27;s co-creators, this is the definitive article on stylelint.</li>\n<li><a href=\"https://www.smashingmagazine.com/2016/05/stylelint-the-style-sheet-linter-weve-always-wanted/\">Stylelint: The Style Sheet Linter We’ve Always Wanted</a>: Why linting a stylesheet matters and how stylelint brings order to a stylesheet. <em>(We now recommend using <a href=\"https://github.com/olegskl/gulp-stylelint\"><code>gulp-stylelint</code></a>, rather than the <code>gulp-postcss</code> and <code>postcss-reporter</code> combination outlined in the article. Also, both the “prevent qualified selectors” and “enforce shorthand values” plugins were rolled into the core rules as <code>selector-no-qualifying-type</code> and <code>shorthand-property-no-redundant-values</code> respectively)</em></li>\n<li><a href=\"https://code.facebook.com/posts/879890885467584/improving-css-quality-at-facebook-and-beyond\">Improving CSS quality at Facebook and beyond</a>: Detailing Facebook&#x27;s switch from a custom CSS linter to stylelint.</li>\n<li><a href=\"http://www.creativenightly.com/2016/02/How-to-lint-your-css-with-stylelint/\">How to lint your Sass/CSS properly with Stylelint</a>: Introduction to linting CSS. <em>(As above, we now recommend using <a href=\"https://github.com/olegskl/gulp-stylelint\"><code>gulp-stylelint</code></a>, rather than the <code>gulp-postcss</code> and <code>postcss-reporter</code> combination outlined in the article)</em></li>\n<li><a href=\"http://www.sitepoint.com/improving-the-quality-of-your-css-with-postcss/\">Improving the Quality of Your CSS with PostCSS</a>: Introduction to various PostCSS linting tools. <em>(As above, we recommend using <a href=\"https://github.com/olegskl/gulp-stylelint\"><code>gulp-stylelint</code></a>. Also, <code>doiuse</code> is now bundled in stylelint as the <code>no-unsupported-browser-features</code> rule)</em></li>\n<li><a href=\"https://benfrain.com/floss-your-style-sheets-with-stylelint/\">Floss your style sheets with Stylelint</a>: The first article written about stylelint. <em>(As before, we now recommend using <a href=\"https://github.com/olegskl/gulp-stylelint\"><code>gulp-stylelint</code></a>)</em></li>\n</ul>\n<p>Please send us a Pull Request to add your own article to the list.</p>\n","rawBody":"\n# Articles\n\nA collection of articles and tutorials about stylelint.\n\n-   [Lint your CSS with stylelint](https://css-tricks.com/stylelint/): Written by one of stylelint's co-creators, this is the definitive article on stylelint.\n-   [Stylelint: The Style Sheet Linter We’ve Always Wanted](https://www.smashingmagazine.com/2016/05/stylelint-the-style-sheet-linter-weve-always-wanted/): Why linting a stylesheet matters and how stylelint brings order to a stylesheet. *(We now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint), rather than the `gulp-postcss` and `postcss-reporter` combination outlined in the article. Also, both the “prevent qualified selectors” and “enforce shorthand values” plugins were rolled into the core rules as `selector-no-qualifying-type` and `shorthand-property-no-redundant-values` respectively)*\n-   [Improving CSS quality at Facebook and beyond](https://code.facebook.com/posts/879890885467584/improving-css-quality-at-facebook-and-beyond): Detailing Facebook's switch from a custom CSS linter to stylelint.\n-   [How to lint your Sass/CSS properly with Stylelint](http://www.creativenightly.com/2016/02/How-to-lint-your-css-with-stylelint/): Introduction to linting CSS. *(As above, we now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint), rather than the `gulp-postcss` and `postcss-reporter` combination outlined in the article)*\n-   [Improving the Quality of Your CSS with PostCSS](http://www.sitepoint.com/improving-the-quality-of-your-css-with-postcss/): Introduction to various PostCSS linting tools. *(As above, we recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint). Also, `doiuse` is now bundled in stylelint as the `no-unsupported-browser-features` rule)*\n-   [Floss your style sheets with Stylelint](https://benfrain.com/floss-your-style-sheets-with-stylelint/): The first article written about stylelint. *(As before, we now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint))*\n\nPlease send us a Pull Request to add your own article to the list.\n","raw":"---\ntitle: Articles\n---\n\n# Articles\n\nA collection of articles and tutorials about stylelint.\n\n-   [Lint your CSS with stylelint](https://css-tricks.com/stylelint/): Written by one of stylelint's co-creators, this is the definitive article on stylelint.\n-   [Stylelint: The Style Sheet Linter We’ve Always Wanted](https://www.smashingmagazine.com/2016/05/stylelint-the-style-sheet-linter-weve-always-wanted/): Why linting a stylesheet matters and how stylelint brings order to a stylesheet. *(We now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint), rather than the `gulp-postcss` and `postcss-reporter` combination outlined in the article. Also, both the “prevent qualified selectors” and “enforce shorthand values” plugins were rolled into the core rules as `selector-no-qualifying-type` and `shorthand-property-no-redundant-values` respectively)*\n-   [Improving CSS quality at Facebook and beyond](https://code.facebook.com/posts/879890885467584/improving-css-quality-at-facebook-and-beyond): Detailing Facebook's switch from a custom CSS linter to stylelint.\n-   [How to lint your Sass/CSS properly with Stylelint](http://www.creativenightly.com/2016/02/How-to-lint-your-css-with-stylelint/): Introduction to linting CSS. *(As above, we now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint), rather than the `gulp-postcss` and `postcss-reporter` combination outlined in the article)*\n-   [Improving the Quality of Your CSS with PostCSS](http://www.sitepoint.com/improving-the-quality-of-your-css-with-postcss/): Introduction to various PostCSS linting tools. *(As above, we recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint). Also, `doiuse` is now bundled in stylelint as the `no-unsupported-browser-features` rule)*\n-   [Floss your style sheets with Stylelint](https://benfrain.com/floss-your-style-sheets-with-stylelint/): The first article written about stylelint. *(As before, we now recommend using [`gulp-stylelint`](https://github.com/olegskl/gulp-stylelint))*\n\nPlease send us a Pull Request to add your own article to the list.\n","__filename":"user-guide/articles.md","__url":"/user-guide/articles/","__resourceUrl":"/user-guide/articles/index.html","__dataUrl":"/user-guide/articles/index.html.2406db6124a31b0bc7e3f4df1efc5bab.json"}