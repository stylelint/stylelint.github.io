{"head":{"description":"The stylelint CLI Installation stylelint is an npm package. Install it using: Usage stylelint --help prints the CLI documentation. The CLIâ€¦","title":"The stylelint CLI"},"body":"<h1 id=\"the-stylelint-cli\"><a href=\"#the-stylelint-cli\" class=\"phenomic-HeadingAnchor\">#</a>The stylelint CLI</h1>\n<h2 id=\"installation\"><a href=\"#installation\" class=\"phenomic-HeadingAnchor\">#</a>Installation</h2>\n<p>stylelint is an <a href=\"https://www.npmjs.com/package/stylelint\">npm package</a>. Install it using:</p>\n<pre><code class=\"hljs language-shell\">npm install -g stylelint</code></pre>\n<h2 id=\"usage\"><a href=\"#usage\" class=\"phenomic-HeadingAnchor\">#</a>Usage</h2>\n<p><code>stylelint --help</code> prints the CLI documentation.</p>\n<p>The CLI outputs formatted results into <code>process.stdout</code>, which you can read with your human eyes or pipe elsewhere (e.g. write the information to a file).</p>\n<h3 id=\"examples\"><a href=\"#examples\" class=\"phenomic-HeadingAnchor\">#</a>Examples</h3>\n<p>When you run commands similar to the examples below, be sure to include the quotation marks around file globs. This ensures that you can use the powers of node-glob (like the <code>**</code> globstar) regardless of your shell.</p>\n<p>Looking for <code>.stylelintrc</code> and linting all <code>.css</code> files in the <code>foo</code> directory:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/*.css\"</code></pre>\n<p>Looking for <code>.stylelintrc</code> and linting <code>stdin</code>:</p>\n<pre><code class=\"hljs language-shell\">echo \"a { color: pink; }\" | stylelint</code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config to lint all <code>.css</code> files in the <code>foo</code> directory, then writing the output to <code>myTestReport.txt</code>:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/*.css\" --config bar/mySpecialConfig.json > myTestReport.txt</code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config, with quiet mode on, to lint all <code>.css</code> files in the <code>foo</code> directory and any of its subdirectories and also all <code>.css</code> files in the <code>bar directory</code>, then writing the JSON-formatted output to <code>myJsonReport.json</code>:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/**/*.css bar/*.css\" -q -f json --config bar/mySpecialConfig.json > myJsonReport.json</code></pre>\n<p>Caching processed <code>.scss</code> files in order to operate only on changed ones in the <code>foo</code> directory, using the <code>cache</code> and <code>cache-location</code> options:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/**/*.scss\" --cache --cache-location \"/Users/user/.stylelintcache/\"</code></pre>\n<p>Linting all the <code>.scss</code> files in the <code>foo</code> directory, using the <code>syntax</code> option:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/**/*.scss\" --syntax scss</code></pre>\n<p>In addition to <code>--syntax scss</code>, stylelint supports <code>--syntax less</code> and <code>--syntax sugarss</code> by default. If you're using one of the default syntaxes, you may not need to provide a <code>--syntax</code> option: non-standard syntaxes can be automatically inferred from the following file extensions: <code>.less</code>, <code>.scss</code>, and <code>.sss</code>.</p>\n<p>Additionally, stylelint can accept a custom <a href=\"https://github.com/postcss/postcss#syntaxes\">PostCSS-compatible syntax</a>. To use a custom syntax, supply a syntax module name or path to the syntax file: <code>--custom-syntax custom-syntax</code> or <code>--custom-syntax ./path/to/custom-syntax</code>.</p>\n<p>Note, however, that stylelint can provide no guarantee that core rules will work with syntaxes other than the defaults listed above.</p>\n<h3 id=\"recursively-linting-a-directory\"><a href=\"#recursively-linting-a-directory\" class=\"phenomic-HeadingAnchor\">#</a>Recursively linting a directory</h3>\n<p>To recursively lint a directory, using the <code>**</code> globstar:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/**/*.scss\"</code></pre>\n<p>The quotation marks around the glob are important because they will allow stylelint to interpret the glob, using node-glob, instead of your shell, which might not support all the same features.</p>\n<h3 id=\"autofixing-errors\"><a href=\"#autofixing-errors\" class=\"phenomic-HeadingAnchor\">#</a>Autofixing errors</h3>\n<p>With <code>--fix</code> option stylelint will fix as many errors as possible. The fixes are made to the actual source files. All unfixed errors will be reported.</p>\n<p>Linting all <code>.css</code> files in the <code>foo</code> directory. And fixing source files if violated rules support autofixing:</p>\n<pre><code class=\"hljs language-shell\">stylelint \"foo/*.css\" --fix</code></pre>\n<h2 id=\"syntax-errors\"><a href=\"#syntax-errors\" class=\"phenomic-HeadingAnchor\">#</a>Syntax errors</h2>\n<p>The CLI informs you about syntax errors in your CSS.\nIt uses the same format as it uses for linting violations.\nThe error name is <code>CssSyntaxError</code>.</p>\n<h2 id=\"exit-codes\"><a href=\"#exit-codes\" class=\"phenomic-HeadingAnchor\">#</a>Exit codes</h2>\n<p>The CLI can exit the process with the following exit codes:</p>\n<ul>\n<li>1: Something unknown went wrong.</li>\n<li>2: At least one rule with an \"error\"-level severity triggered at least one violations.</li>\n<li>78: There was some problem with the configuration file.</li>\n<li>80: A file glob was passed, but it found no files.</li>\n</ul>\n","__filename":"user-guide/cli.md","__url":"/user-guide/cli/","__resourceUrl":"/user-guide/cli/index.html","__dataUrl":"/user-guide/cli/index.html.e2ba1d7529d7123ba48d39e8ccf416d4.json"}