{"head":{"title":"The stylelint CLI"},"body":"<h1 id=\"the-stylelint-cli\"><a class=\"markdownIt-Anchor\" href=\"#the-stylelint-cli\">#</a> The stylelint CLI</h1>\n<p><code>stylelint --help</code> prints the CLI documentation.</p>\n<p>The CLI outputs formatted results into <code>process.stdout</code>, which you can read with your human eyes or pipe elsewhere (e.g. write the information to a file).</p>\n<h2 id=\"usage-examples\"><a class=\"markdownIt-Anchor\" href=\"#usage-examples\">#</a> Usage examples</h2>\n<p>Looking for <code>.stylelintrc</code> and linting all <code>.css</code> files in the <code>foo</code> directory:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-attribute\">stylelint</span> foo/<span class=\"hljs-regexp\">*.css</span>\n</code></pre>\n<p>Looking for <code>.stylelintrc</code> and linting <code>stdin</code>:</p>\n<pre><code class=\"language-shell\">echo <span class=\"hljs-string\">\"a { color: pink; }\"</span> <span class=\"hljs-string\">| stylelint</span>\n</code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config to lint all <code>.css</code> files in the <code>foo</code> directory, then writing the output to <code>myTestReport.txt</code>:</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-attribute\">stylelint</span> foo/<span class=\"hljs-regexp\">*.css</span> --config bar/mySpecialConfig.json &gt; myTestReport.txt\n</code></pre>\n<p>Using <code>bar/mySpecialConfig.json</code> as config, with quiet mode on, to lint all <code>.css</code> files in the <code>foo</code> directory and any of its subdirectories and also all <code>.css</code> files in the <code>bar directory</code>, then writing the JSON-formatted output to <code>myJsonReport.json</code>:</p>\n<pre><code class=\"language-shell\">stylelint foo<span class=\"hljs-comment\">/**/</span>*.css <span class=\"hljs-keyword\">bar/*.css </span>-q -f <span class=\"hljs-keyword\">json </span>--<span class=\"hljs-built_in\">config</span> <span class=\"hljs-keyword\">bar/mySpecialConfig.json </span>&gt; myJsonReport.<span class=\"hljs-keyword\">json\n</span></code></pre>\n<p>The linter can parse the SCSS!</p>\n<pre><code class=\"language-shell\">stylelint foo/<span class=\"hljs-keyword\">*</span><span class=\"hljs-keyword\">*</span>/<span class=\"hljs-keyword\">*</span>.scss --syntax scss\n</code></pre>\n<h2 id=\"exit-codes\"><a class=\"markdownIt-Anchor\" href=\"#exit-codes\">#</a> Exit codes</h2>\n<p>The CLI can exit the process with the following exit codes:</p>\n<ul>\n<li>1: Something unknown went wrong.</li>\n<li>2: At least one rule with an “error”-level severity triggered at least one warning.</li>\n<li>78: There was some problem with the configuration file.</li>\n<li>80: A file glob was passed both it found no files.</li>\n</ul>\n","rawBody":"\n# The stylelint CLI\n\n`stylelint --help` prints the CLI documentation.\n\nThe CLI outputs formatted results into `process.stdout`, which you can read with your human eyes or pipe elsewhere (e.g. write the information to a file).\n\n## Usage examples\n\nLooking for `.stylelintrc` and linting all `.css` files in the `foo` directory:  \n\n```shell\nstylelint foo/*.css\n```\n\nLooking for `.stylelintrc` and linting `stdin`:\n\n```shell\necho \"a { color: pink; }\" | stylelint\n```\n\nUsing `bar/mySpecialConfig.json` as config to lint all `.css` files in the `foo` directory, then writing the output to `myTestReport.txt`:\n\n```shell\nstylelint foo/*.css --config bar/mySpecialConfig.json > myTestReport.txt\n```\n\nUsing `bar/mySpecialConfig.json` as config, with quiet mode on, to lint all `.css` files in the `foo` directory and any of its subdirectories and also all `.css` files in the `bar directory`, then writing the JSON-formatted output to `myJsonReport.json`:\n\n```shell\nstylelint foo/**/*.css bar/*.css -q -f json --config bar/mySpecialConfig.json > myJsonReport.json\n```\n\nThe linter can parse the SCSS!\n\n```shell\nstylelint foo/**/*.scss --syntax scss\n```\n\n## Exit codes\n\nThe CLI can exit the process with the following exit codes:\n\n- 1: Something unknown went wrong.\n- 2: At least one rule with an \"error\"-level severity triggered at least one warning.\n- 78: There was some problem with the configuration file.\n- 80: A file glob was passed both it found no files.\n","raw":"---\ntitle: The stylelint CLI\n---\n\n# The stylelint CLI\n\n`stylelint --help` prints the CLI documentation.\n\nThe CLI outputs formatted results into `process.stdout`, which you can read with your human eyes or pipe elsewhere (e.g. write the information to a file).\n\n## Usage examples\n\nLooking for `.stylelintrc` and linting all `.css` files in the `foo` directory:  \n\n```shell\nstylelint foo/*.css\n```\n\nLooking for `.stylelintrc` and linting `stdin`:\n\n```shell\necho \"a { color: pink; }\" | stylelint\n```\n\nUsing `bar/mySpecialConfig.json` as config to lint all `.css` files in the `foo` directory, then writing the output to `myTestReport.txt`:\n\n```shell\nstylelint foo/*.css --config bar/mySpecialConfig.json > myTestReport.txt\n```\n\nUsing `bar/mySpecialConfig.json` as config, with quiet mode on, to lint all `.css` files in the `foo` directory and any of its subdirectories and also all `.css` files in the `bar directory`, then writing the JSON-formatted output to `myJsonReport.json`:\n\n```shell\nstylelint foo/**/*.css bar/*.css -q -f json --config bar/mySpecialConfig.json > myJsonReport.json\n```\n\nThe linter can parse the SCSS!\n\n```shell\nstylelint foo/**/*.scss --syntax scss\n```\n\n## Exit codes\n\nThe CLI can exit the process with the following exit codes:\n\n- 1: Something unknown went wrong.\n- 2: At least one rule with an \"error\"-level severity triggered at least one warning.\n- 78: There was some problem with the configuration file.\n- 80: A file glob was passed both it found no files.\n","__filename":"user-guide/cli.md","__url":"/user-guide/cli/"}