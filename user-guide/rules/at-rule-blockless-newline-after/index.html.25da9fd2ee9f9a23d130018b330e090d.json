{"head":{"title":"at-rule-blockless-newline-after","description":"at-rule-blockless-newline-after\n\nRequire a newline after blockless at-rules.\n\nThis rule allows an end-of-line comment separated from the…"},"body":"<h1 id=\"at-rule-blockless-newline-after\"><a href=\"#at-rule-blockless-newline-after\" class=\"phenomic-HeadingAnchor\">#</a>at-rule-blockless-newline-after</h1>\n<p>Require a newline after blockless at-rules.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n\n@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>);\n@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"y.css\"</span>);\n<span class=\"hljs-comment\">/**                 ↑\n * The newline after these semicolons */</span></code></pre>\n<p>This rule allows an end-of-line comment separated from the semicolon by spaces, as long as the comment contains no newlines. For example,</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>); <span class=\"hljs-comment\">/* end-of-line comment */</span></code></pre>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string</code>: <code>&quot;always&quot;</code></p>\n<h3 id=\"always\"><a href=\"#always\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;always&quot;</code></h3>\n<p>There <em>must always</em> be a newline after blockless at-rules.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>); @<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"y.css\"</span>);</code></pre>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>); <span class=\"hljs-selector-tag\">a</span> {};</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>);\n@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"y.css\"</span>);</code></pre>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>); <span class=\"hljs-comment\">/* end-of-line comment */</span>\n<span class=\"hljs-selector-tag\">a</span> {};</code></pre>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(<span class=\"hljs-string\">\"x.css\"</span>);\n\n<span class=\"hljs-selector-tag\">a</span> {};</code></pre>\n","rawBody":"\n# at-rule-blockless-newline-after\n\nRequire a newline after blockless at-rules.\n\n```css\na {}\n\n@import url(\"x.css\");\n@import url(\"y.css\");\n/**                 ↑\n * The newline after these semicolons */\n```\n\nThis rule allows an end-of-line comment separated from the semicolon by spaces, as long as the comment contains no newlines. For example,\n\n```css\n@import url(\"x.css\"); /* end-of-line comment */\n```\n\n## Options\n\n`string`: `\"always\"`\n\n### `\"always\"`\n\nThere *must always* be a newline after blockless at-rules.\n\nThe following patterns are considered warnings:\n\n```css\n@import url(\"x.css\"); @import url(\"y.css\");\n```\n\n```css\n@import url(\"x.css\"); a {};\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(\"x.css\");\n@import url(\"y.css\");\n```\n\n```css\n@import url(\"x.css\"); /* end-of-line comment */\na {};\n```\n\n```css\n@import url(\"x.css\");\n\na {};\n```\n","raw":"---\ntitle: at-rule-blockless-newline-after\n---\n\n# at-rule-blockless-newline-after\n\nRequire a newline after blockless at-rules.\n\n```css\na {}\n\n@import url(\"x.css\");\n@import url(\"y.css\");\n/**                 ↑\n * The newline after these semicolons */\n```\n\nThis rule allows an end-of-line comment separated from the semicolon by spaces, as long as the comment contains no newlines. For example,\n\n```css\n@import url(\"x.css\"); /* end-of-line comment */\n```\n\n## Options\n\n`string`: `\"always\"`\n\n### `\"always\"`\n\nThere *must always* be a newline after blockless at-rules.\n\nThe following patterns are considered warnings:\n\n```css\n@import url(\"x.css\"); @import url(\"y.css\");\n```\n\n```css\n@import url(\"x.css\"); a {};\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(\"x.css\");\n@import url(\"y.css\");\n```\n\n```css\n@import url(\"x.css\"); /* end-of-line comment */\na {};\n```\n\n```css\n@import url(\"x.css\");\n\na {};\n```\n","__filename":"user-guide/rules/at-rule-blockless-newline-after.md","__url":"/user-guide/rules/at-rule-blockless-newline-after/","__resourceUrl":"/user-guide/rules/at-rule-blockless-newline-after/index.html","__dataUrl":"/user-guide/rules/at-rule-blockless-newline-after/index.html.25da9fd2ee9f9a23d130018b330e090d.json"}