{"head":{"description":"at-rule-empty-line-before Require or disallow an empty line before at-rules. If the at-rule is the very first node in a stylesheet then it…","title":"at-rule-empty-line-before"},"body":"<h1 id=\"at-rule-empty-line-before\"><a href=\"#at-rule-empty-line-before\" class=\"phenomic-HeadingAnchor\">#</a>at-rule-empty-line-before</h1>\n<p>Require or disallow an empty line before at-rules.</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n          <span class=\"hljs-comment\">/* ← */</span>\n@<span class=\"hljs-keyword\">media</span> {} <span class=\"hljs-comment\">/* ↑ */</span>\n<span class=\"hljs-comment\">/**          ↑\n *   This line */</span></code></pre>\n<p>If the at-rule is the very first node in a stylesheet then it is ignored.</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string</code>: <code>\"always\"|\"never\"</code></p>\n<h3 id=\"always\"><a href=\"#always\" class=\"phenomic-HeadingAnchor\">#</a><code>\"always\"</code></h3>\n<p>There <em>must always</em> be an empty line before at-rules.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {} @<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h3 id=\"never\"><a href=\"#never\" class=\"phenomic-HeadingAnchor\">#</a><code>\"never\"</code></h3>\n<p>There <em>must never</em> be an empty line before at-rules.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {} @<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h2 id=\"optional-secondary-options\"><a href=\"#optional-secondary-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional secondary options</h2>\n<h3 id=\"except-all-nested-blockless-after-same-name-blockless-blockless-group-first-nested\"><a href=\"#except-all-nested-blockless-after-same-name-blockless-blockless-group-first-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>except: [\"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\", \"first-nested\"]</code></h3>\n<h3 id=\"all-nested\"><a href=\"#all-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>\"all-nested\"</code></h3>\n<p>Reverse the primary option for at-rules that are nested.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n\n  @extend foo;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  @extend foo;\n}</code></pre>\n<h4 id=\"blockless-after-same-name-blockless\"><a href=\"#blockless-after-same-name-blockless\" class=\"phenomic-HeadingAnchor\">#</a><code>\"blockless-after-same-name-blockless\"</code></h4>\n<p>Reverse the primary option for blockless at-rules that follow another blockless at-rule with the same name.</p>\n<p>This means that you can group your blockless at-rules by name.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n\n@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}</code></pre>\n<h4 id=\"blockless-group\"><a href=\"#blockless-group\" class=\"phenomic-HeadingAnchor\">#</a><code>\"blockless-group\"</code></h4>\n<p>Reverse the primary option for at-rules within a blockless group.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<h4 id=\"first-nested\"><a href=\"#first-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>\"first-nested\"</code></h4>\n<p>Reverse the primary option for at-rules that are nested and the first child of their parent node.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  @extend foo;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n\n  @extend foo;\n}</code></pre>\n<h3 id=\"ignore-after-comment-all-nested-blockless-after-same-name-blockless-blockless-group\"><a href=\"#ignore-after-comment-all-nested-blockless-after-same-name-blockless-blockless-group\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"after-comment\", \"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\",]</code></h3>\n<h4 id=\"after-comment\"><a href=\"#after-comment\" class=\"phenomic-HeadingAnchor\">#</a><code>\"after-comment\"</code></h4>\n<p>Ignore at-rules that come after a comment.</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-comment\">/* comment */</span>\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-comment\">/* comment */</span>\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h4 id=\"all-nested-1\"><a href=\"#all-nested-1\" class=\"phenomic-HeadingAnchor\">#</a><code>\"all-nested\"</code></h4>\n<p>Ignore at-rules that are nested.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">a</span> {\n\n  @extend foo;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  @extend foo;\n}\n\n<span class=\"hljs-selector-tag\">b</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n\n  @extend foo;\n}</code></pre>\n<h4 id=\"blockless-after-same-name-blockless-1\"><a href=\"#blockless-after-same-name-blockless-1\" class=\"phenomic-HeadingAnchor\">#</a><code>\"blockless-after-same-name-blockless\"</code></h4>\n<p>Ignore blockless at-rules that follow another blockless at-rule with the same name.</p>\n<p>This means that you can group your blockless at-rules by name.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n\n@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}</code></pre>\n<h4 id=\"blockless-group-1\"><a href=\"#blockless-group-1\" class=\"phenomic-HeadingAnchor\">#</a><code>\"blockless-group\"</code></h4>\n<p>Ignore at-rules within a blockless group.</p>\n<p>For example, with <code>\"always\"</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<h3 id=\"ignoreatrules-array-of-at-rules\"><a href=\"#ignoreatrules-array-of-at-rules\" class=\"phenomic-HeadingAnchor\">#</a><code>ignoreAtRules: [\"array\", \"of\", \"at-rules\"]</code></h3>\n<p>Ignore specified at-rules.</p>\n<p>For example, with <code>\"always\"</code>.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"import\"</span>]</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n@<span class=\"hljs-keyword\">import</span> {}</code></pre>\n","__filename":"user-guide/rules/at-rule-empty-line-before.md","__url":"/user-guide/rules/at-rule-empty-line-before/","__resourceUrl":"/user-guide/rules/at-rule-empty-line-before/index.html","__dataUrl":"/user-guide/rules/at-rule-empty-line-before/index.html.4b3ff401d0ea85cebc13791eb47893d3.json"}