{"head":{"title":"at-rule-empty-line-before","description":"at-rule-empty-line-before Require or disallow an empty line before at-rules. If the at-rule is the very first node in a stylesheet then it…"},"body":"<h1 id=\"at-rule-empty-line-before\"><a href=\"#at-rule-empty-line-before\" class=\"phenomic-HeadingAnchor\">#</a>at-rule-empty-line-before</h1>\n<p>Require or disallow an empty line before at-rules.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n          <span class=\"hljs-comment\">/* ← */</span>\n@<span class=\"hljs-keyword\">media</span> {} <span class=\"hljs-comment\">/* ↑ */</span>\n<span class=\"hljs-comment\">/**          ↑\n *   This line */</span></code></pre>\n<p>If the at-rule is the very first node in a stylesheet then it is ignored.</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string</code>: <code>&quot;always&quot;|&quot;never&quot;</code></p>\n<h3 id=\"always\"><a href=\"#always\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;always&quot;</code></h3>\n<p>There <em>must always</em> be an empty line before at-rules.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {} @<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h3 id=\"never\"><a href=\"#never\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;never&quot;</code></h3>\n<p>There <em>must never</em> be an empty line before at-rules.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {} @<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {}\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h2 id=\"optional-options\"><a href=\"#optional-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional options</h2>\n<h3 id=\"except-all-nested-blockless-after-same-name-blockless-blockless-group-first-nested\"><a href=\"#except-all-nested-blockless-after-same-name-blockless-blockless-group-first-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>except: [&quot;all-nested&quot;, &quot;blockless-after-same-name-blockless&quot;, &quot;blockless-group&quot;, &quot;first-nested&quot;]</code></h3>\n<h3 id=\"all-nested\"><a href=\"#all-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;all-nested&quot;</code></h3>\n<p>Reverse the primary option for at-rules that are nested.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\">a {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">a {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}</code></pre>\n<h4 id=\"blockless-after-same-name-blockless\"><a href=\"#blockless-after-same-name-blockless\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;blockless-after-same-name-blockless&quot;</code></h4>\n<p>Reverse the primary option for blockless at-rules that follow another blockless at-rule with the same name.</p>\n<p>This means that you can group your blockless at-rules by name.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n\n@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);</code></pre>\n<pre><code class=\"hljs language-css\">a {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}</code></pre>\n<h4 id=\"blockless-group\"><a href=\"#blockless-group\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;blockless-group&quot;</code></h4>\n<p>Reverse the primary option for at-rules within a blockless group.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<h4 id=\"first-nested\"><a href=\"#first-nested\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;first-nested&quot;</code></h4>\n<p>Reverse the primary option for at-rules that are nested and the first child of their parent node.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\">a {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">a {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}</code></pre>\n<h3 id=\"ignore-after-comment-all-nested-blockless-after-same-name-blockless-blockless-group\"><a href=\"#ignore-after-comment-all-nested-blockless-after-same-name-blockless-blockless-group\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [&quot;after-comment&quot;, &quot;all-nested&quot;, &quot;blockless-after-same-name-blockless&quot;, &quot;blockless-group&quot;,]</code></h3>\n<h4 id=\"after-comment\"><a href=\"#after-comment\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;after-comment&quot;</code></h4>\n<p>Ignore at-rules that come after a comment.</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* comment */</span>\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* comment */</span>\n\n@<span class=\"hljs-keyword\">media</span> {}</code></pre>\n<h4 id=\"all-nested-1\"><a href=\"#all-nested-1\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;all-nested&quot;</code></h4>\n<p>Ignore at-rules that are nested.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">a {\n  @extend foo;\n  color: pink;\n}\n\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}</code></pre>\n<h4 id=\"blockless-after-same-name-blockless-1\"><a href=\"#blockless-after-same-name-blockless-1\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;blockless-after-same-name-blockless&quot;</code></h4>\n<p>Ignore blockless at-rules that follow another blockless at-rule with the same name.</p>\n<p>This means that you can group your blockless at-rules by name.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n\n@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);</code></pre>\n<pre><code class=\"hljs language-css\">a {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}</code></pre>\n<h4 id=\"blockless-group-1\"><a href=\"#blockless-group-1\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;blockless-group&quot;</code></h4>\n<p>Ignore at-rules within a blockless group.</p>\n<p>For example, with <code>&quot;always&quot;</code>:</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">import</span> url(x.css);\n@<span class=\"hljs-keyword\">import</span> url(y.css);\n\n@<span class=\"hljs-keyword\">media</span> print {}</code></pre>\n<h3 id=\"ignoreatrules-array-of-at-rules\"><a href=\"#ignoreatrules-array-of-at-rules\" class=\"phenomic-HeadingAnchor\">#</a><code>ignoreAtRules: [&quot;array&quot;, &quot;of&quot;, &quot;at-rules&quot;]</code></h3>\n<p>Ignore specified at-rules.</p>\n<p>For example, with <code>&quot;always&quot;</code>.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"import\"</span>]</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\">@<span class=\"hljs-keyword\">charset</span> <span class=\"hljs-string\">\"UTF-8\"</span>;\n@<span class=\"hljs-keyword\">import</span> {}</code></pre>\n","rawBody":"\n# at-rule-empty-line-before\n\nRequire or disallow an empty line before at-rules.\n\n```css\na {}\n          /* ← */\n@media {} /* ↑ */\n/**          ↑\n *   This line */\n```\n\nIf the at-rule is the very first node in a stylesheet then it is ignored.\n\n## Options\n\n`string`: `\"always\"|\"never\"`\n\n### `\"always\"`\n\nThere *must always* be an empty line before at-rules.\n\nThe following patterns are considered warnings:\n\n```css\na {} @media {}\n```\n\n```css\na {}\n@media {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {}\n\n@media {}\n```\n\n### `\"never\"`\n\nThere *must never* be an empty line before at-rules.\n\nThe following patterns are considered warnings:\n\n```css\na {}\n\n@media {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {} @media {}\n```\n\n```css\na {}\n@media {}\n```\n\n## Optional options\n\n### `except: [\"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\", \"first-nested\"]`\n\n### `\"all-nested\"`\n\nReverse the primary option for at-rules that are nested.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n```\n\n#### `\"blockless-after-same-name-blockless\"`\n\nReverse the primary option for blockless at-rules that follow another blockless at-rule with the same name.\n\nThis means that you can group your blockless at-rules by name.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n@charset \"UTF-8\";\n\n@import url(x.css);\n@import url(y.css);\n```\n\n```css\na {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}\n```\n\n#### `\"blockless-group\"`\n\nReverse the primary option for at-rules within a blockless group.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\n@import url(x.css);\n\n@import url(y.css);\n\n@media print {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(x.css);\n@import url(y.css);\n\n@media print {}\n```\n\n#### `\"first-nested\"`\n\nReverse the primary option for at-rules that are nested and the first child of their parent node.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\n### `ignore: [\"after-comment\", \"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\",]`\n\n#### `\"after-comment\"`\n\nIgnore at-rules that come after a comment.\n\nThe following patterns are *not* considered warnings:\n\n```css\n/* comment */\n@media {}\n```\n\n```css\n/* comment */\n\n@media {}\n```\n\n#### `\"all-nested\"`\n\nIgnore at-rules that are nested.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\n#### `\"blockless-after-same-name-blockless\"`\n\nIgnore blockless at-rules that follow another blockless at-rule with the same name.\n\nThis means that you can group your blockless at-rules by name.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n\n@charset \"UTF-8\";\n\n@import url(x.css);\n@import url(y.css);\n```\n\n```css\na {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}\n```\n\n#### `\"blockless-group\"`\n\nIgnore at-rules within a blockless group.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(x.css);\n\n@import url(y.css);\n\n@media print {}\n```\n\n```css\n@import url(x.css);\n@import url(y.css);\n\n@media print {}\n```\n\n### `ignoreAtRules: [\"array\", \"of\", \"at-rules\"]`\n\nIgnore specified at-rules.\n\nFor example, with `\"always\"`.\n\nGiven:\n\n```js\n[\"import\"]\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@charset \"UTF-8\";\n@import {}\n```\n","raw":"---\ntitle: at-rule-empty-line-before\n---\n\n# at-rule-empty-line-before\n\nRequire or disallow an empty line before at-rules.\n\n```css\na {}\n          /* ← */\n@media {} /* ↑ */\n/**          ↑\n *   This line */\n```\n\nIf the at-rule is the very first node in a stylesheet then it is ignored.\n\n## Options\n\n`string`: `\"always\"|\"never\"`\n\n### `\"always\"`\n\nThere *must always* be an empty line before at-rules.\n\nThe following patterns are considered warnings:\n\n```css\na {} @media {}\n```\n\n```css\na {}\n@media {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {}\n\n@media {}\n```\n\n### `\"never\"`\n\nThere *must never* be an empty line before at-rules.\n\nThe following patterns are considered warnings:\n\n```css\na {}\n\n@media {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {} @media {}\n```\n\n```css\na {}\n@media {}\n```\n\n## Optional options\n\n### `except: [\"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\", \"first-nested\"]`\n\n### `\"all-nested\"`\n\nReverse the primary option for at-rules that are nested.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n```\n\n#### `\"blockless-after-same-name-blockless\"`\n\nReverse the primary option for blockless at-rules that follow another blockless at-rule with the same name.\n\nThis means that you can group your blockless at-rules by name.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n@charset \"UTF-8\";\n\n@import url(x.css);\n@import url(y.css);\n```\n\n```css\na {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}\n```\n\n#### `\"blockless-group\"`\n\nReverse the primary option for at-rules within a blockless group.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\n@import url(x.css);\n\n@import url(y.css);\n\n@media print {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(x.css);\n@import url(y.css);\n\n@media print {}\n```\n\n#### `\"first-nested\"`\n\nReverse the primary option for at-rules that are nested and the first child of their parent node.\n\nFor example, with `\"always\"`:\n\nThe following patterns are considered warnings:\n\n```css\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\n### `ignore: [\"after-comment\", \"all-nested\", \"blockless-after-same-name-blockless\", \"blockless-group\",]`\n\n#### `\"after-comment\"`\n\nIgnore at-rules that come after a comment.\n\nThe following patterns are *not* considered warnings:\n\n```css\n/* comment */\n@media {}\n```\n\n```css\n/* comment */\n\n@media {}\n```\n\n#### `\"all-nested\"`\n\nIgnore at-rules that are nested.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  @extend foo;\n  color: pink;\n}\n\na {\n\n  @extend foo;\n  color: pink;\n}\n\nb {\n  color: pink;\n  @extend foo;\n}\n\nb {\n  color: pink;\n\n  @extend foo;\n}\n```\n\n#### `\"blockless-after-same-name-blockless\"`\n\nIgnore blockless at-rules that follow another blockless at-rule with the same name.\n\nThis means that you can group your blockless at-rules by name.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n\n@charset \"UTF-8\";\n\n@import url(x.css);\n@import url(y.css);\n```\n\n```css\na {\n\n  @extends .foo;\n  @extends .bar;\n\n  @include loop;\n  @include doo;\n}\n```\n\n#### `\"blockless-group\"`\n\nIgnore at-rules within a blockless group.\n\nFor example, with `\"always\"`:\n\nThe following patterns are *not* considered warnings:\n\n```css\n@import url(x.css);\n\n@import url(y.css);\n\n@media print {}\n```\n\n```css\n@import url(x.css);\n@import url(y.css);\n\n@media print {}\n```\n\n### `ignoreAtRules: [\"array\", \"of\", \"at-rules\"]`\n\nIgnore specified at-rules.\n\nFor example, with `\"always\"`.\n\nGiven:\n\n```js\n[\"import\"]\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n@charset \"UTF-8\";\n@import {}\n```\n","__filename":"user-guide/rules/at-rule-empty-line-before.md","__url":"/user-guide/rules/at-rule-empty-line-before/","__resourceUrl":"/user-guide/rules/at-rule-empty-line-before/index.html","__dataUrl":"/user-guide/rules/at-rule-empty-line-before/index.html.86a7c25320bc6ab13ac55ddb86ddf8a6.json"}