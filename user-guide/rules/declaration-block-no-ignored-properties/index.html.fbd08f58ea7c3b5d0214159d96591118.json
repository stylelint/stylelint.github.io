{"head":{"title":"declaration-block-no-ignored-properties","description":"declaration-block-no-ignored-properties\n\nDisallow property values that are ignored due to another property value in the same rule.\n\nCertain…"},"body":"<h1 id=\"declaration-block-no-ignored-properties\"><a href=\"#declaration-block-no-ignored-properties\" class=\"phenomic-HeadingAnchor\">#</a>declaration-block-no-ignored-properties</h1>\n<p>Disallow property values that are ignored due to another property value in the same rule.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline; <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100px</span>; }\n<span class=\"hljs-comment\">/**                  ↑\n *       This property */</span></code></pre>\n<p>Certain property value pairs rule out other property value pairs, causing them to be ignored by the browser. For example, when en element has display: inline, any further declarations about width, height and margin-top properties will be ignored. Sometimes this is confusing: maybe you forgot that your margin-top will have no effect because the element has display: inline, so you spend a while struggling to figure out what you&#x27;ve done wrong. This rule protects against that confusion by ensuring that within a single rule you don&#x27;t use property values that are ruled out by other property values in that same rule.</p>\n<p>The rule warns when it finds:</p>\n<ul>\n<li><code>display: inline</code> used with <code>width</code>, <code>height</code>, <code>margin</code>, <code>margin-top</code>, <code>margin-bottom</code>, and <code>float</code>.</li>\n<li><code>display: inline-block</code> used with <code>float</code>.</li>\n<li><code>display: block</code> used with <code>vertical-align</code>.</li>\n<li><code>display: table-*</code> used with <code>margin</code> (and all variants) or <code>float</code>.</li>\n<li><code>position: static</code> used with <code>top</code>, <code>right</code>, <code>bottom</code>, and <code>left</code>.</li>\n<li><code>position: absolute</code> used with <code>float</code>.</li>\n<li><code>position: fixed</code> used with <code>float</code>.</li>\n</ul>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline; <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100px</span>; }</code></pre>\n<p><code>display: inline</code> causes <code>width</code> to be ignored.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline; <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100px</span>; }</code></pre>\n<p><code>display: inline</code> causes <code>height</code> to be ignored.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline; <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span>; }</code></pre>\n<p><code>display: inline</code> causes <code>margin</code> to be ignored.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline-block; <span class=\"hljs-attribute\">float</span>: left; }</code></pre>\n<p><code>display: inline-block</code> causes <code>float</code> to be ignored.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: block; <span class=\"hljs-attribute\">vertical-align</span>: baseline; }</code></pre>\n<p><code>display: block</code> causes <code>vertical-align</code> to be ignored.</p>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline: margin-left: <span class=\"hljs-number\">10px</span>; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline: margin-right: <span class=\"hljs-number\">10px</span>; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline: padding: <span class=\"hljs-number\">10px</span>; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: inline-block; <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100px</span>; }</code></pre>\n<p>Although <code>display: inline</code> causes <code>width</code> to be ignored, <code>inline-block</code> works with <code>width</code>.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">display</span>: block; <span class=\"hljs-attribute\">float</span>: left; }</code></pre>\n<p>Although <code>display: inline-block</code> causes <code>float</code> to be ignored, <code>block</code> works with <code>float</code>.</p>\n","rawBody":"\n# declaration-block-no-ignored-properties\n\nDisallow property values that are ignored due to another property value in the same rule.\n\n```css\na { display: inline; width: 100px; }\n/**                  ↑\n *       This property */\n```\n\nCertain property value pairs rule out other property value pairs, causing them to be ignored by the browser. For example, when en element has display: inline, any further declarations about width, height and margin-top properties will be ignored. Sometimes this is confusing: maybe you forgot that your margin-top will have no effect because the element has display: inline, so you spend a while struggling to figure out what you've done wrong. This rule protects against that confusion by ensuring that within a single rule you don't use property values that are ruled out by other property values in that same rule.\n\nThe rule warns when it finds:\n\n- `display: inline` used with `width`, `height`, `margin`, `margin-top`, `margin-bottom`, and `float`.\n- `display: inline-block` used with `float`.\n- `display: block` used with `vertical-align`.\n- `display: table-*` used with `margin` (and all variants) or `float`.\n- `position: static` used with `top`, `right`, `bottom`, and `left`.\n- `position: absolute` used with `float`.\n- `position: fixed` used with `float`.\n\nThe following patterns are considered warnings:\n\n```css\na { display: inline; width: 100px; }\n```\n\n`display: inline` causes `width` to be ignored.\n\n```css\na { display: inline; height: 100px; }\n```\n\n`display: inline` causes `height` to be ignored.\n\n```css\na { display: inline; margin: 10px; }\n```\n\n`display: inline` causes `margin` to be ignored.\n\n```css\na { display: inline-block; float: left; }\n```\n\n`display: inline-block` causes `float` to be ignored.\n\n```css\na { display: block; vertical-align: baseline; }\n```\n\n`display: block` causes `vertical-align` to be ignored.\n\nThe following patterns are *not* considered warnings:\n\n```css\na { display: inline: margin-left: 10px; }\n```\n\n```css\na { display: inline: margin-right: 10px; }\n```\n\n```css\na { display: inline: padding: 10px; }\n```\n\n```css\na { display: inline-block; width: 100px; }\n```\n\nAlthough `display: inline` causes `width` to be ignored, `inline-block` works with `width`.\n\n```css\na { display: block; float: left; }\n```\n\nAlthough `display: inline-block` causes `float` to be ignored, `block` works with `float`.\n","raw":"---\ntitle: declaration-block-no-ignored-properties\n---\n\n# declaration-block-no-ignored-properties\n\nDisallow property values that are ignored due to another property value in the same rule.\n\n```css\na { display: inline; width: 100px; }\n/**                  ↑\n *       This property */\n```\n\nCertain property value pairs rule out other property value pairs, causing them to be ignored by the browser. For example, when en element has display: inline, any further declarations about width, height and margin-top properties will be ignored. Sometimes this is confusing: maybe you forgot that your margin-top will have no effect because the element has display: inline, so you spend a while struggling to figure out what you've done wrong. This rule protects against that confusion by ensuring that within a single rule you don't use property values that are ruled out by other property values in that same rule.\n\nThe rule warns when it finds:\n\n- `display: inline` used with `width`, `height`, `margin`, `margin-top`, `margin-bottom`, and `float`.\n- `display: inline-block` used with `float`.\n- `display: block` used with `vertical-align`.\n- `display: table-*` used with `margin` (and all variants) or `float`.\n- `position: static` used with `top`, `right`, `bottom`, and `left`.\n- `position: absolute` used with `float`.\n- `position: fixed` used with `float`.\n\nThe following patterns are considered warnings:\n\n```css\na { display: inline; width: 100px; }\n```\n\n`display: inline` causes `width` to be ignored.\n\n```css\na { display: inline; height: 100px; }\n```\n\n`display: inline` causes `height` to be ignored.\n\n```css\na { display: inline; margin: 10px; }\n```\n\n`display: inline` causes `margin` to be ignored.\n\n```css\na { display: inline-block; float: left; }\n```\n\n`display: inline-block` causes `float` to be ignored.\n\n```css\na { display: block; vertical-align: baseline; }\n```\n\n`display: block` causes `vertical-align` to be ignored.\n\nThe following patterns are *not* considered warnings:\n\n```css\na { display: inline: margin-left: 10px; }\n```\n\n```css\na { display: inline: margin-right: 10px; }\n```\n\n```css\na { display: inline: padding: 10px; }\n```\n\n```css\na { display: inline-block; width: 100px; }\n```\n\nAlthough `display: inline` causes `width` to be ignored, `inline-block` works with `width`.\n\n```css\na { display: block; float: left; }\n```\n\nAlthough `display: inline-block` causes `float` to be ignored, `block` works with `float`.\n","__filename":"user-guide/rules/declaration-block-no-ignored-properties.md","__url":"/user-guide/rules/declaration-block-no-ignored-properties/","__resourceUrl":"/user-guide/rules/declaration-block-no-ignored-properties/index.html","__dataUrl":"/user-guide/rules/declaration-block-no-ignored-properties/index.html.fbd08f58ea7c3b5d0214159d96591118.json"}