{"head":{"title":"declaration-block-properties-order","description":"declaration-block-properties-order Specify the order of properties within declaration blocks. Prefixed properties must always be…"},"body":"<h1 id=\"declaration-block-properties-order\"><a href=\"#declaration-block-properties-order\" class=\"phenomic-HeadingAnchor\">#</a>declaration-block-properties-order</h1>\n<p>Specify the order of properties within declaration blocks.</p>\n<pre><code class=\"hljs language-css\">  <span class=\"hljs-selector-tag\">a</span> {\n    <span class=\"hljs-attribute\">color</span>: pink;\n    <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  }\n<span class=\"hljs-comment\">/** ↑\n * These properties */</span></code></pre>\n<p>Prefixed properties <em>must always</em> be alphabetically ordered and <em>must always</em> precede the unprefixed version.</p>\n<p>This rule ignores variables (<code>$sass</code>, <code>@less</code>, <code>--custom-property</code>).</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string|array</code>: <code>&quot;alphabetical&quot;|[&quot;array&quot;, &quot;of&quot;, &quot;unprefixed&quot;, &quot;property&quot;, &quot;names&quot;, &quot;or&quot;, &quot;group&quot;, &quot;objects&quot;]</code></p>\n<h3 id=\"alphabetical\"><a href=\"#alphabetical\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;alphabetical&quot;</code></h3>\n<p>Properties <em>must always</em> be ordered alphabetically.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-moz-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-moz-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n}</code></pre>\n<h3 id=\"array-of-unprefixed-property-names-or-group-objects\"><a href=\"#array-of-unprefixed-property-names-or-group-objects\" class=\"phenomic-HeadingAnchor\">#</a><code>[&quot;array&quot;, &quot;of&quot;, &quot;unprefixed&quot;, &quot;property&quot;, &quot;names&quot;, &quot;or&quot;, &quot;group&quot;, &quot;objects&quot;]</code></h3>\n<p>Within an order array, you can include</p>\n<ul>\n<li>unprefixed property names</li>\n<li>\n<p>group objects with these properties:</p>\n<ul>\n<li><code>order (&quot;strict&quot;|&quot;flexible&quot;)</code>: If <code>&quot;strict&quot;</code> (the default), the properties in this group must come in the order specified. If <code>&quot;flexible&quot;</code>, the properties can be in any order as long as they are grouped correctly.</li>\n<li><code>properties (array of strings)</code>: The properties in this group.</li>\n</ul>\n</li>\n</ul>\n<p>There are some important details to keep in mind:</p>\n<p><strong>By default, unlisted properties will be ignored.</strong> So if you specify an array and do not include <code>display</code>, that means that the <code>display</code> property can be included before or after any other property. <em>This can be changed with the <code>unspecified</code> option</em> (see below).</p>\n<p><strong>If an (unprefixed) property name is not included in your array and it contains a hyphen (e.g. <code>padding-left</code>), this rule will look for the string before that first hyphen in your array (e.g. <code>padding</code>) and use that position.</strong> This means that you do not have to specify each extension of the root property; you can just specify the root property and the extensions will be accounted for.</p>\n<p>For example, if you have included <code>border</code> in your array but not <code>border-top</code>, the rule will expect <code>border-top</code> to appear in the same relative position as <code>border</code>.</p>\n<p>Other relevant rules include <code>margin</code>, <code>border</code>, <code>animation</code>, <code>transition</code>, etc.</p>\n<p>Using this fallback, the order of these hyphenated relative to their peer extensions (e.g. <code>border-top</code> to <code>border-bottom</code>) will be <em>arbitrary</em>. If you would like to enforce a specific ordering (e.g. always put <code>border-right</code> before <code>border-left</code>), you should specify those particular names in your array.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"top\"</span>, <span class=\"hljs-string\">\"color\"</span>]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-moz-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-moz-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(1);\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"padding\"</span>, <span class=\"hljs-string\">\"color\"</span>]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1em</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"my\"</span>, <span class=\"hljs-string\">\"font-smoothing\"</span>, <span class=\"hljs-string\">\"color\"</span>]</code></pre>\n<p>Where <code>font-smoothing</code> is the unprefixed version of proprietary browser property <code>-webkit-font-smoothing</code> and <code>my</code> is a user-defined shorthand property.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">-webkit-font-smoothing</span>: antialiased;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-webkit-font-smoothing</span>: antialiased;\n  <span class=\"hljs-attribute\">my-property</span>: <span class=\"hljs-number\">2em</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">my-property</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">my-other-property</span>: <span class=\"hljs-number\">1em</span>;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">-webkit-font-smoothing</span>: antialiased;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">my-property</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">-webkit-font-smoothing</span>: antialiased;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">my-property</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">my-other-property</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">my-other-property</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">my-property</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"padding\"</span>, <span class=\"hljs-string\">\"padding-top\"</span>, <span class=\"hljs-string\">\"padding-right\"</span>, <span class=\"hljs-string\">\"padding-bottom\"</span>, <span class=\"hljs-string\">\"padding-left\"</span>, <span class=\"hljs-string\">\"color\"</span>]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding-top</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">padding-right</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">padding-bottom</span>: <span class=\"hljs-number\">0.5em</span>;\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">0.5em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">1em</span>;\n  <span class=\"hljs-attribute\">padding-right</span>: <span class=\"hljs-number\">2em</span>;\n  <span class=\"hljs-attribute\">padding-left</span>: <span class=\"hljs-number\">2.5em</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[\n  {\n    <span class=\"hljs-attr\">properties</span>: [\n      <span class=\"hljs-string\">\"height\"</span>,\n      <span class=\"hljs-string\">\"width\"</span>,\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">properties</span>: [\n      <span class=\"hljs-string\">\"font-size\"</span>,\n      <span class=\"hljs-string\">\"font-weight\"</span>,\n    ],\n  },\n]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;  \n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[\n  <span class=\"hljs-string\">\"height\"</span>,\n  <span class=\"hljs-string\">\"width\"</span>,\n  {\n    <span class=\"hljs-attr\">order</span>: <span class=\"hljs-string\">\"flexible\"</span>,\n    <span class=\"hljs-attr\">properties</span>: [\n      <span class=\"hljs-string\">\"color\"</span>,\n      <span class=\"hljs-string\">\"font-size\"</span>,\n      <span class=\"hljs-string\">\"font-weight\"</span>,\n    ],\n  },\n]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;  \n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">1px</span>;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">2px</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">font-weight</span>: bold;\n}</code></pre>\n<h2 id=\"optional-secondary-options\"><a href=\"#optional-secondary-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional secondary options</h2>\n<h3 id=\"unspecified-topbottombottomalphabeticalignore\"><a href=\"#unspecified-topbottombottomalphabeticalignore\" class=\"phenomic-HeadingAnchor\">#</a><code>unspecified: &quot;top&quot;|&quot;bottom&quot;|&quot;bottomAlphabetical&quot;|&quot;ignore&quot;</code></h3>\n<p>These options only apply if you&#x27;ve defined your own array of properties.</p>\n<p>Default behavior is the same as <code>&quot;ignore&quot;</code>: an unspecified property can appear before or after  any other property.</p>\n<p>With <code>&quot;top&quot;</code>, unspecified properties are expected <em>before</em> any specified properties. With <code>&quot;bottom&quot;</code>, unspecified properties are expected <em>after</em> any specified properties. With <code>&quot;bottomAlphabetical&quot;</code>, unspecified properties are expected <em>after</em> any specified properties, and the unspecified properties are expected to be in alphabetical order.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[[<span class=\"hljs-string\">\"color\"</span>, <span class=\"hljs-string\">\"background\"</span>], { <span class=\"hljs-attr\">unspecified</span>: <span class=\"hljs-string\">\"ignore\"</span> }]</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[[<span class=\"hljs-string\">\"color\"</span>, <span class=\"hljs-string\">\"background\"</span>], { <span class=\"hljs-attr\">unspecified</span>: <span class=\"hljs-string\">\"top\"</span> }]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[[<span class=\"hljs-string\">\"color\"</span>, <span class=\"hljs-string\">\"background\"</span>], { <span class=\"hljs-attr\">unspecified</span>: <span class=\"hljs-string\">\"bottom\"</span> }]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">background</span>: orange;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: pink;\n  <span class=\"hljs-attribute\">background</span>: orange;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">[[<span class=\"hljs-string\">\"composes\"</span>], { <span class=\"hljs-attr\">unspecified</span>: <span class=\"hljs-string\">\"bottomAlphabetical\"</span> }]</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">align-items</span>: flex-end;\n  <span class=\"hljs-attribute\">composes</span>: b;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">composes</span>: b;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">align-items</span>: flex-end;\n}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">composes</span>: b;\n  <span class=\"hljs-attribute\">align-items</span>: flex-end;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n","rawBody":"\n# declaration-block-properties-order\n\nSpecify the order of properties within declaration blocks.\n\n```css\n  a {\n    color: pink;\n    top: 0;\n  }\n/** ↑\n * These properties */\n```\n\nPrefixed properties *must always* be alphabetically ordered and *must always* precede the unprefixed version.\n\nThis rule ignores variables (`$sass`, `@less`, `--custom-property`).\n\n## Options\n\n`string|array`: `\"alphabetical\"|[\"array\", \"of\", \"unprefixed\", \"property\", \"names\", \"or\", \"group\", \"objects\"]`\n\n### `\"alphabetical\"`\n\nProperties *must always* be ordered alphabetically.\n\nThe following patterns are considered warnings:\n\n```css\na {\n  top: 0;\n  color: pink;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  transform: scale(1);\n  -webkit-transform: scale(1);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  top: 0;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  -webkit-transform: scale(1);\n  transform: scale(1);\n}\n```\n\n### `[\"array\", \"of\", \"unprefixed\", \"property\", \"names\", \"or\", \"group\", \"objects\"]`\n\nWithin an order array, you can include\n\n-   unprefixed property names\n-   group objects with these properties:\n    -   `order (\"strict\"|\"flexible\")`: If `\"strict\"` (the default), the properties in this group must come in the order specified. If `\"flexible\"`, the properties can be in any order as long as they are grouped correctly.\n    -   `properties (array of strings)`: The properties in this group.\n\nThere are some important details to keep in mind:\n\n**By default, unlisted properties will be ignored.** So if you specify an array and do not include `display`, that means that the `display` property can be included before or after any other property. *This can be changed with the `unspecified` option* (see below).\n\n**If an (unprefixed) property name is not included in your array and it contains a hyphen (e.g. `padding-left`), this rule will look for the string before that first hyphen in your array (e.g. `padding`) and use that position.** This means that you do not have to specify each extension of the root property; you can just specify the root property and the extensions will be accounted for.\n\nFor example, if you have included `border` in your array but not `border-top`, the rule will expect `border-top` to appear in the same relative position as `border`.\n\nOther relevant rules include `margin`, `border`, `animation`, `transition`, etc.\n\nUsing this fallback, the order of these hyphenated relative to their peer extensions (e.g. `border-top` to `border-bottom`) will be *arbitrary*. If you would like to enforce a specific ordering (e.g. always put `border-right` before `border-left`), you should specify those particular names in your array.\n\nGiven:\n\n```js\n[\"transform\", \"top\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  top: 0;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  transform: scale(1);\n  -webkit-transform: scale(1);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  top: 0;\n  color: pink;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  -webkit-transform: scale(1);\n  transform: scale(1);\n}\n```\n\nGiven:\n\n```js\n[\"padding\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  padding: 1em;\n}\n```\n\n```css\na {\n  color: pink;\n  padding-top: 1em;\n}\n```\n\n```css\na {\n  padding-left: 2em;\n  color: pink;\n  padding-top: 1em;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  padding: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-top: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-left: 2em;\n  padding-top: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-top: 1em;\n  padding-left: 2em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\"my\", \"font-smoothing\", \"color\"]\n```\n\nWhere `font-smoothing` is the unprefixed version of proprietary browser property `-webkit-font-smoothing` and `my` is a user-defined shorthand property.\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  -webkit-font-smoothing: antialiased;\n}\n```\n\n```css\na {\n  -webkit-font-smoothing: antialiased;\n  my-property: 2em;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  color: pink;\n  my-other-property: 1em;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  -webkit-font-smoothing: antialiased;\n  color: pink;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  -webkit-font-smoothing: antialiased;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  my-other-property: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  my-other-property: 1em;\n  my-property: 2em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\"padding\", \"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  padding-left: 2em;\n  padding-top: 1em;\n  padding: 1em;\n  color: pink;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 0.5em;\n  padding-left: 0.5em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding: 1em;\n  padding-right: 2em;\n  padding-left: 2.5em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\n  {\n    properties: [\n      \"height\",\n      \"width\",\n    ],\n  },\n  {\n    properties: [\n      \"font-size\",\n      \"font-weight\",\n    ],\n  },\n]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  width: 2px;\n  height: 1px;  \n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  width: 2px;\n  height: 1px;\n\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  height: 1px;\n  width: 2px;\n\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\nGiven:\n\n```js\n[\n  \"height\",\n  \"width\",\n  {\n    order: \"flexible\",\n    properties: [\n      \"color\",\n      \"font-size\",\n      \"font-weight\",\n    ],\n  },\n]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  height: 1px;\n  font-weight: bold;\n  width: 2px;\n}\n```\n\n```css\na {\n  width: 2px;\n  height: 1px;\n  font-weight: bold;  \n}\n```\n\n```css\na {\n  height: 1px;\n  color: pink;\n  width: 2px;\n  font-weight: bold;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  color: pink;\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  font-size: 2px;\n  color: pink;\n  font-weight: bold;\n}\n```\n\n## Optional secondary options\n\n### `unspecified: \"top\"|\"bottom\"|\"bottomAlphabetical\"|\"ignore\"`\n\nThese options only apply if you've defined your own array of properties.\n\nDefault behavior is the same as `\"ignore\"`: an unspecified property can appear before or after  any other property.\n\nWith `\"top\"`, unspecified properties are expected *before* any specified properties. With `\"bottom\"`, unspecified properties are expected *after* any specified properties. With `\"bottomAlphabetical\"`, unspecified properties are expected *after* any specified properties, and the unspecified properties are expected to be in alphabetical order.\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"ignore\" }]\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"top\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"bottom\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\nGiven:\n\n```js\n[[\"composes\"], { unspecified: \"bottomAlphabetical\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  align-items: flex-end;\n  composes: b;\n  left: 0;\n}\n```\n\n```css\na {\n  composes: b;\n  left: 0;\n  align-items: flex-end;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  composes: b;\n  align-items: flex-end;\n  left: 0;\n}\n```\n","raw":"---\ntitle: declaration-block-properties-order\n---\n\n# declaration-block-properties-order\n\nSpecify the order of properties within declaration blocks.\n\n```css\n  a {\n    color: pink;\n    top: 0;\n  }\n/** ↑\n * These properties */\n```\n\nPrefixed properties *must always* be alphabetically ordered and *must always* precede the unprefixed version.\n\nThis rule ignores variables (`$sass`, `@less`, `--custom-property`).\n\n## Options\n\n`string|array`: `\"alphabetical\"|[\"array\", \"of\", \"unprefixed\", \"property\", \"names\", \"or\", \"group\", \"objects\"]`\n\n### `\"alphabetical\"`\n\nProperties *must always* be ordered alphabetically.\n\nThe following patterns are considered warnings:\n\n```css\na {\n  top: 0;\n  color: pink;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  transform: scale(1);\n  -webkit-transform: scale(1);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  top: 0;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  -webkit-transform: scale(1);\n  transform: scale(1);\n}\n```\n\n### `[\"array\", \"of\", \"unprefixed\", \"property\", \"names\", \"or\", \"group\", \"objects\"]`\n\nWithin an order array, you can include\n\n-   unprefixed property names\n-   group objects with these properties:\n    -   `order (\"strict\"|\"flexible\")`: If `\"strict\"` (the default), the properties in this group must come in the order specified. If `\"flexible\"`, the properties can be in any order as long as they are grouped correctly.\n    -   `properties (array of strings)`: The properties in this group.\n\nThere are some important details to keep in mind:\n\n**By default, unlisted properties will be ignored.** So if you specify an array and do not include `display`, that means that the `display` property can be included before or after any other property. *This can be changed with the `unspecified` option* (see below).\n\n**If an (unprefixed) property name is not included in your array and it contains a hyphen (e.g. `padding-left`), this rule will look for the string before that first hyphen in your array (e.g. `padding`) and use that position.** This means that you do not have to specify each extension of the root property; you can just specify the root property and the extensions will be accounted for.\n\nFor example, if you have included `border` in your array but not `border-top`, the rule will expect `border-top` to appear in the same relative position as `border`.\n\nOther relevant rules include `margin`, `border`, `animation`, `transition`, etc.\n\nUsing this fallback, the order of these hyphenated relative to their peer extensions (e.g. `border-top` to `border-bottom`) will be *arbitrary*. If you would like to enforce a specific ordering (e.g. always put `border-right` before `border-left`), you should specify those particular names in your array.\n\nGiven:\n\n```js\n[\"transform\", \"top\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  top: 0;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  transform: scale(1);\n  -webkit-transform: scale(1);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  top: 0;\n  color: pink;\n}\n```\n\n```css\na {\n  -moz-transform: scale(1);\n  -webkit-transform: scale(1);\n  transform: scale(1);\n}\n```\n\nGiven:\n\n```js\n[\"padding\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  padding: 1em;\n}\n```\n\n```css\na {\n  color: pink;\n  padding-top: 1em;\n}\n```\n\n```css\na {\n  padding-left: 2em;\n  color: pink;\n  padding-top: 1em;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  padding: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-top: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-left: 2em;\n  padding-top: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding-top: 1em;\n  padding-left: 2em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\"my\", \"font-smoothing\", \"color\"]\n```\n\nWhere `font-smoothing` is the unprefixed version of proprietary browser property `-webkit-font-smoothing` and `my` is a user-defined shorthand property.\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  -webkit-font-smoothing: antialiased;\n}\n```\n\n```css\na {\n  -webkit-font-smoothing: antialiased;\n  my-property: 2em;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  color: pink;\n  my-other-property: 1em;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  -webkit-font-smoothing: antialiased;\n  color: pink;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  -webkit-font-smoothing: antialiased;\n}\n```\n\n```css\na {\n  my-property: 2em;\n  my-other-property: 1em;\n  color: pink;\n}\n```\n\n```css\na {\n  my-other-property: 1em;\n  my-property: 2em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\"padding\", \"padding-top\", \"padding-right\", \"padding-bottom\", \"padding-left\", \"color\"]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  padding-left: 2em;\n  padding-top: 1em;\n  padding: 1em;\n  color: pink;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  padding-top: 1em;\n  padding-right: 1em;\n  padding-bottom: 0.5em;\n  padding-left: 0.5em;\n  color: pink;\n}\n```\n\n```css\na {\n  padding: 1em;\n  padding-right: 2em;\n  padding-left: 2.5em;\n  color: pink;\n}\n```\n\nGiven:\n\n```js\n[\n  {\n    properties: [\n      \"height\",\n      \"width\",\n    ],\n  },\n  {\n    properties: [\n      \"font-size\",\n      \"font-weight\",\n    ],\n  },\n]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  width: 2px;\n  height: 1px;  \n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  width: 2px;\n  height: 1px;\n\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  height: 1px;\n  width: 2px;\n\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\nGiven:\n\n```js\n[\n  \"height\",\n  \"width\",\n  {\n    order: \"flexible\",\n    properties: [\n      \"color\",\n      \"font-size\",\n      \"font-weight\",\n    ],\n  },\n]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  height: 1px;\n  font-weight: bold;\n  width: 2px;\n}\n```\n\n```css\na {\n  width: 2px;\n  height: 1px;\n  font-weight: bold;  \n}\n```\n\n```css\na {\n  height: 1px;\n  color: pink;\n  width: 2px;\n  font-weight: bold;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  color: pink;\n  font-size: 2px;\n  font-weight: bold;\n}\n```\n\n```css\na {\n  height: 1px;\n  width: 2px;\n  font-size: 2px;\n  color: pink;\n  font-weight: bold;\n}\n```\n\n## Optional secondary options\n\n### `unspecified: \"top\"|\"bottom\"|\"bottomAlphabetical\"|\"ignore\"`\n\nThese options only apply if you've defined your own array of properties.\n\nDefault behavior is the same as `\"ignore\"`: an unspecified property can appear before or after  any other property.\n\nWith `\"top\"`, unspecified properties are expected *before* any specified properties. With `\"bottom\"`, unspecified properties are expected *after* any specified properties. With `\"bottomAlphabetical\"`, unspecified properties are expected *after* any specified properties, and the unspecified properties are expected to be in alphabetical order.\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"ignore\" }]\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"top\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\nGiven:\n\n```js\n[[\"color\", \"background\"], { unspecified: \"bottom\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  left: 0;\n  color: pink;\n  background: orange;\n}\n```\n\n```css\na {\n  color: pink;\n  left: 0;\n  background: orange;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: pink;\n  background: orange;\n  left: 0;\n}\n```\n\nGiven:\n\n```js\n[[\"composes\"], { unspecified: \"bottomAlphabetical\" }]\n```\n\nThe following patterns are considered warnings:\n\n```css\na {\n  align-items: flex-end;\n  composes: b;\n  left: 0;\n}\n```\n\n```css\na {\n  composes: b;\n  left: 0;\n  align-items: flex-end;\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  composes: b;\n  align-items: flex-end;\n  left: 0;\n}\n```\n","__filename":"user-guide/rules/declaration-block-properties-order.md","__url":"/user-guide/rules/declaration-block-properties-order/","__resourceUrl":"/user-guide/rules/declaration-block-properties-order/index.html","__dataUrl":"/user-guide/rules/declaration-block-properties-order/index.html.f00306a4dd3121890020a6ba2c5758ea.json"}