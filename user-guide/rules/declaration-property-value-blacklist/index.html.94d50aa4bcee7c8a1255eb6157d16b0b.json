{"head":{"title":"declaration-property-value-blacklist","description":"declaration-property-value-blacklist Specify a blacklist of disallowed property and value pairs within declarations. Options object…"},"body":"<h1 id=\"declaration-property-value-blacklist\"><a href=\"#declaration-property-value-blacklist\" class=\"phenomic-HeadingAnchor\">#</a>declaration-property-value-blacklist</h1>\n<p>Specify a blacklist of disallowed property and value pairs within declarations.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">text-transform</span>: uppercase; }\n<span class=\"hljs-comment\">/** ↑               ↑\n * These properties and these values */</span></code></pre>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>object</code>: <code>{ &quot;unprefixed-property-name&quot;: [&quot;array&quot;, &quot;of&quot;, &quot;values&quot;], &quot;unprefixed-property-name&quot;: [&quot;/regex/&quot;, &quot;non-regex&quot;] }</code></p>\n<p>If a property name is surrounded with <code>&quot;/&quot;</code> (e.g. <code>&quot;/^animation/&quot;</code>), it is interpreted as a regular expression. This allows, for example, easy targeting of shorthands: <code>/^animation/</code> will match <code>animation</code>, <code>animation-duration</code>, <code>animation-timing-function</code>, etc.</p>\n<p>The same goes for values. Keep in mind that a regular expression value is matched against the entire value of the declaration, not specific parts of it. For example, a value like <code>&quot;10px solid rgba( 255 , 0 , 0 , 0.5 )&quot;</code> will <em>not</em> match <code>&quot;/^solid/&quot;</code> (notice beginning of the line boundary) but <em>will</em> match <code>&quot;/\\\\s+solid\\\\s+/&quot;</code> or <code>&quot;/\\\\bsolid\\\\b/&quot;</code>.</p>\n<p>Be careful with regex matching not to accidentally consider quoted string values and <code>url()</code> arguments. For example, <code>&quot;/red/&quot;</code> will match value such as <code>&quot;1px dotted red&quot;</code> as well as <code>&quot;\\&quot;foo\\&quot;&quot;</code> and <code>&quot;white url(/mysite.com/red.png)&quot;</code>.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\">{\n  <span class=\"hljs-string\">\"transform\"</span>: [<span class=\"hljs-string\">\"/scale3d/\"</span>, <span class=\"hljs-string\">\"/rotate3d/\"</span>, <span class=\"hljs-string\">\"/translate3d/\"</span>],\n  <span class=\"hljs-string\">\"position\"</span>: [<span class=\"hljs-string\">\"fixed\"</span>],\n  <span class=\"hljs-string\">\"color\"</span>: [<span class=\"hljs-string\">\"/^green/\"</span>]\n  <span class=\"hljs-string\">\"/^animation/\"</span>: [<span class=\"hljs-string\">\"/ease/\"</span>]\n}</code></pre>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">position</span>: fixed; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale3d</span>(1, 2, 3); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale3d</span>(1, 2, 3); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: green; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">animation</span>: foo <span class=\"hljs-number\">2s</span> ease-in-out; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">animation-timing-function</span>: ease-in-out; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-animation-timing-function</span>: ease-in-out; }</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">position</span>: relative; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(2); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(2); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: lightgreen; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">animation</span>: foo <span class=\"hljs-number\">2s</span> linear; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">animation-timing-function</span>: linear; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-animation-timing-function</span>: linear; }</code></pre>\n","rawBody":"\n# declaration-property-value-blacklist\n\nSpecify a blacklist of disallowed property and value pairs within declarations.\n\n```css\na { text-transform: uppercase; }\n/** ↑               ↑\n * These properties and these values */\n```\n\n## Options\n\n`object`: `{\n  \"unprefixed-property-name\": [\"array\", \"of\", \"values\"],\n  \"unprefixed-property-name\": [\"/regex/\", \"non-regex\"]\n}`\n\nIf a property name is surrounded with `\"/\"` (e.g. `\"/^animation/\"`), it is interpreted as a regular expression. This allows, for example, easy targeting of shorthands: `/^animation/` will match `animation`, `animation-duration`, `animation-timing-function`, etc.\n\nThe same goes for values. Keep in mind that a regular expression value is matched against the entire value of the declaration, not specific parts of it. For example, a value like `\"10px solid rgba( 255 , 0 , 0 , 0.5 )\"` will *not* match `\"/^solid/\"` (notice beginning of the line boundary) but *will* match `\"/\\\\s+solid\\\\s+/\"` or `\"/\\\\bsolid\\\\b/\"`.\n\nBe careful with regex matching not to accidentally consider quoted string values and `url()` arguments. For example, `\"/red/\"` will match value such as `\"1px dotted red\"` as well as `\"\\\"foo\\\"\"` and `\"white url(/mysite.com/red.png)\"`.\n\nGiven:\n\n```js\n{\n  \"transform\": [\"/scale3d/\", \"/rotate3d/\", \"/translate3d/\"],\n  \"position\": [\"fixed\"],\n  \"color\": [\"/^green/\"]\n  \"/^animation/\": [\"/ease/\"]\n}\n```\n\nThe following patterns are considered warnings:\n\n```css\na { position: fixed; }\n```\n\n```css\na { transform: scale3d(1, 2, 3); }\n```\n\n```css\na { -webkit-transform: scale3d(1, 2, 3); }\n```\n\n```css\na { color: green; }\n```\n\n```css\na { animation: foo 2s ease-in-out; }\n```\n\n```css\na { animation-timing-function: ease-in-out; }\n```\n\n```css\na { -webkit-animation-timing-function: ease-in-out; }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { position: relative; }\n```\n\n```css\na { transform: scale(2); }\n```\n\n```css\na { -webkit-transform: scale(2); }\n```\n\n```css\na { color: lightgreen; }\n```\n\n```css\na { animation: foo 2s linear; }\n```\n\n```css\na { animation-timing-function: linear; }\n```\n\n```css\na { -webkit-animation-timing-function: linear; }\n```\n","raw":"---\ntitle: declaration-property-value-blacklist\n---\n\n# declaration-property-value-blacklist\n\nSpecify a blacklist of disallowed property and value pairs within declarations.\n\n```css\na { text-transform: uppercase; }\n/** ↑               ↑\n * These properties and these values */\n```\n\n## Options\n\n`object`: `{\n  \"unprefixed-property-name\": [\"array\", \"of\", \"values\"],\n  \"unprefixed-property-name\": [\"/regex/\", \"non-regex\"]\n}`\n\nIf a property name is surrounded with `\"/\"` (e.g. `\"/^animation/\"`), it is interpreted as a regular expression. This allows, for example, easy targeting of shorthands: `/^animation/` will match `animation`, `animation-duration`, `animation-timing-function`, etc.\n\nThe same goes for values. Keep in mind that a regular expression value is matched against the entire value of the declaration, not specific parts of it. For example, a value like `\"10px solid rgba( 255 , 0 , 0 , 0.5 )\"` will *not* match `\"/^solid/\"` (notice beginning of the line boundary) but *will* match `\"/\\\\s+solid\\\\s+/\"` or `\"/\\\\bsolid\\\\b/\"`.\n\nBe careful with regex matching not to accidentally consider quoted string values and `url()` arguments. For example, `\"/red/\"` will match value such as `\"1px dotted red\"` as well as `\"\\\"foo\\\"\"` and `\"white url(/mysite.com/red.png)\"`.\n\nGiven:\n\n```js\n{\n  \"transform\": [\"/scale3d/\", \"/rotate3d/\", \"/translate3d/\"],\n  \"position\": [\"fixed\"],\n  \"color\": [\"/^green/\"]\n  \"/^animation/\": [\"/ease/\"]\n}\n```\n\nThe following patterns are considered warnings:\n\n```css\na { position: fixed; }\n```\n\n```css\na { transform: scale3d(1, 2, 3); }\n```\n\n```css\na { -webkit-transform: scale3d(1, 2, 3); }\n```\n\n```css\na { color: green; }\n```\n\n```css\na { animation: foo 2s ease-in-out; }\n```\n\n```css\na { animation-timing-function: ease-in-out; }\n```\n\n```css\na { -webkit-animation-timing-function: ease-in-out; }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { position: relative; }\n```\n\n```css\na { transform: scale(2); }\n```\n\n```css\na { -webkit-transform: scale(2); }\n```\n\n```css\na { color: lightgreen; }\n```\n\n```css\na { animation: foo 2s linear; }\n```\n\n```css\na { animation-timing-function: linear; }\n```\n\n```css\na { -webkit-animation-timing-function: linear; }\n```\n","__filename":"user-guide/rules/declaration-property-value-blacklist.md","__url":"/user-guide/rules/declaration-property-value-blacklist/","__resourceUrl":"/user-guide/rules/declaration-property-value-blacklist/index.html","__dataUrl":"/user-guide/rules/declaration-property-value-blacklist/index.html.94d50aa4bcee7c8a1255eb6157d16b0b.json"}