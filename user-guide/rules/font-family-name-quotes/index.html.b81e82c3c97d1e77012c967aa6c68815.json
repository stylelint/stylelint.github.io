{"head":{"title":"font-family-name-quotes","description":"font-family-name-quotes\n\nSpecify whether or not quotation marks should be used around font family names, and whether single or double.\n\nThis…"},"body":"<h1 id=\"font-family-name-quotes\"><a href=\"#font-family-name-quotes\" class=\"statinamic-HeadingAnchor\">#</a>font-family-name-quotes</h1>\n<p>Specify whether or not quotation marks should be used around font family names, and whether single or double.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">\"Times New Roman\"</span>, <span class=\"hljs-string\">'Ancient Runes'</span>, serif; }\n<span class=\"hljs-comment\">/**              ↑               ↑  ↑             ↑\n *               These quotation marks and this one */</span></code></pre>\n<p>This rule ignores <code>$sass</code>, <code>@less</code>, and <code>var(--custom-property)</code> variable syntaxes.</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"statinamic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string</code>: <code>&quot;single-where-required&quot;|&quot;single-where-recommended&quot;|&quot;single-unless-keyword&quot;|&quot;double-where-required&quot;|&quot;double-where-recommended|&quot;double-unless-keyword&quot;</code></p>\n<p><em>Please read the following to understand these options</em>:</p>\n<ul>\n<li>The <code>font-family</code> property accepts a short list of special <strong>keywords</strong>: <code>inherit</code>, <code>serif</code>, <code>sans-serif</code>, <code>cursive</code>, <code>fantasy</code>, and <code>monospace</code>. If you wrap these words in quotes, the browser will not interpret them as keywords, but will instead look for a font by that name (e.g. will look for a <code>&quot;sans-serif&quot;</code> font) -- which is almost <em>never</em> what you want. Instead, you use these keywords to point to the built-in, generic fallbacks (right?). Therefore, <em>all of the options below enforce no quotes around these keywords</em>. (If you actually want to use a font named <code>&quot;sans-serif&quot;</code>, turn this rule off.)</li>\n<li>Quotes are <strong>recommended</strong> <a href=\"https://www.w3.org/TR/CSS2/fonts.html#font-family-prop\">in the spec</a> with &quot;font family names that contain white space, digits, or punctuation characters other than hyphens&quot;.</li>\n<li>Quotes are <strong>required</strong> around font-family names when they are not <a href=\"https://www.w3.org/TR/CSS2/syndata.html#value-def-identifier\">valid CSS identifiers</a>. For example, a font family name requires quotes around it if it contains <code>$</code>, <code>!</code>, or <code>/</code>, but does not require quotes just because it contains spaces or a (non-initial) number or underscore. <em>You can probably bet that almost every font family name you use <strong>will</strong> be a valid CSS identifier</em>.</li>\n</ul>\n<p>For more on these subtleties, read <a href=\"https://mathiasbynens.be/notes/unquoted-font-family\">&quot;Unquoted font family names in CSS&quot;</a>, by Mathias Bynens.</p>\n<p><strong>Caveat:</strong> This rule does not currently understand escape sequences such as those described by Mathias. If you want to use the font family name &quot;Hawaii 5-0&quot; you will need to wrap it in quotes, instead of escaping it as <code>Hawaii \\35 -0</code> or <code>Hawaii\\ 5-0</code>.</p>\n<h3 id=\"single-unless-keyword-and-double-unless-keyword\"><a href=\"#single-unless-keyword-and-double-unless-keyword\" class=\"statinamic-HeadingAnchor\">#</a><code>&quot;single-unless-keyword&quot;</code> and <code>&quot;double-unless-keyword&quot;</code></h3>\n<p>Expect quotes around every font family name that is not a keyword.</p>\n<p>For example, with <code>&quot;single-unless-keyword&quot;</code>, the following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Arial, sans-serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Times New Roman, Times, serif; }</code></pre>\n<p>And the following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Arial'</span>, sans-serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Times New Roman'</span>, <span class=\"hljs-string\">'Times'</span>, serif; }</code></pre>\n<p>The same examples apply to <code>&quot;double-unless-keyword&quot;</code>, but with <code>&quot;</code> quotes.</p>\n<h3 id=\"single-where-required-and-double-where-required\"><a href=\"#single-where-required-and-double-where-required\" class=\"statinamic-HeadingAnchor\">#</a><code>&quot;single-where-required&quot;</code> and <code>&quot;double-where-required&quot;</code></h3>\n<p>Expect quotes only when quotes are <em>required</em> according to the criteria above, and disallow quotes in all other cases.</p>\n<p>For example, with <code>&quot;double-where-required&quot;</code>, the following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">\"Arial\"</span>, sans-serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">\"Times New Roman\"</span>, Times, serif; }</code></pre>\n<p>And the following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Arial, sans-serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Times New Roman, Times, serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">\"Hawaii 5-0\"</span>; }</code></pre>\n<p>The same examples apply to <code>&quot;single-where-required&quot;</code>, but with <code>&#x27;</code> quotes.</p>\n<h3 id=\"single-where-recommended-and-double-where-recommended\"><a href=\"#single-where-recommended-and-double-where-recommended\" class=\"statinamic-HeadingAnchor\">#</a><code>&quot;single-where-recommended&quot;</code> and <code>&quot;double-where-recommended&quot;</code></h3>\n<p>Expect quotes only when quotes are <em>recommended</em> according to the criteria above, and disallow quotes in all other cases. (This includes all cases where quotes are <em>required</em>, as well.)</p>\n<p>For example, with <code>&quot;single-where-recommended&quot;</code>, the following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Times New Roman, Times, serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: MyFontVersion6, sake_case_font; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Arial'</span>, sans-serif; }</code></pre>\n<p>And the following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'Times New Roman'</span>, Times, serif; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: <span class=\"hljs-string\">'MyFontVersion6'</span>, <span class=\"hljs-string\">'sake_case_font'</span>; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-family</span>: Arial, sans-serif; }</code></pre>\n<p>The same examples apply to <code>&quot;double-where-recommended&quot;</code>, but with <code>&quot;</code> quotes.</p>\n","rawBody":"\n# font-family-name-quotes\n\nSpecify whether or not quotation marks should be used around font family names, and whether single or double.\n\n```css\na { font-family: \"Times New Roman\", 'Ancient Runes', serif; }\n/**              ↑               ↑  ↑             ↑\n *               These quotation marks and this one */\n```\n\nThis rule ignores `$sass`, `@less`, and `var(--custom-property)` variable syntaxes.\n\n## Options\n\n`string`: `\"single-where-required\"|\"single-where-recommended\"|\"single-unless-keyword\"|\"double-where-required\"|\"double-where-recommended|\"double-unless-keyword\"`\n\n*Please read the following to understand these options*:\n\n- The `font-family` property accepts a short list of special **keywords**: `inherit`, `serif`, `sans-serif`, `cursive`, `fantasy`, and `monospace`. If you wrap these words in quotes, the browser will not interpret them as keywords, but will instead look for a font by that name (e.g. will look for a `\"sans-serif\"` font) -- which is almost *never* what you want. Instead, you use these keywords to point to the built-in, generic fallbacks (right?). Therefore, *all of the options below enforce no quotes around these keywords*. (If you actually want to use a font named `\"sans-serif\"`, turn this rule off.)\n- Quotes are **recommended** [in the spec](https://www.w3.org/TR/CSS2/fonts.html#font-family-prop) with \"font family names that contain white space, digits, or punctuation characters other than hyphens\".\n- Quotes are **required** around font-family names when they are not [valid CSS identifiers](https://www.w3.org/TR/CSS2/syndata.html#value-def-identifier). For example, a font family name requires quotes around it if it contains `$`, `!`, or `/`, but does not require quotes just because it contains spaces or a (non-initial) number or underscore. *You can probably bet that almost every font family name you use **will** be a valid CSS identifier*.\n\nFor more on these subtleties, read [\"Unquoted font family names in CSS\"](https://mathiasbynens.be/notes/unquoted-font-family), by Mathias Bynens.\n\n**Caveat:** This rule does not currently understand escape sequences such as those described by Mathias. If you want to use the font family name \"Hawaii 5-0\" you will need to wrap it in quotes, instead of escaping it as `Hawaii \\35 -0` or `Hawaii\\ 5-0`.\n\n### `\"single-unless-keyword\"` and `\"double-unless-keyword\"`\n\nExpect quotes around every font family name that is not a keyword.\n\nFor example, with `\"single-unless-keyword\"`, the following patterns are considered warnings:\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: 'Arial', sans-serif; }\n```\n\n```css\na { font-family: 'Times New Roman', 'Times', serif; }\n```\n\nThe same examples apply to `\"double-unless-keyword\"`, but with `\"` quotes.\n\n### `\"single-where-required\"` and `\"double-where-required\"`\n\nExpect quotes only when quotes are *required* according to the criteria above, and disallow quotes in all other cases.\n\nFor example, with `\"double-where-required\"`, the following patterns are considered warnings:\n\n```css\na { font-family: \"Arial\", sans-serif; }\n```\n\n```css\na { font-family: \"Times New Roman\", Times, serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\n```css\na { font-family: \"Hawaii 5-0\"; }\n```\n\nThe same examples apply to `\"single-where-required\"`, but with `'` quotes.\n\n### `\"single-where-recommended\"` and `\"double-where-recommended\"`\n\nExpect quotes only when quotes are *recommended* according to the criteria above, and disallow quotes in all other cases. (This includes all cases where quotes are *required*, as well.)\n\nFor example, with `\"single-where-recommended\"`, the following patterns are considered warnings:\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\n```css\na { font-family: MyFontVersion6, sake_case_font; }\n```\n\n```css\na { font-family: 'Arial', sans-serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: 'Times New Roman', Times, serif; }\n```\n\n```css\na { font-family: 'MyFontVersion6', 'sake_case_font'; }\n```\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\nThe same examples apply to `\"double-where-recommended\"`, but with `\"` quotes.\n","raw":"---\ntitle: font-family-name-quotes\n---\n\n# font-family-name-quotes\n\nSpecify whether or not quotation marks should be used around font family names, and whether single or double.\n\n```css\na { font-family: \"Times New Roman\", 'Ancient Runes', serif; }\n/**              ↑               ↑  ↑             ↑\n *               These quotation marks and this one */\n```\n\nThis rule ignores `$sass`, `@less`, and `var(--custom-property)` variable syntaxes.\n\n## Options\n\n`string`: `\"single-where-required\"|\"single-where-recommended\"|\"single-unless-keyword\"|\"double-where-required\"|\"double-where-recommended|\"double-unless-keyword\"`\n\n*Please read the following to understand these options*:\n\n- The `font-family` property accepts a short list of special **keywords**: `inherit`, `serif`, `sans-serif`, `cursive`, `fantasy`, and `monospace`. If you wrap these words in quotes, the browser will not interpret them as keywords, but will instead look for a font by that name (e.g. will look for a `\"sans-serif\"` font) -- which is almost *never* what you want. Instead, you use these keywords to point to the built-in, generic fallbacks (right?). Therefore, *all of the options below enforce no quotes around these keywords*. (If you actually want to use a font named `\"sans-serif\"`, turn this rule off.)\n- Quotes are **recommended** [in the spec](https://www.w3.org/TR/CSS2/fonts.html#font-family-prop) with \"font family names that contain white space, digits, or punctuation characters other than hyphens\".\n- Quotes are **required** around font-family names when they are not [valid CSS identifiers](https://www.w3.org/TR/CSS2/syndata.html#value-def-identifier). For example, a font family name requires quotes around it if it contains `$`, `!`, or `/`, but does not require quotes just because it contains spaces or a (non-initial) number or underscore. *You can probably bet that almost every font family name you use **will** be a valid CSS identifier*.\n\nFor more on these subtleties, read [\"Unquoted font family names in CSS\"](https://mathiasbynens.be/notes/unquoted-font-family), by Mathias Bynens.\n\n**Caveat:** This rule does not currently understand escape sequences such as those described by Mathias. If you want to use the font family name \"Hawaii 5-0\" you will need to wrap it in quotes, instead of escaping it as `Hawaii \\35 -0` or `Hawaii\\ 5-0`.\n\n### `\"single-unless-keyword\"` and `\"double-unless-keyword\"`\n\nExpect quotes around every font family name that is not a keyword.\n\nFor example, with `\"single-unless-keyword\"`, the following patterns are considered warnings:\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: 'Arial', sans-serif; }\n```\n\n```css\na { font-family: 'Times New Roman', 'Times', serif; }\n```\n\nThe same examples apply to `\"double-unless-keyword\"`, but with `\"` quotes.\n\n### `\"single-where-required\"` and `\"double-where-required\"`\n\nExpect quotes only when quotes are *required* according to the criteria above, and disallow quotes in all other cases.\n\nFor example, with `\"double-where-required\"`, the following patterns are considered warnings:\n\n```css\na { font-family: \"Arial\", sans-serif; }\n```\n\n```css\na { font-family: \"Times New Roman\", Times, serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\n```css\na { font-family: \"Hawaii 5-0\"; }\n```\n\nThe same examples apply to `\"single-where-required\"`, but with `'` quotes.\n\n### `\"single-where-recommended\"` and `\"double-where-recommended\"`\n\nExpect quotes only when quotes are *recommended* according to the criteria above, and disallow quotes in all other cases. (This includes all cases where quotes are *required*, as well.)\n\nFor example, with `\"single-where-recommended\"`, the following patterns are considered warnings:\n\n```css\na { font-family: Times New Roman, Times, serif; }\n```\n\n```css\na { font-family: MyFontVersion6, sake_case_font; }\n```\n\n```css\na { font-family: 'Arial', sans-serif; }\n```\n\nAnd the following patterns are *not* considered warnings:\n\n```css\na { font-family: 'Times New Roman', Times, serif; }\n```\n\n```css\na { font-family: 'MyFontVersion6', 'sake_case_font'; }\n```\n\n```css\na { font-family: Arial, sans-serif; }\n```\n\nThe same examples apply to `\"double-where-recommended\"`, but with `\"` quotes.\n","__filename":"user-guide/rules/font-family-name-quotes.md","__url":"/user-guide/rules/font-family-name-quotes/","__resourceUrl":"/user-guide/rules/font-family-name-quotes/index.html","__dataUrl":"/user-guide/rules/font-family-name-quotes/index.html.b81e82c3c97d1e77012c967aa6c68815.json"}