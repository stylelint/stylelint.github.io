{"head":{"title":"function-parentheses-newline-inside","description":"function-parentheses-newline-inside\n\nRequire a newline or disallow whitespace on the inside of the parentheses of functions.\n\nOptions…"},"body":"<h1 id=\"function-parentheses-newline-inside\"><a class=\"markdownIt-Anchor\" href=\"#function-parentheses-newline-inside\">#</a> function-parentheses-newline-inside</h1>\n<p>Require a newline or disallow whitespace on the inside of the parentheses of functions.</p>\n<pre><code class=\"language-css\">  <span class=\"hljs-selector-tag\">a</span> {\n    <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n      <span class=\"hljs-number\">1</span>,             <span class=\"hljs-comment\">/* ↑ */</span>\n      <span class=\"hljs-number\">1</span>              <span class=\"hljs-comment\">/* ↑ */</span>\n    );               <span class=\"hljs-comment\">/* ↑ */</span>\n  }                  <span class=\"hljs-comment\">/* ↑ */</span>\n<span class=\"hljs-comment\">/** ↑                   ↑\n * The newline inside these two parentheses */</span>\n</code></pre>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p><code>string</code>: <code>&quot;always&quot;|&quot;always-multi-line&quot;|&quot;never-multi-line&quot;</code></p>\n<h3 id=\"always\"><a class=\"markdownIt-Anchor\" href=\"#always\">#</a> <code>&quot;always&quot;</code></h3>\n<p>There <em>must always</em> be a newline inside the parentheses.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>); }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-number\">1</span>\n  ); }\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<h3 id=\"always-multi-line\"><a class=\"markdownIt-Anchor\" href=\"#always-multi-line\">#</a> <code>&quot;always-multi-line&quot;</code></h3>\n<p>There <em>must always</em> be a newline inside the parentheses of multi-line functions.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-number\">1</span>) }\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>) }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>( <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span> ) }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<h3 id=\"never-multi-line\"><a class=\"markdownIt-Anchor\" href=\"#never-multi-line\">#</a> <code>&quot;never-multi-line&quot;</code></h3>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(\n    <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-number\">1</span>\n  );\n}\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>) }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>( <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span> ) }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(<span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-number\">1</span>) }\n</code></pre>\n","rawBody":"\n# function-parentheses-newline-inside\n\nRequire a newline or disallow whitespace on the inside of the parentheses of functions.\n\n```css\n  a {\n    transform: translate(\n      1,             /* ↑ */\n      1              /* ↑ */\n    );               /* ↑ */\n  }                  /* ↑ */\n/** ↑                   ↑\n * The newline inside these two parentheses */\n```\n\n## Options\n\n`string`: `\"always\"|\"always-multi-line\"|\"never-multi-line\"`\n\n### `\"always\"`\n\nThere *must always* be a newline inside the parentheses.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1); }\n```\n\n```css\na { transform: translate(1,\n  1\n  ); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\n### `\"always-multi-line\"`\n\nThere *must always* be a newline inside the parentheses of multi-line functions.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1,\n  1) }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) }\n```\n\n```css\na { transform: translate( 1, 1 ) }\n```\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\n### `\"never-multi-line\"`\n\nThe following patterns are considered warnings:\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) }\n```\n\n```css\na { transform: translate( 1, 1 ) }\n```\n\n```css\na { transform: translate(1,\n  1) }\n```\n","raw":"---\ntitle: function-parentheses-newline-inside\n---\n\n# function-parentheses-newline-inside\n\nRequire a newline or disallow whitespace on the inside of the parentheses of functions.\n\n```css\n  a {\n    transform: translate(\n      1,             /* ↑ */\n      1              /* ↑ */\n    );               /* ↑ */\n  }                  /* ↑ */\n/** ↑                   ↑\n * The newline inside these two parentheses */\n```\n\n## Options\n\n`string`: `\"always\"|\"always-multi-line\"|\"never-multi-line\"`\n\n### `\"always\"`\n\nThere *must always* be a newline inside the parentheses.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1); }\n```\n\n```css\na { transform: translate(1,\n  1\n  ); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\n### `\"always-multi-line\"`\n\nThere *must always* be a newline inside the parentheses of multi-line functions.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1,\n  1) }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) }\n```\n\n```css\na { transform: translate( 1, 1 ) }\n```\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\n### `\"never-multi-line\"`\n\nThe following patterns are considered warnings:\n\n```css\na {\n  transform: translate(\n    1, 1\n  );\n}\n```\n\n```css\na {\n  transform: translate(\n    1,\n    1\n  );\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) }\n```\n\n```css\na { transform: translate( 1, 1 ) }\n```\n\n```css\na { transform: translate(1,\n  1) }\n```\n","__filename":"user-guide/rules/function-parentheses-newline-inside.md","__url":"/user-guide/rules/function-parentheses-newline-inside/","__resourceUrl":"/user-guide/rules/function-parentheses-newline-inside/index.html","__dataUrl":"/user-guide/rules/function-parentheses-newline-inside/index.html.b0e23ee98b9c4e2ee446980ab190bda1.json"}