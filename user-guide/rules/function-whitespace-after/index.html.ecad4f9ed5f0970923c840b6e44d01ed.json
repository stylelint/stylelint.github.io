{"head":{"title":"function-whitespace-after","description":"function-whitespace-after Require or disallow whitespace after functions. This rule does not check for space immediately after ) if the…"},"body":"<h1 id=\"function-whitespace-after\"><a href=\"#function-whitespace-after\" class=\"phenomic-HeadingAnchor\">#</a>function-whitespace-after</h1>\n<p>Require or disallow whitespace after functions.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1) <span class=\"hljs-built_in\">scale</span>(3); }\n<span class=\"hljs-comment\">/**                           ↑\n *                   This space */</span></code></pre>\n<p>This rule does not check for space immediately after <code>)</code> if the very next character is <code>,</code>, <code>)</code>, or <code>}</code>, allowing some of the patterns exemplified below.</p>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>string</code>: <code>&quot;always&quot;|&quot;never&quot;</code></p>\n<h3 id=\"always\"><a href=\"#always\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;always&quot;</code></h3>\n<p>There <em>must always</em> be whitespace after the function.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1)<span class=\"hljs-built_in\">scale</span>(3); }</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1) <span class=\"hljs-built_in\">scale</span>(3); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1)     <span class=\"hljs-built_in\">scale</span>(3); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">transform</span>:\n    <span class=\"hljs-built_in\">translate</span>(1, 1)\n    <span class=\"hljs-built_in\">scale</span>(3);\n}</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* notice the two closing parentheses without a space between */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-built_in\">calc</span>(1 * (1 + 3)); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-comment\">/* notice the ), with no space after the closing parenthesis */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-built_in\">calc</span>(1 * 2px), <span class=\"hljs-built_in\">calc</span>(2 * 5px); }</code></pre>\n<pre><code class=\"hljs language-scss\"><span class=\"hljs-comment\">/* notice the )}, with no space after the closing parenthesis */</span>\n<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">max-height</span>: #{(<span class=\"hljs-variable\">$line-height</span>) * (<span class=\"hljs-variable\">$lines-to-show</span>)}em;\n}</code></pre>\n<pre><code class=\"hljs language-less\"><span class=\"hljs-comment\">/* notice the )}, with no space after the closing parenthesis */</span>\n<span class=\"hljs-selector-tag\">h1</span> {\n  <span class=\"hljs-attribute\">max-height</span>: ((<span class=\"hljs-variable\">@line-height</span>) * (<span class=\"hljs-variable\">@lines-to-show</span>))em;\n}</code></pre>\n<h3 id=\"never\"><a href=\"#never\" class=\"phenomic-HeadingAnchor\">#</a><code>&quot;never&quot;</code></h3>\n<p>There <em>must never</em> be whitespace after the function.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1) <span class=\"hljs-built_in\">scale</span>(3); }</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1)<span class=\"hljs-built_in\">scale</span>(3); }</code></pre>\n","rawBody":"\n# function-whitespace-after\n\nRequire or disallow whitespace after functions.\n\n```css\na { transform: translate(1, 1) scale(3); }\n/**                           ↑\n *                   This space */\n```\n\nThis rule does not check for space immediately after `)` if the very next character is `,`, `)`, or `}`, allowing some of the patterns exemplified below.\n\n## Options\n\n`string`: `\"always\"|\"never\"`\n\n### `\"always\"`\n\nThere *must always* be whitespace after the function.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1)scale(3); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) scale(3); }\n```\n\n```css\na { transform: translate(1, 1)     scale(3); }\n```\n\n```css\na {\n  transform:\n    translate(1, 1)\n    scale(3);\n}\n```\n\n```css\n/* notice the two closing parentheses without a space between */\na { top: calc(1 * (1 + 3)); }\n```\n\n```css\n/* notice the ), with no space after the closing parenthesis */\na { padding: calc(1 * 2px), calc(2 * 5px); }\n```\n\n```scss\n/* notice the )}, with no space after the closing parenthesis */\nh1 {\n  max-height: #{($line-height) * ($lines-to-show)}em;\n}\n```\n\n```less\n/* notice the )}, with no space after the closing parenthesis */\nh1 {\n  max-height: ((@line-height) * (@lines-to-show))em;\n}\n```\n\n### `\"never\"`\n\nThere *must never* be whitespace after the function.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1) scale(3); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1)scale(3); }\n```\n","raw":"---\ntitle: function-whitespace-after\n---\n\n# function-whitespace-after\n\nRequire or disallow whitespace after functions.\n\n```css\na { transform: translate(1, 1) scale(3); }\n/**                           ↑\n *                   This space */\n```\n\nThis rule does not check for space immediately after `)` if the very next character is `,`, `)`, or `}`, allowing some of the patterns exemplified below.\n\n## Options\n\n`string`: `\"always\"|\"never\"`\n\n### `\"always\"`\n\nThere *must always* be whitespace after the function.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1)scale(3); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1) scale(3); }\n```\n\n```css\na { transform: translate(1, 1)     scale(3); }\n```\n\n```css\na {\n  transform:\n    translate(1, 1)\n    scale(3);\n}\n```\n\n```css\n/* notice the two closing parentheses without a space between */\na { top: calc(1 * (1 + 3)); }\n```\n\n```css\n/* notice the ), with no space after the closing parenthesis */\na { padding: calc(1 * 2px), calc(2 * 5px); }\n```\n\n```scss\n/* notice the )}, with no space after the closing parenthesis */\nh1 {\n  max-height: #{($line-height) * ($lines-to-show)}em;\n}\n```\n\n```less\n/* notice the )}, with no space after the closing parenthesis */\nh1 {\n  max-height: ((@line-height) * (@lines-to-show))em;\n}\n```\n\n### `\"never\"`\n\nThere *must never* be whitespace after the function.\n\nThe following patterns are considered warnings:\n\n```css\na { transform: translate(1, 1) scale(3); }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: translate(1, 1)scale(3); }\n```\n","__filename":"user-guide/rules/function-whitespace-after.md","__url":"/user-guide/rules/function-whitespace-after/","__resourceUrl":"/user-guide/rules/function-whitespace-after/index.html","__dataUrl":"/user-guide/rules/function-whitespace-after/index.html.ecad4f9ed5f0970923c840b6e44d01ed.json"}