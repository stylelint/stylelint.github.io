{"head":{"title":"Rules","description":"Rules\n\nThere are over a hundred rules built into stylelint. They all focus on standard css and aim to be valuable to the majority of users…"},"body":"<h1 id=\"rules\"><a href=\"#rules\" class=\"phenomic-HeadingAnchor\">#</a>Rules</h1>\n<p>There are over a hundred rules built into stylelint. They all focus on <em>standard css</em> and aim to be valuable to the majority of users. In addition to these rules there are <a href=\"/user-guide/plugins/\">plugins</a>, which are rules built by the community that support methodologies, toolsets, <em>non-standard</em> CSS features, or very specific use cases.</p>\n<p>Every rule and plugin is standalone and turned off by default. None of the rules or plugins have default values for their options.</p>\n<h2 id=\"list-of-rules\"><a href=\"#list-of-rules\" class=\"phenomic-HeadingAnchor\">#</a>List of rules</h2>\n<p>Here are all the rules within stylelint, grouped by the <a href=\"http://apps.workflower.fi/vocabs/css/en\"><em>thing</em></a> they apply to.</p>\n<p>Don&#x27;t forget to look at the list of <a href=\"/user-guide/plugins/\">plugins</a> for more ways to lint.</p>\n<h3 id=\"color\"><a href=\"#color\" class=\"phenomic-HeadingAnchor\">#</a>Color</h3>\n<ul>\n<li><a href=\"color-hex-case/\"><code>color-hex-case</code></a>: Specify lowercase or uppercase for hex colors.</li>\n<li><a href=\"color-hex-length/\"><code>color-hex-length</code></a>: Specify short or long notation for hex colors.</li>\n<li><a href=\"color-named/\"><code>color-named</code></a>: Require (where possible) or disallow named colors.</li>\n<li><a href=\"color-no-hex/\"><code>color-no-hex</code></a>: Disallow hex colors.</li>\n<li><a href=\"color-no-invalid-hex/\"><code>color-no-invalid-hex</code></a>: Disallow invalid hex colors.</li>\n</ul>\n<h3 id=\"font-family\"><a href=\"#font-family\" class=\"phenomic-HeadingAnchor\">#</a>Font family</h3>\n<ul>\n<li><a href=\"font-family-name-quotes/\"><code>font-family-name-quotes</code></a>: Specify whether or not quotation marks should be used around font family names, and whether single or double.</li>\n</ul>\n<h3 id=\"font-weight\"><a href=\"#font-weight\" class=\"phenomic-HeadingAnchor\">#</a>Font weight</h3>\n<ul>\n<li><a href=\"font-weight-notation/\"><code>font-weight-notation</code></a>: Require numeric or named (where possible) <code>font-weight</code> values.</li>\n</ul>\n<h3 id=\"function\"><a href=\"#function\" class=\"phenomic-HeadingAnchor\">#</a>Function</h3>\n<ul>\n<li><a href=\"function-blacklist/\"><code>function-blacklist</code></a>: Specify a blacklist of disallowed functions.</li>\n<li><a href=\"function-calc-no-unspaced-operator/\"><code>function-calc-no-unspaced-operator</code></a>: Disallow an unspaced operator within <code>calc</code> functions.</li>\n<li><a href=\"function-comma-newline-after/\"><code>function-comma-newline-after</code></a>: Require a newline or disallow whitespace after the commas of functions.</li>\n<li><a href=\"function-comma-newline-before/\"><code>function-comma-newline-before</code></a>: Require a newline or disallow whitespace before the commas of functions.</li>\n<li><a href=\"function-comma-space-after/\"><code>function-comma-space-after</code></a>: Require a single space or disallow whitespace after the commas of functions.</li>\n<li><a href=\"function-comma-space-before/\"><code>function-comma-space-before</code></a>: Require a single space or disallow whitespace before the commas of functions.</li>\n<li><a href=\"function-linear-gradient-no-nonstandard-direction/\"><code>function-linear-gradient-no-nonstandard-direction</code></a>: Disallow direction values in <code>linear-gradient()</code> calls that are not valid according to the <a href=\"https://developer.mozilla.org/en-US/Web/CSS/linear-gradient#Syntax\">standard syntax</a>.</li>\n<li><a href=\"function-max-empty-lines/\"><code>function-max-empty-lines</code></a>: Limit the number of adjacent empty lines within functions.</li>\n<li><a href=\"function-parentheses-newline-inside/\"><code>function-parentheses-newline-inside</code></a>: Require a newline or disallow whitespace on the inside of the parentheses of functions.</li>\n<li><a href=\"function-parentheses-space-inside/\"><code>function-parentheses-space-inside</code></a>: Require a single space or disallow whitespace on the inside of the parentheses of functions.</li>\n<li><a href=\"function-url-data-uris/\"><code>function-url-data-uris</code></a>: Require or disallow data URIs for urls.</li>\n<li><a href=\"function-url-quotes/\"><code>function-url-quotes</code></a>: Specify single, double or no quotes for urls.</li>\n<li><a href=\"function-whitelist/\"><code>function-whitelist</code></a>: Specify a whitelist of allowed functions.</li>\n<li><a href=\"function-whitespace-after/\"><code>function-whitespace-after</code></a>: Require or disallow whitespace after functions.</li>\n</ul>\n<h3 id=\"number\"><a href=\"#number\" class=\"phenomic-HeadingAnchor\">#</a>Number</h3>\n<ul>\n<li><a href=\"number-leading-zero/\"><code>number-leading-zero</code></a>: Require or disallow a leading zero for fractional numbers less than 1.</li>\n<li><a href=\"number-max-precision/\"><code>number-max-precision</code></a>: Limit the number of decimal places allowed in numbers.</li>\n<li><a href=\"number-no-trailing-zeros/\"><code>number-no-trailing-zeros</code></a>: Disallow trailing zeros in numbers.</li>\n<li><a href=\"number-zero-length-no-unit/\"><code>number-zero-length-no-unit</code></a>: Disallow units for zero lengths.</li>\n</ul>\n<h3 id=\"string\"><a href=\"#string\" class=\"phenomic-HeadingAnchor\">#</a>String</h3>\n<ul>\n<li><a href=\"string-no-newline/\"><code>string-no-newline</code></a>: Disallow (unescaped) newlines in strings.</li>\n<li><a href=\"string-quotes/\"><code>string-quotes</code></a>: Specify single or double quotes around strings.</li>\n</ul>\n<h3 id=\"time\"><a href=\"#time\" class=\"phenomic-HeadingAnchor\">#</a>Time</h3>\n<ul>\n<li><a href=\"time-no-imperceptible/\"><code>time-no-imperceptible</code></a>: Disallow <code>animation</code> and <code>transition</code> times under 100ms.</li>\n</ul>\n<h3 id=\"unit\"><a href=\"#unit\" class=\"phenomic-HeadingAnchor\">#</a>Unit</h3>\n<ul>\n<li><a href=\"unit-blacklist/\"><code>unit-blacklist</code></a>: Specify a blacklist of disallowed units.</li>\n<li><a href=\"unit-no-unknown/\"><code>unit-no-unknown</code></a>: Disallow unknown units.</li>\n<li><a href=\"unit-whitelist/\"><code>unit-whitelist</code></a>: Specify a whitelist of allowed units.</li>\n</ul>\n<h3 id=\"value\"><a href=\"#value\" class=\"phenomic-HeadingAnchor\">#</a>Value</h3>\n<ul>\n<li><a href=\"value-no-vendor-prefix/\"><code>value-no-vendor-prefix</code></a>: Disallow vendor prefixes for values.</li>\n</ul>\n<h3 id=\"value-list\"><a href=\"#value-list\" class=\"phenomic-HeadingAnchor\">#</a>Value list</h3>\n<ul>\n<li><a href=\"value-list-comma-newline-after/\"><code>value-list-comma-newline-after</code></a>: Require a newline or disallow whitespace after the commas of value lists.</li>\n<li><a href=\"value-list-comma-newline-before/\"><code>value-list-comma-newline-before</code></a>: Require a newline or disallow whitespace before the commas of value lists.</li>\n<li><a href=\"value-list-comma-space-after/\"><code>value-list-comma-space-after</code></a>: Require a single space or disallow whitespace after the commas of value lists.</li>\n<li><a href=\"value-list-comma-space-before/\"><code>value-list-comma-space-before</code></a>: Require a single space or disallow whitespace before the commas of value lists.</li>\n</ul>\n<h3 id=\"custom-property\"><a href=\"#custom-property\" class=\"phenomic-HeadingAnchor\">#</a>Custom property</h3>\n<ul>\n<li><a href=\"custom-property-no-outside-root/\"><code>custom-property-no-outside-root</code></a>: Disallow custom properties outside of <code>:root</code> rules.</li>\n<li><a href=\"custom-property-pattern/\"><code>custom-property-pattern</code></a>: Specify a pattern for custom properties.</li>\n</ul>\n<h3 id=\"property\"><a href=\"#property\" class=\"phenomic-HeadingAnchor\">#</a>Property</h3>\n<ul>\n<li><a href=\"property-blacklist/\"><code>property-blacklist</code></a>: Specify a blacklist of disallowed properties.</li>\n<li><a href=\"property-no-vendor-prefix/\"><code>property-no-vendor-prefix</code></a>: Disallow vendor prefixes for properties.</li>\n<li><a href=\"property-unit-blacklist/\"><code>property-unit-blacklist</code></a>: Specify a blacklist of disallowed units for specific properties.</li>\n<li><a href=\"property-unit-whitelist/\"><code>property-unit-whitelist</code></a>: Specify a whitelist of allowed units for specific properties.</li>\n<li><a href=\"property-value-blacklist/\"><code>property-value-blacklist</code></a>: Specify a blacklist of disallowed values for specific properties.</li>\n<li><a href=\"property-value-whitelist/\"><code>property-value-whitelist</code></a>: Specify a whitelist of allowed values for specific properties.</li>\n<li><a href=\"property-whitelist/\"><code>property-whitelist</code></a>: Specify a whitelist of allowed properties.</li>\n</ul>\n<h3 id=\"declaration\"><a href=\"#declaration\" class=\"phenomic-HeadingAnchor\">#</a>Declaration</h3>\n<ul>\n<li><a href=\"declaration-bang-space-after/\"><code>declaration-bang-space-after</code></a>: Require a single space or disallow whitespace after the bang of declarations.</li>\n<li><a href=\"declaration-bang-space-before/\"><code>declaration-bang-space-before</code></a>: Require a single space or disallow whitespace before the bang of declarations.</li>\n<li><a href=\"declaration-colon-newline-after/\"><code>declaration-colon-newline-after</code></a>: Require a newline or disallow whitespace after the colon of declarations.</li>\n<li><a href=\"declaration-colon-space-after/\"><code>declaration-colon-space-after</code></a>: Require a single space or disallow whitespace after the colon of declarations.</li>\n<li><a href=\"declaration-colon-space-before/\"><code>declaration-colon-space-before</code></a>: Require a single space or disallow whitespace before the colon of declarations.</li>\n<li><a href=\"declaration-no-important/\"><code>declaration-no-important</code></a>: Disallow <code>!important</code> within declarations.</li>\n</ul>\n<h3 id=\"declaration-block\"><a href=\"#declaration-block\" class=\"phenomic-HeadingAnchor\">#</a>Declaration block</h3>\n<ul>\n<li><a href=\"declaration-block-no-duplicate-properties/\"><code>declaration-block-no-duplicate-properties</code></a>: Disallow duplicate properties within declaration blocks.</li>\n<li><a href=\"declaration-block-no-ignored-properties/\"><code>declaration-block-no-ignored-properties</code></a>: Disallow property values that are ignored due to another property value in the same rule.</li>\n<li><a href=\"declaration-block-no-shorthand-property-overrides/\"><code>declaration-block-no-shorthand-property-overrides</code></a>: Disallow shorthand properties that override related longhand properties within declaration blocks.</li>\n<li><a href=\"declaration-block-properties-order/\"><code>declaration-block-properties-order</code></a>: Specify the order of properties within declaration blocks.</li>\n<li><a href=\"declaration-block-semicolon-newline-after/\"><code>declaration-block-semicolon-newline-after</code></a>: Require a newline or disallow whitespace after the semicolons of declaration blocks.</li>\n<li><a href=\"declaration-block-semicolon-newline-before/\"><code>declaration-block-semicolon-newline-before</code></a>: Require a newline or disallow whitespace before the semicolons of declaration blocks.</li>\n<li><a href=\"declaration-block-semicolon-space-after/\"><code>declaration-block-semicolon-space-after</code></a>: Require a single space or disallow whitespace after the semicolons of declaration blocks.</li>\n<li><a href=\"declaration-block-semicolon-space-before/\"><code>declaration-block-semicolon-space-before</code></a>: Require a single space or disallow whitespace before the semicolons of declaration blocks.</li>\n<li><a href=\"declaration-block-single-line-max-declarations/\"><code>declaration-block-single-line-max-declarations</code></a>: Limit the number of declaration within single line declaration blocks.</li>\n<li><a href=\"declaration-block-trailing-semicolon/\"><code>declaration-block-trailing-semicolon</code></a>: Require or disallow a trailing semicolon within declaration blocks.</li>\n</ul>\n<h3 id=\"block\"><a href=\"#block\" class=\"phenomic-HeadingAnchor\">#</a>Block</h3>\n<ul>\n<li><a href=\"block-closing-brace-newline-after/\"><code>block-closing-brace-newline-after</code></a>: Require a newline or disallow whitespace after the closing brace of blocks.</li>\n<li><a href=\"block-closing-brace-newline-before/\"><code>block-closing-brace-newline-before</code></a>: Require a newline or disallow whitespace before the closing brace of blocks.</li>\n<li><a href=\"block-closing-brace-space-after/\"><code>block-closing-brace-space-after</code></a>: Require a single space or disallow whitespace after the closing brace of blocks.</li>\n<li><a href=\"block-closing-brace-space-before/\"><code>block-closing-brace-space-before</code></a>: Require a single space or disallow whitespace before the closing brace of blocks.</li>\n<li><a href=\"block-no-empty/\"><code>block-no-empty</code></a>: Disallow empty blocks.</li>\n<li><a href=\"block-no-single-line/\"><code>block-no-single-line</code></a>: Disallow single-line blocks.</li>\n<li><a href=\"block-opening-brace-newline-after/\"><code>block-opening-brace-newline-after</code></a>: Require a newline after the opening brace of blocks.</li>\n<li><a href=\"block-opening-brace-newline-before/\"><code>block-opening-brace-newline-before</code></a>: Require a newline or disallow whitespace before the opening brace of blocks.</li>\n<li><a href=\"block-opening-brace-space-after/\"><code>block-opening-brace-space-after</code></a>: Require a single space or disallow whitespace after the opening brace of blocks.</li>\n<li><a href=\"block-opening-brace-space-before/\"><code>block-opening-brace-space-before</code></a>: Require a single space or disallow whitespace before the opening brace of blocks.</li>\n</ul>\n<h3 id=\"selector\"><a href=\"#selector\" class=\"phenomic-HeadingAnchor\">#</a>Selector</h3>\n<ul>\n<li><a href=\"selector-class-pattern/\"><code>selector-class-pattern</code></a>: Specify a pattern for class selectors.</li>\n<li><a href=\"selector-combinator-space-after/\"><code>selector-combinator-space-after</code></a>: Require a single space or disallow whitespace after the combinators of selectors.</li>\n<li><a href=\"selector-combinator-space-before/\"><code>selector-combinator-space-before</code></a>: Require a single space or disallow whitespace before the combinators of selectors.</li>\n<li><a href=\"selector-id-pattern/\"><code>selector-id-pattern</code></a>: Specify a pattern for id selectors.</li>\n<li><a href=\"selector-max-specificity/\"><code>selector-max-specificity</code></a>: Limit the specificity of selectors.</li>\n<li><a href=\"selector-no-attribute/\"><code>selector-no-attribute</code></a>: Disallow attribute selectors.</li>\n<li><a href=\"selector-no-combinator/\"><code>selector-no-combinator</code></a>: Disallow combinators in selectors.</li>\n<li><a href=\"selector-no-id/\"><code>selector-no-id</code></a>: Disallow id selectors.</li>\n<li><a href=\"selector-no-type/\"><code>selector-no-type</code></a>: Disallow type selectors.</li>\n<li><a href=\"selector-no-universal/\"><code>selector-no-universal</code></a>: Disallow the universal selector.</li>\n<li><a href=\"selector-no-vendor-prefix/\"><code>selector-no-vendor-prefix</code></a>: Disallow vendor prefixes for selectors.</li>\n<li><a href=\"selector-pseudo-element-colon-notation/\"><code>selector-pseudo-element-colon-notation</code></a>: Specify single or double colon notation for applicable pseudo-elements.</li>\n<li><a href=\"selector-root-no-composition/\"><code>selector-root-no-composition</code></a>: Disallow the composition of <code>:root</code> in selectors.</li>\n<li><a href=\"selector-type-case/\"><code>selector-type-case</code></a>: Specify lowercase or uppercase for type selector.</li>\n</ul>\n<h3 id=\"selector-list\"><a href=\"#selector-list\" class=\"phenomic-HeadingAnchor\">#</a>Selector list</h3>\n<ul>\n<li><a href=\"selector-list-comma-newline-after/\"><code>selector-list-comma-newline-after</code></a>: Require a newline or disallow whitespace after the commas of selector lists.</li>\n<li><a href=\"selector-list-comma-newline-before/\"><code>selector-list-comma-newline-before</code></a>: Require a newline or disallow whitespace before the commas of selector lists.</li>\n<li><a href=\"selector-list-comma-space-after/\"><code>selector-list-comma-space-after</code></a>: Require a single space or disallow whitespace after the commas of selector lists.</li>\n<li><a href=\"selector-list-comma-space-before/\"><code>selector-list-comma-space-before</code></a>: Require a single space or disallow whitespace before the commas of selector lists.</li>\n</ul>\n<h3 id=\"root-rule\"><a href=\"#root-rule\" class=\"phenomic-HeadingAnchor\">#</a>Root rule</h3>\n<ul>\n<li><a href=\"root-no-standard-properties/\"><code>root-no-standard-properties</code></a>: Disallow standard properties inside <code>:root</code> rules.</li>\n</ul>\n<h3 id=\"rule\"><a href=\"#rule\" class=\"phenomic-HeadingAnchor\">#</a>Rule</h3>\n<ul>\n<li><a href=\"rule-nested-empty-line-before/\"><code>rule-nested-empty-line-before</code></a>: Require or disallow an empty line before nested rules.</li>\n<li><a href=\"rule-non-nested-empty-line-before/\"><code>rule-non-nested-empty-line-before</code></a>: Require or disallow an empty line before non-nested rules.</li>\n</ul>\n<h3 id=\"media-feature\"><a href=\"#media-feature\" class=\"phenomic-HeadingAnchor\">#</a>Media feature</h3>\n<ul>\n<li><a href=\"media-feature-colon-space-after/\"><code>media-feature-colon-space-after</code></a>: Require a single space or disallow whitespace after the colon in media features.</li>\n<li><a href=\"media-feature-colon-space-before/\"><code>media-feature-colon-space-before</code></a>: Require a single space or disallow whitespace before the colon in media features.</li>\n<li><a href=\"media-feature-name-no-vendor-prefix/\"><code>media-feature-name-no-vendor-prefix</code></a>: Disallow vendor prefixes for media feature names.</li>\n<li><a href=\"media-feature-no-missing-punctuation/\"><code>media-feature-no-missing-punctuation</code></a>: Disallow missing punctuation for non-boolean media features.</li>\n<li><a href=\"media-feature-range-operator-space-after/\"><code>media-feature-range-operator-space-after</code></a>: Require a single space or disallow whitespace after the range operator in media features.</li>\n<li><a href=\"media-feature-range-operator-space-before/\"><code>media-feature-range-operator-space-before</code></a>: Require a single space or disallow whitespace before the range operator in media features.</li>\n</ul>\n<h3 id=\"custom-media\"><a href=\"#custom-media\" class=\"phenomic-HeadingAnchor\">#</a>Custom media</h3>\n<ul>\n<li><a href=\"custom-media-pattern/\"><code>custom-media-pattern</code></a>: Specify a pattern for custom media query names.</li>\n</ul>\n<h3 id=\"media-query\"><a href=\"#media-query\" class=\"phenomic-HeadingAnchor\">#</a>Media query</h3>\n<ul>\n<li><a href=\"media-query-parentheses-space-inside/\"><code>media-query-parentheses-space-inside</code></a>: Require a single space or disallow whitespace on the inside of the parentheses within media queries.</li>\n</ul>\n<h3 id=\"media-query-list\"><a href=\"#media-query-list\" class=\"phenomic-HeadingAnchor\">#</a>Media query list</h3>\n<ul>\n<li><a href=\"media-query-list-comma-newline-after/\"><code>media-query-list-comma-newline-after</code></a>: Require a newline or disallow whitespace after the commas of media query lists.</li>\n<li><a href=\"media-query-list-comma-newline-before/\"><code>media-query-list-comma-newline-before</code></a>: Require a newline or disallow whitespace before the commas of media query lists.</li>\n<li><a href=\"media-query-list-comma-space-after/\"><code>media-query-list-comma-space-after</code></a>: Require a single space or disallow whitespace after the commas of media query lists.</li>\n<li><a href=\"media-query-list-comma-space-before/\"><code>media-query-list-comma-space-before</code></a>: Require a single space or disallow whitespace before the commas of media query lists.</li>\n</ul>\n<h3 id=\"at-rule\"><a href=\"#at-rule\" class=\"phenomic-HeadingAnchor\">#</a>At rule</h3>\n<ul>\n<li><a href=\"at-rule-empty-line-before/\"><code>at-rule-empty-line-before</code></a>: Require or disallow an empty line before at-rules.</li>\n<li><a href=\"at-rule-no-vendor-prefix/\"><code>at-rule-no-vendor-prefix</code></a>: Disallow vendor prefixes for at-rules.</li>\n<li><a href=\"at-rule-semicolon-newline-after/\"><code>at-rule-semicolon-newline-after</code></a>: Require a newline after the semicolon of at-rules.</li>\n</ul>\n<h3 id=\"comment\"><a href=\"#comment\" class=\"phenomic-HeadingAnchor\">#</a>Comment</h3>\n<ul>\n<li><a href=\"comment-empty-line-before/\"><code>comment-empty-line-before</code></a>: Require or disallow an empty line before comments.</li>\n<li><a href=\"comment-whitespace-inside/\"><code>comment-whitespace-inside</code></a>: Require or disallow whitespace on the inside of comment markers.</li>\n</ul>\n<h3 id=\"general--sheet\"><a href=\"#general--sheet\" class=\"phenomic-HeadingAnchor\">#</a>General / Sheet</h3>\n<ul>\n<li><a href=\"indentation/\"><code>indentation</code></a>: Specify indentation.</li>\n<li><a href=\"max-empty-lines/\"><code>max-empty-lines</code></a>: Limit the number of adjacent empty lines.</li>\n<li><a href=\"max-line-length/\"><code>max-line-length</code></a>: Limit the length of a line.</li>\n<li><a href=\"max-nesting-depth/\"><code>max-nesting-depth</code></a>: Limit the depth of nesting.</li>\n<li><a href=\"no-browser-hacks/\"><code>no-browser-hacks</code></a>: Disallow browser hacks that are irrelevant to the browsers you are targeting.</li>\n<li><a href=\"no-descending-specificity/\"><code>no-descending-specificity</code></a>: Disallow selectors of lower specificity from coming after overriding selectors of higher specificity.</li>\n<li><a href=\"no-duplicate-selectors/\"><code>no-duplicate-selectors</code></a>: Disallow duplicate selectors.</li>\n<li><a href=\"no-eol-whitespace/\"><code>no-eol-whitespace</code></a>: Disallow end-of-line whitespace.</li>\n<li><a href=\"no-indistinguishable-colors/\"><code>no-indistinguishable-colors</code></a>: Disallow colors that are suspiciously close to being identical.</li>\n<li><a href=\"no-invalid-double-slash-comments/\"><code>no-invalid-double-slash-comments</code></a>: Disallow double-slash comments (<code>//...</code>) which are not supported by CSS.</li>\n<li><a href=\"no-missing-eof-newline/\"><code>no-missing-eof-newline</code></a>: Disallow missing end-of-file newline.</li>\n<li><a href=\"no-unknown-animations/\"><code>no-unknown-animations</code></a>: Disallow animation names that do not correspond to a <code>@keyframes</code> declaration.</li>\n<li><a href=\"no-unsupported-browser-features/\"><code>no-unsupported-browser-features</code></a>: Disallow features that are unsupported by the browsers that you are targeting.</li>\n<li><a href=\"stylelint-disable-reason/\"><code>stylelint-disable-reason</code></a>: Require a reason comment before or after <code>stylelint-disable</code> comments.</li>\n</ul>\n<h2 id=\"about-rule-names\"><a href=\"#about-rule-names\" class=\"phenomic-HeadingAnchor\">#</a>About rule names</h2>\n<ul>\n<li>\n<p>Made of lowercase words separated by hyphens.</p>\n</li>\n<li>\n<p>Split into two parts:</p>\n<ul>\n<li>The first describes what <a href=\"http://apps.workflower.fi/vocabs/css/en\"><em>thing</em></a> the rule applies to.</li>\n<li>The second describes what the rule is checking.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"hljs language-shell\">\"number-leading-zero\"\n    ↑       ↑\nthe thing   what the rule is checking</code></pre>\n<ul>\n<li>Except when the rule applies to the whole stylesheet:</li>\n</ul>\n<pre><code class=\"hljs language-shell\">\"no-eol-whitespace\"\n\"indentation\"\n     ↑\n  what the rules are checking</code></pre>\n<h3 id=\"no-rules\"><a href=\"#no-rules\" class=\"phenomic-HeadingAnchor\">#</a>No rules</h3>\n<p>Most rules allow you to choose whether you want to require *or- disallow something.</p>\n<p>For example, whether numbers <em>must</em> or <em>must not</em> have a leading zero:</p>\n<ul>\n<li>\n<p><code>number-leading-zero</code>: <code>string - &quot;always&quot;|&quot;never&quot;</code></p>\n<ul>\n<li><code>&quot;always&quot;</code> - there <em>must always</em> be a leading zero.</li>\n<li><code>&quot;never&quot;</code> - there <em>must never</em> be a leading zero.</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">line-height</span>: <span class=\"hljs-number\">0.5</span>; }\n<span class=\"hljs-comment\">/**                  ↑\n *   This leading zero */</span></code></pre>\n<p>However, some rules <em>just disallow</em> something. <code>*-no-*</code> is used to identify these rules.</p>\n<p>For example, whether empty blocks should be disallowed:</p>\n<ul>\n<li><code>block-no-empty</code> - blocks <em>must not</em> be empty.</li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> { }\n<span class=\"hljs-comment\">/**    ↑\n *  Blocks like this */</span></code></pre>\n<p>Notice how, for a rule like this, it does not make sense to have an option to enforce the opposite i.e. that every block <em>must</em> be empty.</p>\n<h3 id=\"max-rules\"><a href=\"#max-rules\" class=\"phenomic-HeadingAnchor\">#</a>Max rules</h3>\n<p><code>*-max-*</code> is used when a rule is <em>setting a limit</em> to something.</p>\n<p>For example, specifying the maximum number of digits after the &quot;.&quot; in a number:</p>\n<ul>\n<li><code>number-max-precision</code>: <code>int</code></li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">1.333em</span>; }\n<span class=\"hljs-comment\">/**                 ↑\n * The maximum number of digits after this \".\" */</span></code></pre>\n<h3 id=\"whitespace-rules\"><a href=\"#whitespace-rules\" class=\"phenomic-HeadingAnchor\">#</a>Whitespace rules</h3>\n<p>Whitespace rules allow you to specify whether an empty line, a single space, a newline or no space must be used in some specific part of the stylesheet.</p>\n<p>The whitespace rules combine two sets of keywords:</p>\n<ol>\n<li><code>before</code>, <code>after</code> and <code>inside</code> are used to specify where the whitespace (if any) is expected.</li>\n<li><code>empty-line</code>, <code>space</code> and <code>newline</code> are used to specify whether a single empty line, a single space, a single newline or no space is expected there.</li>\n</ol>\n<p>For example, specifying if a single empty line or no space must come before all the comments in a stylesheet:</p>\n<ul>\n<li><code>comment-empty-line-before</code>: <code>string</code> - <code>&quot;always&quot;|&quot;never&quot;</code></li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> {}\n                  ←\n    <span class=\"hljs-comment\">/* comment */</span> ↑\n                  ↑\n<span class=\"hljs-comment\">/**               ↑\n *        This empty line  */</span></code></pre>\n<p>Additionally, some whitespace rule make use of another set of keywords:</p>\n<ol>\n<li><code>comma</code>, <code>colon</code>, <code>semicolon</code>, <code>opening-brace</code>, <code>closing-brace</code>, <code>opening-parenthesis</code>, <code>closing-parenthesis</code>, <code>operator</code> or <code>range-operator</code> are used if a specific piece of punctuation in the <em>thing</em> is being targetted.</li>\n</ol>\n<p>For example, specifying if a single space or no space must come after a comma in a function:</p>\n<ul>\n<li><code>function-comma-space-after</code>: <code>string</code> - <code>&quot;always&quot;|&quot;never&quot;</code></li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(1, 1) }\n<span class=\"hljs-comment\">/**                           ↑\n *  The space after this commas */</span></code></pre>\n<p>The plural of the punctuation is used for <code>inside</code> rules. For example, specifying if a single space or no space must be inside the parentheses of a function:</p>\n<ul>\n<li><code>function-parentheses-space-inside</code>: <code>string</code> - <code>&quot;always&quot;|&quot;never&quot;</code></li>\n</ul>\n<pre><code class=\"hljs language-css\">    <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>( 1, 1 ); }\n<span class=\"hljs-comment\">/**                         ↑      ↑\n * The space inside these two parentheses */</span></code></pre>\n","rawBody":"\n# Rules\n\nThere are over a hundred rules built into stylelint. They all focus on *standard css* and aim to be valuable to the majority of users. In addition to these rules there are [plugins](/user-guide/plugins/), which are rules built by the community that support methodologies, toolsets, *non-standard* CSS features, or very specific use cases.\n\nEvery rule and plugin is standalone and turned off by default. None of the rules or plugins have default values for their options.\n\n## List of rules\n\nHere are all the rules within stylelint, grouped by the [*thing*](http://apps.workflower.fi/vocabs/css/en) they apply to.\n\nDon't forget to look at the list of [plugins](/user-guide/plugins/) for more ways to lint.\n\n### Color\n\n- [`color-hex-case`](color-hex-case/): Specify lowercase or uppercase for hex colors.\n- [`color-hex-length`](color-hex-length/): Specify short or long notation for hex colors.\n- [`color-named`](color-named/): Require (where possible) or disallow named colors.\n- [`color-no-hex`](color-no-hex/): Disallow hex colors.\n- [`color-no-invalid-hex`](color-no-invalid-hex/): Disallow invalid hex colors.\n\n### Font family\n\n- [`font-family-name-quotes`](font-family-name-quotes/): Specify whether or not quotation marks should be used around font family names, and whether single or double.\n\n### Font weight\n\n- [`font-weight-notation`](font-weight-notation/): Require numeric or named (where possible) `font-weight` values.\n\n### Function\n\n- [`function-blacklist`](function-blacklist/): Specify a blacklist of disallowed functions.\n- [`function-calc-no-unspaced-operator`](function-calc-no-unspaced-operator/): Disallow an unspaced operator within `calc` functions.\n- [`function-comma-newline-after`](function-comma-newline-after/): Require a newline or disallow whitespace after the commas of functions.\n- [`function-comma-newline-before`](function-comma-newline-before/): Require a newline or disallow whitespace before the commas of functions.\n- [`function-comma-space-after`](function-comma-space-after/): Require a single space or disallow whitespace after the commas of functions.\n- [`function-comma-space-before`](function-comma-space-before/): Require a single space or disallow whitespace before the commas of functions.\n- [`function-linear-gradient-no-nonstandard-direction`](function-linear-gradient-no-nonstandard-direction/): Disallow direction values in `linear-gradient()` calls that are not valid according to the [standard syntax](https://developer.mozilla.org/en-US/Web/CSS/linear-gradient#Syntax).\n- [`function-max-empty-lines`](function-max-empty-lines/): Limit the number of adjacent empty lines within functions.\n- [`function-parentheses-newline-inside`](function-parentheses-newline-inside/): Require a newline or disallow whitespace on the inside of the parentheses of functions.\n- [`function-parentheses-space-inside`](function-parentheses-space-inside/): Require a single space or disallow whitespace on the inside of the parentheses of functions.\n- [`function-url-data-uris`](function-url-data-uris/): Require or disallow data URIs for urls.\n- [`function-url-quotes`](function-url-quotes/): Specify single, double or no quotes for urls.\n- [`function-whitelist`](function-whitelist/): Specify a whitelist of allowed functions.\n- [`function-whitespace-after`](function-whitespace-after/): Require or disallow whitespace after functions.\n\n### Number\n\n- [`number-leading-zero`](number-leading-zero/): Require or disallow a leading zero for fractional numbers less than 1.\n- [`number-max-precision`](number-max-precision/): Limit the number of decimal places allowed in numbers.\n- [`number-no-trailing-zeros`](number-no-trailing-zeros/): Disallow trailing zeros in numbers.\n- [`number-zero-length-no-unit`](number-zero-length-no-unit/): Disallow units for zero lengths.\n\n### String\n\n- [`string-no-newline`](string-no-newline/): Disallow (unescaped) newlines in strings.\n- [`string-quotes`](string-quotes/): Specify single or double quotes around strings.\n\n### Time\n\n- [`time-no-imperceptible`](time-no-imperceptible/): Disallow `animation` and `transition` times under 100ms.\n\n### Unit\n\n- [`unit-blacklist`](unit-blacklist/): Specify a blacklist of disallowed units.\n- [`unit-no-unknown`](unit-no-unknown/): Disallow unknown units.\n- [`unit-whitelist`](unit-whitelist/): Specify a whitelist of allowed units.\n\n### Value\n\n- [`value-no-vendor-prefix`](value-no-vendor-prefix/): Disallow vendor prefixes for values.\n\n### Value list\n\n- [`value-list-comma-newline-after`](value-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of value lists.\n- [`value-list-comma-newline-before`](value-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of value lists.\n- [`value-list-comma-space-after`](value-list-comma-space-after/): Require a single space or disallow whitespace after the commas of value lists.\n- [`value-list-comma-space-before`](value-list-comma-space-before/): Require a single space or disallow whitespace before the commas of value lists.\n\n### Custom property\n\n- [`custom-property-no-outside-root`](custom-property-no-outside-root/): Disallow custom properties outside of `:root` rules.\n- [`custom-property-pattern`](custom-property-pattern/): Specify a pattern for custom properties.\n\n### Property\n\n- [`property-blacklist`](property-blacklist/): Specify a blacklist of disallowed properties.\n- [`property-no-vendor-prefix`](property-no-vendor-prefix/): Disallow vendor prefixes for properties.\n- [`property-unit-blacklist`](property-unit-blacklist/): Specify a blacklist of disallowed units for specific properties.\n- [`property-unit-whitelist`](property-unit-whitelist/): Specify a whitelist of allowed units for specific properties.\n- [`property-value-blacklist`](property-value-blacklist/): Specify a blacklist of disallowed values for specific properties.\n- [`property-value-whitelist`](property-value-whitelist/): Specify a whitelist of allowed values for specific properties.\n- [`property-whitelist`](property-whitelist/): Specify a whitelist of allowed properties.\n\n### Declaration\n\n- [`declaration-bang-space-after`](declaration-bang-space-after/): Require a single space or disallow whitespace after the bang of declarations.\n- [`declaration-bang-space-before`](declaration-bang-space-before/): Require a single space or disallow whitespace before the bang of declarations.\n- [`declaration-colon-newline-after`](declaration-colon-newline-after/): Require a newline or disallow whitespace after the colon of declarations.\n- [`declaration-colon-space-after`](declaration-colon-space-after/): Require a single space or disallow whitespace after the colon of declarations.\n- [`declaration-colon-space-before`](declaration-colon-space-before/): Require a single space or disallow whitespace before the colon of declarations.\n- [`declaration-no-important`](declaration-no-important/): Disallow `!important` within declarations.\n\n### Declaration block\n\n- [`declaration-block-no-duplicate-properties`](declaration-block-no-duplicate-properties/): Disallow duplicate properties within declaration blocks.\n- [`declaration-block-no-ignored-properties`](declaration-block-no-ignored-properties/): Disallow property values that are ignored due to another property value in the same rule.\n- [`declaration-block-no-shorthand-property-overrides`](declaration-block-no-shorthand-property-overrides/): Disallow shorthand properties that override related longhand properties within declaration blocks.\n- [`declaration-block-properties-order`](declaration-block-properties-order/): Specify the order of properties within declaration blocks.\n- [`declaration-block-semicolon-newline-after`](declaration-block-semicolon-newline-after/): Require a newline or disallow whitespace after the semicolons of declaration blocks.\n- [`declaration-block-semicolon-newline-before`](declaration-block-semicolon-newline-before/): Require a newline or disallow whitespace before the semicolons of declaration blocks.\n- [`declaration-block-semicolon-space-after`](declaration-block-semicolon-space-after/): Require a single space or disallow whitespace after the semicolons of declaration blocks.\n- [`declaration-block-semicolon-space-before`](declaration-block-semicolon-space-before/): Require a single space or disallow whitespace before the semicolons of declaration blocks.\n- [`declaration-block-single-line-max-declarations`](declaration-block-single-line-max-declarations/): Limit the number of declaration within single line declaration blocks.\n- [`declaration-block-trailing-semicolon`](declaration-block-trailing-semicolon/): Require or disallow a trailing semicolon within declaration blocks.\n\n### Block\n\n- [`block-closing-brace-newline-after`](block-closing-brace-newline-after/): Require a newline or disallow whitespace after the closing brace of blocks.\n- [`block-closing-brace-newline-before`](block-closing-brace-newline-before/): Require a newline or disallow whitespace before the closing brace of blocks.\n- [`block-closing-brace-space-after`](block-closing-brace-space-after/): Require a single space or disallow whitespace after the closing brace of blocks.\n- [`block-closing-brace-space-before`](block-closing-brace-space-before/): Require a single space or disallow whitespace before the closing brace of blocks.\n- [`block-no-empty`](block-no-empty/): Disallow empty blocks.\n- [`block-no-single-line`](block-no-single-line/): Disallow single-line blocks.\n- [`block-opening-brace-newline-after`](block-opening-brace-newline-after/): Require a newline after the opening brace of blocks.\n- [`block-opening-brace-newline-before`](block-opening-brace-newline-before/): Require a newline or disallow whitespace before the opening brace of blocks.\n- [`block-opening-brace-space-after`](block-opening-brace-space-after/): Require a single space or disallow whitespace after the opening brace of blocks.\n- [`block-opening-brace-space-before`](block-opening-brace-space-before/): Require a single space or disallow whitespace before the opening brace of blocks.\n\n### Selector\n\n- [`selector-class-pattern`](selector-class-pattern/): Specify a pattern for class selectors.\n- [`selector-combinator-space-after`](selector-combinator-space-after/): Require a single space or disallow whitespace after the combinators of selectors.\n- [`selector-combinator-space-before`](selector-combinator-space-before/): Require a single space or disallow whitespace before the combinators of selectors.\n- [`selector-id-pattern`](selector-id-pattern/): Specify a pattern for id selectors.\n- [`selector-max-specificity`](selector-max-specificity/): Limit the specificity of selectors.\n- [`selector-no-attribute`](selector-no-attribute/): Disallow attribute selectors.\n- [`selector-no-combinator`](selector-no-combinator/): Disallow combinators in selectors.\n- [`selector-no-id`](selector-no-id/): Disallow id selectors.\n- [`selector-no-type`](selector-no-type/): Disallow type selectors.\n- [`selector-no-universal`](selector-no-universal/): Disallow the universal selector.\n- [`selector-no-vendor-prefix`](selector-no-vendor-prefix/): Disallow vendor prefixes for selectors.\n- [`selector-pseudo-element-colon-notation`](selector-pseudo-element-colon-notation/): Specify single or double colon notation for applicable pseudo-elements.\n- [`selector-root-no-composition`](selector-root-no-composition/): Disallow the composition of `:root` in selectors.\n- [`selector-type-case`](selector-type-case/): Specify lowercase or uppercase for type selector.\n\n### Selector list\n\n- [`selector-list-comma-newline-after`](selector-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of selector lists.\n- [`selector-list-comma-newline-before`](selector-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of selector lists.\n- [`selector-list-comma-space-after`](selector-list-comma-space-after/): Require a single space or disallow whitespace after the commas of selector lists.\n- [`selector-list-comma-space-before`](selector-list-comma-space-before/): Require a single space or disallow whitespace before the commas of selector lists.\n\n### Root rule\n\n- [`root-no-standard-properties`](root-no-standard-properties/): Disallow standard properties inside `:root` rules.\n\n### Rule\n\n- [`rule-nested-empty-line-before`](rule-nested-empty-line-before/): Require or disallow an empty line before nested rules.\n- [`rule-non-nested-empty-line-before`](rule-non-nested-empty-line-before/): Require or disallow an empty line before non-nested rules.\n\n### Media feature\n\n- [`media-feature-colon-space-after`](media-feature-colon-space-after/): Require a single space or disallow whitespace after the colon in media features.\n- [`media-feature-colon-space-before`](media-feature-colon-space-before/): Require a single space or disallow whitespace before the colon in media features.\n- [`media-feature-name-no-vendor-prefix`](media-feature-name-no-vendor-prefix/): Disallow vendor prefixes for media feature names.\n- [`media-feature-no-missing-punctuation`](media-feature-no-missing-punctuation/): Disallow missing punctuation for non-boolean media features.\n- [`media-feature-range-operator-space-after`](media-feature-range-operator-space-after/): Require a single space or disallow whitespace after the range operator in media features.\n- [`media-feature-range-operator-space-before`](media-feature-range-operator-space-before/): Require a single space or disallow whitespace before the range operator in media features.\n\n### Custom media\n\n- [`custom-media-pattern`](custom-media-pattern/): Specify a pattern for custom media query names.\n\n### Media query\n\n- [`media-query-parentheses-space-inside`](media-query-parentheses-space-inside/): Require a single space or disallow whitespace on the inside of the parentheses within media queries.\n\n### Media query list\n\n- [`media-query-list-comma-newline-after`](media-query-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of media query lists.\n- [`media-query-list-comma-newline-before`](media-query-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of media query lists.\n- [`media-query-list-comma-space-after`](media-query-list-comma-space-after/): Require a single space or disallow whitespace after the commas of media query lists.\n- [`media-query-list-comma-space-before`](media-query-list-comma-space-before/): Require a single space or disallow whitespace before the commas of media query lists.\n\n### At rule\n\n- [`at-rule-empty-line-before`](at-rule-empty-line-before/): Require or disallow an empty line before at-rules.\n- [`at-rule-no-vendor-prefix`](at-rule-no-vendor-prefix/): Disallow vendor prefixes for at-rules.\n- [`at-rule-semicolon-newline-after`](at-rule-semicolon-newline-after/): Require a newline after the semicolon of at-rules.\n\n### Comment\n\n- [`comment-empty-line-before`](comment-empty-line-before/): Require or disallow an empty line before comments.\n- [`comment-whitespace-inside`](comment-whitespace-inside/): Require or disallow whitespace on the inside of comment markers.\n\n### General / Sheet\n\n- [`indentation`](indentation/): Specify indentation.\n- [`max-empty-lines`](max-empty-lines/): Limit the number of adjacent empty lines.\n- [`max-line-length`](max-line-length/): Limit the length of a line.\n- [`max-nesting-depth`](max-nesting-depth/): Limit the depth of nesting.\n- [`no-browser-hacks`](no-browser-hacks/): Disallow browser hacks that are irrelevant to the browsers you are targeting.\n- [`no-descending-specificity`](no-descending-specificity/): Disallow selectors of lower specificity from coming after overriding selectors of higher specificity.\n- [`no-duplicate-selectors`](no-duplicate-selectors/): Disallow duplicate selectors.\n- [`no-eol-whitespace`](no-eol-whitespace/): Disallow end-of-line whitespace.\n- [`no-indistinguishable-colors`](no-indistinguishable-colors/): Disallow colors that are suspiciously close to being identical.\n- [`no-invalid-double-slash-comments`](no-invalid-double-slash-comments/): Disallow double-slash comments (`//...`) which are not supported by CSS.\n- [`no-missing-eof-newline`](no-missing-eof-newline/): Disallow missing end-of-file newline.\n- [`no-unknown-animations`](no-unknown-animations/): Disallow animation names that do not correspond to a `@keyframes` declaration.\n- [`no-unsupported-browser-features`](no-unsupported-browser-features/): Disallow features that are unsupported by the browsers that you are targeting.\n- [`stylelint-disable-reason`](stylelint-disable-reason/): Require a reason comment before or after `stylelint-disable` comments.\n\n## About rule names\n\n- Made of lowercase words separated by hyphens.\n- Split into two parts:\n\n  - The first describes what [*thing*](http://apps.workflower.fi/vocabs/css/en) the rule applies to.\n  - The second describes what the rule is checking.\n\n```shell\n\"number-leading-zero\"\n    ↑       ↑\nthe thing   what the rule is checking\n```\n\n- Except when the rule applies to the whole stylesheet:\n\n```shell\n\"no-eol-whitespace\"\n\"indentation\"\n     ↑\n  what the rules are checking\n```\n\n### No rules\n\nMost rules allow you to choose whether you want to require *or- disallow something.\n\nFor example, whether numbers *must* or *must not* have a leading zero:\n\n- `number-leading-zero`: `string - \"always\"|\"never\"`\n\n  - `\"always\"` - there *must always* be a leading zero.\n  - `\"never\"` - there *must never* be a leading zero.\n\n```css\n    a { line-height: 0.5; }\n/**                  ↑\n *   This leading zero */\n```\n\nHowever, some rules *just disallow* something. `*-no-*` is used to identify these rules.\n\nFor example, whether empty blocks should be disallowed:\n\n- `block-no-empty` - blocks *must not* be empty.\n\n```css\n    a { }\n/**    ↑\n *  Blocks like this */\n```\n\nNotice how, for a rule like this, it does not make sense to have an option to enforce the opposite i.e. that every block *must* be empty.\n\n### Max rules\n\n`*-max-*` is used when a rule is *setting a limit* to something.\n\nFor example, specifying the maximum number of digits after the \".\" in a number:\n\n- `number-max-precision`: `int`\n\n```css\n    a { font-size: 1.333em; }\n/**                 ↑\n * The maximum number of digits after this \".\" */\n```\n\n### Whitespace rules\n\nWhitespace rules allow you to specify whether an empty line, a single space, a newline or no space must be used in some specific part of the stylesheet.\n\nThe whitespace rules combine two sets of keywords:\n\n1. `before`, `after` and `inside` are used to specify where the whitespace (if any) is expected.\n2. `empty-line`, `space` and `newline` are used to specify whether a single empty line, a single space, a single newline or no space is expected there.\n\nFor example, specifying if a single empty line or no space must come before all the comments in a stylesheet:\n\n- `comment-empty-line-before`: `string` - `\"always\"|\"never\"`\n\n```css\n    a {}\n                  ←\n    /* comment */ ↑\n                  ↑\n/**               ↑\n *        This empty line  */\n```\n\nAdditionally, some whitespace rule make use of another set of keywords:\n\n1. `comma`, `colon`, `semicolon`, `opening-brace`, `closing-brace`, `opening-parenthesis`, `closing-parenthesis`, `operator` or `range-operator` are used if a specific piece of punctuation in the *thing* is being targetted.\n\nFor example, specifying if a single space or no space must come after a comma in a function:\n\n- `function-comma-space-after`: `string` - `\"always\"|\"never\"`\n\n```css\n    a { transform: translate(1, 1) }\n/**                           ↑\n *  The space after this commas */\n```\n\nThe plural of the punctuation is used for `inside` rules. For example, specifying if a single space or no space must be inside the parentheses of a function:\n\n- `function-parentheses-space-inside`: `string` - `\"always\"|\"never\"`\n\n```css\n    a { transform: translate( 1, 1 ); }\n/**                         ↑      ↑\n * The space inside these two parentheses */\n```\n","raw":"---\ntitle: Rules\n---\n\n# Rules\n\nThere are over a hundred rules built into stylelint. They all focus on *standard css* and aim to be valuable to the majority of users. In addition to these rules there are [plugins](/user-guide/plugins/), which are rules built by the community that support methodologies, toolsets, *non-standard* CSS features, or very specific use cases.\n\nEvery rule and plugin is standalone and turned off by default. None of the rules or plugins have default values for their options.\n\n## List of rules\n\nHere are all the rules within stylelint, grouped by the [*thing*](http://apps.workflower.fi/vocabs/css/en) they apply to.\n\nDon't forget to look at the list of [plugins](/user-guide/plugins/) for more ways to lint.\n\n### Color\n\n- [`color-hex-case`](color-hex-case/): Specify lowercase or uppercase for hex colors.\n- [`color-hex-length`](color-hex-length/): Specify short or long notation for hex colors.\n- [`color-named`](color-named/): Require (where possible) or disallow named colors.\n- [`color-no-hex`](color-no-hex/): Disallow hex colors.\n- [`color-no-invalid-hex`](color-no-invalid-hex/): Disallow invalid hex colors.\n\n### Font family\n\n- [`font-family-name-quotes`](font-family-name-quotes/): Specify whether or not quotation marks should be used around font family names, and whether single or double.\n\n### Font weight\n\n- [`font-weight-notation`](font-weight-notation/): Require numeric or named (where possible) `font-weight` values.\n\n### Function\n\n- [`function-blacklist`](function-blacklist/): Specify a blacklist of disallowed functions.\n- [`function-calc-no-unspaced-operator`](function-calc-no-unspaced-operator/): Disallow an unspaced operator within `calc` functions.\n- [`function-comma-newline-after`](function-comma-newline-after/): Require a newline or disallow whitespace after the commas of functions.\n- [`function-comma-newline-before`](function-comma-newline-before/): Require a newline or disallow whitespace before the commas of functions.\n- [`function-comma-space-after`](function-comma-space-after/): Require a single space or disallow whitespace after the commas of functions.\n- [`function-comma-space-before`](function-comma-space-before/): Require a single space or disallow whitespace before the commas of functions.\n- [`function-linear-gradient-no-nonstandard-direction`](function-linear-gradient-no-nonstandard-direction/): Disallow direction values in `linear-gradient()` calls that are not valid according to the [standard syntax](https://developer.mozilla.org/en-US/Web/CSS/linear-gradient#Syntax).\n- [`function-max-empty-lines`](function-max-empty-lines/): Limit the number of adjacent empty lines within functions.\n- [`function-parentheses-newline-inside`](function-parentheses-newline-inside/): Require a newline or disallow whitespace on the inside of the parentheses of functions.\n- [`function-parentheses-space-inside`](function-parentheses-space-inside/): Require a single space or disallow whitespace on the inside of the parentheses of functions.\n- [`function-url-data-uris`](function-url-data-uris/): Require or disallow data URIs for urls.\n- [`function-url-quotes`](function-url-quotes/): Specify single, double or no quotes for urls.\n- [`function-whitelist`](function-whitelist/): Specify a whitelist of allowed functions.\n- [`function-whitespace-after`](function-whitespace-after/): Require or disallow whitespace after functions.\n\n### Number\n\n- [`number-leading-zero`](number-leading-zero/): Require or disallow a leading zero for fractional numbers less than 1.\n- [`number-max-precision`](number-max-precision/): Limit the number of decimal places allowed in numbers.\n- [`number-no-trailing-zeros`](number-no-trailing-zeros/): Disallow trailing zeros in numbers.\n- [`number-zero-length-no-unit`](number-zero-length-no-unit/): Disallow units for zero lengths.\n\n### String\n\n- [`string-no-newline`](string-no-newline/): Disallow (unescaped) newlines in strings.\n- [`string-quotes`](string-quotes/): Specify single or double quotes around strings.\n\n### Time\n\n- [`time-no-imperceptible`](time-no-imperceptible/): Disallow `animation` and `transition` times under 100ms.\n\n### Unit\n\n- [`unit-blacklist`](unit-blacklist/): Specify a blacklist of disallowed units.\n- [`unit-no-unknown`](unit-no-unknown/): Disallow unknown units.\n- [`unit-whitelist`](unit-whitelist/): Specify a whitelist of allowed units.\n\n### Value\n\n- [`value-no-vendor-prefix`](value-no-vendor-prefix/): Disallow vendor prefixes for values.\n\n### Value list\n\n- [`value-list-comma-newline-after`](value-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of value lists.\n- [`value-list-comma-newline-before`](value-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of value lists.\n- [`value-list-comma-space-after`](value-list-comma-space-after/): Require a single space or disallow whitespace after the commas of value lists.\n- [`value-list-comma-space-before`](value-list-comma-space-before/): Require a single space or disallow whitespace before the commas of value lists.\n\n### Custom property\n\n- [`custom-property-no-outside-root`](custom-property-no-outside-root/): Disallow custom properties outside of `:root` rules.\n- [`custom-property-pattern`](custom-property-pattern/): Specify a pattern for custom properties.\n\n### Property\n\n- [`property-blacklist`](property-blacklist/): Specify a blacklist of disallowed properties.\n- [`property-no-vendor-prefix`](property-no-vendor-prefix/): Disallow vendor prefixes for properties.\n- [`property-unit-blacklist`](property-unit-blacklist/): Specify a blacklist of disallowed units for specific properties.\n- [`property-unit-whitelist`](property-unit-whitelist/): Specify a whitelist of allowed units for specific properties.\n- [`property-value-blacklist`](property-value-blacklist/): Specify a blacklist of disallowed values for specific properties.\n- [`property-value-whitelist`](property-value-whitelist/): Specify a whitelist of allowed values for specific properties.\n- [`property-whitelist`](property-whitelist/): Specify a whitelist of allowed properties.\n\n### Declaration\n\n- [`declaration-bang-space-after`](declaration-bang-space-after/): Require a single space or disallow whitespace after the bang of declarations.\n- [`declaration-bang-space-before`](declaration-bang-space-before/): Require a single space or disallow whitespace before the bang of declarations.\n- [`declaration-colon-newline-after`](declaration-colon-newline-after/): Require a newline or disallow whitespace after the colon of declarations.\n- [`declaration-colon-space-after`](declaration-colon-space-after/): Require a single space or disallow whitespace after the colon of declarations.\n- [`declaration-colon-space-before`](declaration-colon-space-before/): Require a single space or disallow whitespace before the colon of declarations.\n- [`declaration-no-important`](declaration-no-important/): Disallow `!important` within declarations.\n\n### Declaration block\n\n- [`declaration-block-no-duplicate-properties`](declaration-block-no-duplicate-properties/): Disallow duplicate properties within declaration blocks.\n- [`declaration-block-no-ignored-properties`](declaration-block-no-ignored-properties/): Disallow property values that are ignored due to another property value in the same rule.\n- [`declaration-block-no-shorthand-property-overrides`](declaration-block-no-shorthand-property-overrides/): Disallow shorthand properties that override related longhand properties within declaration blocks.\n- [`declaration-block-properties-order`](declaration-block-properties-order/): Specify the order of properties within declaration blocks.\n- [`declaration-block-semicolon-newline-after`](declaration-block-semicolon-newline-after/): Require a newline or disallow whitespace after the semicolons of declaration blocks.\n- [`declaration-block-semicolon-newline-before`](declaration-block-semicolon-newline-before/): Require a newline or disallow whitespace before the semicolons of declaration blocks.\n- [`declaration-block-semicolon-space-after`](declaration-block-semicolon-space-after/): Require a single space or disallow whitespace after the semicolons of declaration blocks.\n- [`declaration-block-semicolon-space-before`](declaration-block-semicolon-space-before/): Require a single space or disallow whitespace before the semicolons of declaration blocks.\n- [`declaration-block-single-line-max-declarations`](declaration-block-single-line-max-declarations/): Limit the number of declaration within single line declaration blocks.\n- [`declaration-block-trailing-semicolon`](declaration-block-trailing-semicolon/): Require or disallow a trailing semicolon within declaration blocks.\n\n### Block\n\n- [`block-closing-brace-newline-after`](block-closing-brace-newline-after/): Require a newline or disallow whitespace after the closing brace of blocks.\n- [`block-closing-brace-newline-before`](block-closing-brace-newline-before/): Require a newline or disallow whitespace before the closing brace of blocks.\n- [`block-closing-brace-space-after`](block-closing-brace-space-after/): Require a single space or disallow whitespace after the closing brace of blocks.\n- [`block-closing-brace-space-before`](block-closing-brace-space-before/): Require a single space or disallow whitespace before the closing brace of blocks.\n- [`block-no-empty`](block-no-empty/): Disallow empty blocks.\n- [`block-no-single-line`](block-no-single-line/): Disallow single-line blocks.\n- [`block-opening-brace-newline-after`](block-opening-brace-newline-after/): Require a newline after the opening brace of blocks.\n- [`block-opening-brace-newline-before`](block-opening-brace-newline-before/): Require a newline or disallow whitespace before the opening brace of blocks.\n- [`block-opening-brace-space-after`](block-opening-brace-space-after/): Require a single space or disallow whitespace after the opening brace of blocks.\n- [`block-opening-brace-space-before`](block-opening-brace-space-before/): Require a single space or disallow whitespace before the opening brace of blocks.\n\n### Selector\n\n- [`selector-class-pattern`](selector-class-pattern/): Specify a pattern for class selectors.\n- [`selector-combinator-space-after`](selector-combinator-space-after/): Require a single space or disallow whitespace after the combinators of selectors.\n- [`selector-combinator-space-before`](selector-combinator-space-before/): Require a single space or disallow whitespace before the combinators of selectors.\n- [`selector-id-pattern`](selector-id-pattern/): Specify a pattern for id selectors.\n- [`selector-max-specificity`](selector-max-specificity/): Limit the specificity of selectors.\n- [`selector-no-attribute`](selector-no-attribute/): Disallow attribute selectors.\n- [`selector-no-combinator`](selector-no-combinator/): Disallow combinators in selectors.\n- [`selector-no-id`](selector-no-id/): Disallow id selectors.\n- [`selector-no-type`](selector-no-type/): Disallow type selectors.\n- [`selector-no-universal`](selector-no-universal/): Disallow the universal selector.\n- [`selector-no-vendor-prefix`](selector-no-vendor-prefix/): Disallow vendor prefixes for selectors.\n- [`selector-pseudo-element-colon-notation`](selector-pseudo-element-colon-notation/): Specify single or double colon notation for applicable pseudo-elements.\n- [`selector-root-no-composition`](selector-root-no-composition/): Disallow the composition of `:root` in selectors.\n- [`selector-type-case`](selector-type-case/): Specify lowercase or uppercase for type selector.\n\n### Selector list\n\n- [`selector-list-comma-newline-after`](selector-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of selector lists.\n- [`selector-list-comma-newline-before`](selector-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of selector lists.\n- [`selector-list-comma-space-after`](selector-list-comma-space-after/): Require a single space or disallow whitespace after the commas of selector lists.\n- [`selector-list-comma-space-before`](selector-list-comma-space-before/): Require a single space or disallow whitespace before the commas of selector lists.\n\n### Root rule\n\n- [`root-no-standard-properties`](root-no-standard-properties/): Disallow standard properties inside `:root` rules.\n\n### Rule\n\n- [`rule-nested-empty-line-before`](rule-nested-empty-line-before/): Require or disallow an empty line before nested rules.\n- [`rule-non-nested-empty-line-before`](rule-non-nested-empty-line-before/): Require or disallow an empty line before non-nested rules.\n\n### Media feature\n\n- [`media-feature-colon-space-after`](media-feature-colon-space-after/): Require a single space or disallow whitespace after the colon in media features.\n- [`media-feature-colon-space-before`](media-feature-colon-space-before/): Require a single space or disallow whitespace before the colon in media features.\n- [`media-feature-name-no-vendor-prefix`](media-feature-name-no-vendor-prefix/): Disallow vendor prefixes for media feature names.\n- [`media-feature-no-missing-punctuation`](media-feature-no-missing-punctuation/): Disallow missing punctuation for non-boolean media features.\n- [`media-feature-range-operator-space-after`](media-feature-range-operator-space-after/): Require a single space or disallow whitespace after the range operator in media features.\n- [`media-feature-range-operator-space-before`](media-feature-range-operator-space-before/): Require a single space or disallow whitespace before the range operator in media features.\n\n### Custom media\n\n- [`custom-media-pattern`](custom-media-pattern/): Specify a pattern for custom media query names.\n\n### Media query\n\n- [`media-query-parentheses-space-inside`](media-query-parentheses-space-inside/): Require a single space or disallow whitespace on the inside of the parentheses within media queries.\n\n### Media query list\n\n- [`media-query-list-comma-newline-after`](media-query-list-comma-newline-after/): Require a newline or disallow whitespace after the commas of media query lists.\n- [`media-query-list-comma-newline-before`](media-query-list-comma-newline-before/): Require a newline or disallow whitespace before the commas of media query lists.\n- [`media-query-list-comma-space-after`](media-query-list-comma-space-after/): Require a single space or disallow whitespace after the commas of media query lists.\n- [`media-query-list-comma-space-before`](media-query-list-comma-space-before/): Require a single space or disallow whitespace before the commas of media query lists.\n\n### At rule\n\n- [`at-rule-empty-line-before`](at-rule-empty-line-before/): Require or disallow an empty line before at-rules.\n- [`at-rule-no-vendor-prefix`](at-rule-no-vendor-prefix/): Disallow vendor prefixes for at-rules.\n- [`at-rule-semicolon-newline-after`](at-rule-semicolon-newline-after/): Require a newline after the semicolon of at-rules.\n\n### Comment\n\n- [`comment-empty-line-before`](comment-empty-line-before/): Require or disallow an empty line before comments.\n- [`comment-whitespace-inside`](comment-whitespace-inside/): Require or disallow whitespace on the inside of comment markers.\n\n### General / Sheet\n\n- [`indentation`](indentation/): Specify indentation.\n- [`max-empty-lines`](max-empty-lines/): Limit the number of adjacent empty lines.\n- [`max-line-length`](max-line-length/): Limit the length of a line.\n- [`max-nesting-depth`](max-nesting-depth/): Limit the depth of nesting.\n- [`no-browser-hacks`](no-browser-hacks/): Disallow browser hacks that are irrelevant to the browsers you are targeting.\n- [`no-descending-specificity`](no-descending-specificity/): Disallow selectors of lower specificity from coming after overriding selectors of higher specificity.\n- [`no-duplicate-selectors`](no-duplicate-selectors/): Disallow duplicate selectors.\n- [`no-eol-whitespace`](no-eol-whitespace/): Disallow end-of-line whitespace.\n- [`no-indistinguishable-colors`](no-indistinguishable-colors/): Disallow colors that are suspiciously close to being identical.\n- [`no-invalid-double-slash-comments`](no-invalid-double-slash-comments/): Disallow double-slash comments (`//...`) which are not supported by CSS.\n- [`no-missing-eof-newline`](no-missing-eof-newline/): Disallow missing end-of-file newline.\n- [`no-unknown-animations`](no-unknown-animations/): Disallow animation names that do not correspond to a `@keyframes` declaration.\n- [`no-unsupported-browser-features`](no-unsupported-browser-features/): Disallow features that are unsupported by the browsers that you are targeting.\n- [`stylelint-disable-reason`](stylelint-disable-reason/): Require a reason comment before or after `stylelint-disable` comments.\n\n## About rule names\n\n- Made of lowercase words separated by hyphens.\n- Split into two parts:\n\n  - The first describes what [*thing*](http://apps.workflower.fi/vocabs/css/en) the rule applies to.\n  - The second describes what the rule is checking.\n\n```shell\n\"number-leading-zero\"\n    ↑       ↑\nthe thing   what the rule is checking\n```\n\n- Except when the rule applies to the whole stylesheet:\n\n```shell\n\"no-eol-whitespace\"\n\"indentation\"\n     ↑\n  what the rules are checking\n```\n\n### No rules\n\nMost rules allow you to choose whether you want to require *or- disallow something.\n\nFor example, whether numbers *must* or *must not* have a leading zero:\n\n- `number-leading-zero`: `string - \"always\"|\"never\"`\n\n  - `\"always\"` - there *must always* be a leading zero.\n  - `\"never\"` - there *must never* be a leading zero.\n\n```css\n    a { line-height: 0.5; }\n/**                  ↑\n *   This leading zero */\n```\n\nHowever, some rules *just disallow* something. `*-no-*` is used to identify these rules.\n\nFor example, whether empty blocks should be disallowed:\n\n- `block-no-empty` - blocks *must not* be empty.\n\n```css\n    a { }\n/**    ↑\n *  Blocks like this */\n```\n\nNotice how, for a rule like this, it does not make sense to have an option to enforce the opposite i.e. that every block *must* be empty.\n\n### Max rules\n\n`*-max-*` is used when a rule is *setting a limit* to something.\n\nFor example, specifying the maximum number of digits after the \".\" in a number:\n\n- `number-max-precision`: `int`\n\n```css\n    a { font-size: 1.333em; }\n/**                 ↑\n * The maximum number of digits after this \".\" */\n```\n\n### Whitespace rules\n\nWhitespace rules allow you to specify whether an empty line, a single space, a newline or no space must be used in some specific part of the stylesheet.\n\nThe whitespace rules combine two sets of keywords:\n\n1. `before`, `after` and `inside` are used to specify where the whitespace (if any) is expected.\n2. `empty-line`, `space` and `newline` are used to specify whether a single empty line, a single space, a single newline or no space is expected there.\n\nFor example, specifying if a single empty line or no space must come before all the comments in a stylesheet:\n\n- `comment-empty-line-before`: `string` - `\"always\"|\"never\"`\n\n```css\n    a {}\n                  ←\n    /* comment */ ↑\n                  ↑\n/**               ↑\n *        This empty line  */\n```\n\nAdditionally, some whitespace rule make use of another set of keywords:\n\n1. `comma`, `colon`, `semicolon`, `opening-brace`, `closing-brace`, `opening-parenthesis`, `closing-parenthesis`, `operator` or `range-operator` are used if a specific piece of punctuation in the *thing* is being targetted.\n\nFor example, specifying if a single space or no space must come after a comma in a function:\n\n- `function-comma-space-after`: `string` - `\"always\"|\"never\"`\n\n```css\n    a { transform: translate(1, 1) }\n/**                           ↑\n *  The space after this commas */\n```\n\nThe plural of the punctuation is used for `inside` rules. For example, specifying if a single space or no space must be inside the parentheses of a function:\n\n- `function-parentheses-space-inside`: `string` - `\"always\"|\"never\"`\n\n```css\n    a { transform: translate( 1, 1 ); }\n/**                         ↑      ↑\n * The space inside these two parentheses */\n```\n","__filename":"user-guide/rules.md","__url":"/user-guide/rules/","__resourceUrl":"/user-guide/rules/index.html","__dataUrl":"/user-guide/rules/index.html.7a75ce97e3ce92d1518e30f24a9de4e4.json"}