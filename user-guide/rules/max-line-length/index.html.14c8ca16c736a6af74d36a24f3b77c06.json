{"head":{"layout":"RulePage","next":"/user-guide/rules/no-eol-whitespace/","prev":"/user-guide/rules/max-empty-lines/","description":"max-line-length Limit the length of a line. Lines that exceed the maximum length but contain no whitespace (other than at the beginning of…","title":""},"body":"<h1 id=\"max-line-length\"><a href=\"#max-line-length\" class=\"phenomic-HeadingAnchor\">#</a>max-line-length</h1>\n<p>Limit the length of a line.</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red }\n<span class=\"hljs-comment\">/**            ↑\n *       The end */</span></code></pre>\n<p>Lines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.</p>\n<p>When evaluating the line length, the arguments of any <code>url(...)</code> functions are excluded from the calculation, because typically you have no control over the length of these arguments. This means that long <code>url()</code> functions should not contribute to violations.</p>\n<ul>\n<li><a href=\"#options\">Options</a></li>\n<li>\n<p><a href=\"#optional-secondary-options\">Optional secondary options</a></p>\n<ul>\n<li><a href=\"#ignore-non-comments\">ignore: [\"non-comments\"]</a></li>\n<li><a href=\"#ignore-comments\">ignore: [\"comments\"]</a></li>\n<li><a href=\"#ignorepattern-regex\">ignorePattern: \"/regex/\"</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>int</code>: Maximum number of characters allowed.</p>\n<p>For example, with <code>20</code>:</p>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>; <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(red, blue);\n}</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(a-url-that-is-over-20-characters-long);\n}</code></pre>\n<h2 id=\"optional-secondary-options\"><a href=\"#optional-secondary-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional secondary options</h2>\n<h3 id=\"ignore-non-comments\"><a href=\"#ignore-non-comments\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"non-comments\"]</code></h3>\n<p>Only enforce the line-length limit for lines within comments.</p>\n<p>This does not apply to comments that are stuck in between other stuff, only to lines that begin at the beginning or in the middle of a comment.</p>\n<p>For example, with a maximum length of <code>30</code>.</p>\n<p>The following patterns are considered violations:</p>\n<p>Each have only one violation.</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-comment\">/* This line is too long for my rule */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-comment\">/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }</code></pre>\n<h3 id=\"ignore-comments\"><a href=\"#ignore-comments\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"comments\"]</code></h3>\n<p>Only enforce the line-length limit for lines that are not comments.</p>\n<p>This also applies to comments that are between code on the same line.</p>\n<p>For example, with a maximum length of <code>30</code>.</p>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* comment that is too long */</span></code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-comment\">/* this comment is too long for the max length */</span> }</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-comment\">/* comment that is too long for my rule*/</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; }</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-comment\">/*\n * comment that is too long the max length\n * comment that is too long the max length\n *\n */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; }</code></pre>\n<h3 id=\"ignorepattern-regex\"><a href=\"#ignorepattern-regex\" class=\"phenomic-HeadingAnchor\">#</a><code>ignorePattern: \"/regex/\"</code></h3>\n<p>Ignore any line that matches the given regex pattern, regardless of whether it is comment or not. The regex may be passed as a string (for JSON configuration) by enclosing in forward-slashes, or an ordinary JavaScript RegExp may be used.</p>\n<p>Given:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-string\">\"/^@import\\\\s+/\"</span></code></pre>\n<p>The following pattern is <em>not</em> considered a violation:</p>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"../../../../another/css/or/scss/file/or/something.css\"</span>;</code></pre>\n<p>Given the following, with a maximum length of <code>20</code>.</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"/https?:\\/\\/[0-9,a-z]*.*/\"</span>]</code></pre>\n<p>The following pattern is <em>not</em> considered a violation:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-comment\">/* ignore urls https://www.example.com */</span></code></pre>\n","__filename":"user-guide/rules/max-line-length.md","__url":"/user-guide/rules/max-line-length/","__resourceUrl":"/user-guide/rules/max-line-length/index.html","__dataUrl":"/user-guide/rules/max-line-length/index.html.14c8ca16c736a6af74d36a24f3b77c06.json"}