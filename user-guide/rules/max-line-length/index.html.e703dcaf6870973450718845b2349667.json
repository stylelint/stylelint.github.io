{"head":{"title":"max-line-length","description":"max-line-length\n\nLimit the length of a line.\n\nLines that exceed the maximum length but contain no whitespace (other than at the beginning of…"},"body":"<h1 id=\"max-line-length\"><a class=\"markdownIt-Anchor\" href=\"#max-line-length\">#</a> max-line-length</h1>\n<p>Limit the length of a line.</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red }\n<span class=\"hljs-comment\">/**            ↑\n *       The end */</span>\n</code></pre>\n<p>Lines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.</p>\n<p>When evaluating the line length, <code>url(...)</code> functions are collapsed into just <code>url()</code>, because typically you have no control over the length of its argument. This means that long <code>url()</code> functions should not contribute to warnings.</p>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p><code>int</code>: Maximum number of characters allowed.</p>\n<p>For example, with <code>20</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>; <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(a-url-that-is-over-20-characters-long);\n}\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(a-url-that-is-over-20-characters-long);\n}\n</code></pre>\n<h2 id=\"optional-options\"><a class=\"markdownIt-Anchor\" href=\"#optional-options\">#</a> Optional options</h2>\n<h3 id=\"ignore-non-comments\"><a class=\"markdownIt-Anchor\" href=\"#ignore-non-comments\">#</a> <code>ignore: [&quot;non-comments&quot;]</code></h3>\n<p>Only enforce the line-length limit for lines within comments.</p>\n<p>This does not apply to comments that are stuck in between other stuff, only to lines that begin at the beginning or in the middle of a comment.</p>\n<p>For example, with a maximum length of <code>30</code>, the following each have only one warning:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-comment\">/* This line is too long for my rule */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-comment\">/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }\n</code></pre>\n","rawBody":"\n# max-line-length\n\nLimit the length of a line.\n\n```css\na { color: red }\n/**            ↑\n *       The end */\n```\n\nLines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.\n\nWhen evaluating the line length, `url(...)` functions are collapsed into just `url()`, because typically you have no control over the length of its argument. This means that long `url()` functions should not contribute to warnings.\n\n## Options\n\n`int`: Maximum number of characters allowed.\n\nFor example, with `20`:\n\nThe following patterns are considered warnings:\n\n```css\na { color: 0; top: 0; }\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: 0;\n  top: 0;\n}\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\n## Optional options\n\n### `ignore: [\"non-comments\"]`\n\nOnly enforce the line-length limit for lines within comments.\n\nThis does not apply to comments that are stuck in between other stuff, only to lines that begin at the beginning or in the middle of a comment.\n\nFor example, with a maximum length of `30`, the following each have only one warning:\n\n```css\n/* This line is too long for my rule */\na { color: pink; background: orange; }\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n\n```css\na { color: pink; background: orange; }\n/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n","raw":"---\ntitle: max-line-length\n---\n\n# max-line-length\n\nLimit the length of a line.\n\n```css\na { color: red }\n/**            ↑\n *       The end */\n```\n\nLines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.\n\nWhen evaluating the line length, `url(...)` functions are collapsed into just `url()`, because typically you have no control over the length of its argument. This means that long `url()` functions should not contribute to warnings.\n\n## Options\n\n`int`: Maximum number of characters allowed.\n\nFor example, with `20`:\n\nThe following patterns are considered warnings:\n\n```css\na { color: 0; top: 0; }\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: 0;\n  top: 0;\n}\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\n## Optional options\n\n### `ignore: [\"non-comments\"]`\n\nOnly enforce the line-length limit for lines within comments.\n\nThis does not apply to comments that are stuck in between other stuff, only to lines that begin at the beginning or in the middle of a comment.\n\nFor example, with a maximum length of `30`, the following each have only one warning:\n\n```css\n/* This line is too long for my rule */\na { color: pink; background: orange; }\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n\n```css\na { color: pink; background: orange; }\n/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n","__filename":"user-guide/rules/max-line-length.md","__url":"/user-guide/rules/max-line-length/","__resourceUrl":"/user-guide/rules/max-line-length/index.html","__dataUrl":"/user-guide/rules/max-line-length/index.html.e703dcaf6870973450718845b2349667.json"}