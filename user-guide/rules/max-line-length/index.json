{"head":{"title":"max-line-length"},"body":"<h1 id=\"max-line-length\"><a class=\"markdownIt-Anchor\" href=\"#max-line-length\">#</a> max-line-length</h1>\n<p>Limit the length of a line.</p>\n<pre><code class=\"language-css\">    <span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: red }\n<span class=\"hljs-comment\">/**                ↑\n *           The end */</span>\n</code></pre>\n<p>Lines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.</p>\n<p>When evaluating the line length, <code>url(...)</code> functions are collapsed into just <code>url()</code>,\nbecause typically you have no control over the length of its argument.\nThis means that long <code>url()</code> functions should not contribute to warnings.</p>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p><code>int</code>: Maximum number of characters allowed.</p>\n<p>For example, with <code>20</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>; <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(a-url-that-is-over-<span class=\"hljs-number\">20</span>-characters-long);\n}\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">url</span>(a-url-that-is-over-<span class=\"hljs-number\">20</span>-characters-long);\n}\n\n## <span class=\"hljs-selector-tag\">Optional</span> <span class=\"hljs-selector-tag\">options</span>\n\n### `<span class=\"hljs-selector-tag\">ignore</span>: <span class=\"hljs-selector-attr\">[\"non-comments\"]</span>`\n\n<span class=\"hljs-selector-tag\">Only</span> <span class=\"hljs-selector-tag\">enforce</span> <span class=\"hljs-selector-tag\">the</span> <span class=\"hljs-selector-tag\">line-length</span> <span class=\"hljs-selector-tag\">limit</span> <span class=\"hljs-selector-tag\">for</span> <span class=\"hljs-selector-tag\">lines</span> <span class=\"hljs-selector-tag\">within</span> <span class=\"hljs-selector-tag\">comments</span>.\n\n<span class=\"hljs-selector-tag\">This</span> <span class=\"hljs-selector-tag\">does</span> <span class=\"hljs-selector-tag\">not</span> <span class=\"hljs-selector-tag\">apply</span> <span class=\"hljs-selector-tag\">to</span> <span class=\"hljs-selector-tag\">comments</span> <span class=\"hljs-selector-tag\">that</span> <span class=\"hljs-selector-tag\">are</span> <span class=\"hljs-selector-tag\">stuck</span> <span class=\"hljs-selector-tag\">in</span> <span class=\"hljs-selector-tag\">between</span> <span class=\"hljs-selector-tag\">other</span> <span class=\"hljs-selector-tag\">stuff</span>,\n<span class=\"hljs-selector-tag\">only</span> <span class=\"hljs-selector-tag\">to</span> <span class=\"hljs-selector-tag\">lines</span> <span class=\"hljs-selector-tag\">that</span> <span class=\"hljs-selector-tag\">begin</span> <span class=\"hljs-selector-tag\">at</span> <span class=\"hljs-selector-tag\">the</span> <span class=\"hljs-selector-tag\">beginning</span> <span class=\"hljs-selector-tag\">or</span> <span class=\"hljs-selector-tag\">in</span> <span class=\"hljs-selector-tag\">the</span> <span class=\"hljs-selector-tag\">middle</span> <span class=\"hljs-selector-tag\">of</span> <span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-tag\">comment</span>.\n\n<span class=\"hljs-selector-tag\">For</span> <span class=\"hljs-selector-tag\">example</span>, <span class=\"hljs-selector-tag\">with</span> <span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-tag\">maximum</span> <span class=\"hljs-selector-tag\">length</span> <span class=\"hljs-selector-tag\">of</span> `30`, <span class=\"hljs-selector-tag\">the</span> <span class=\"hljs-selector-tag\">following</span> <span class=\"hljs-selector-tag\">each</span> <span class=\"hljs-selector-tag\">have</span> <span class=\"hljs-selector-tag\">only</span> <span class=\"hljs-selector-tag\">one</span> <span class=\"hljs-selector-tag\">warning</span>:\n\n```<span class=\"hljs-selector-tag\">css</span>\n<span class=\"hljs-comment\">/* This line is too long for my rule */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-attribute\">background</span>: orange; }\n<span class=\"hljs-comment\">/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */</span>\n<span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">color</span>: pink; <span class=\"hljs-comment\">/* this comment is also long but not on its own line */</span> }\n</code></pre>\n","rawBody":"\n# max-line-length\n\nLimit the length of a line.\n\n```css\n    a { color: red }\n/**                ↑\n *           The end */\n```\n\nLines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.\n\nWhen evaluating the line length, `url(...)` functions are collapsed into just `url()`,\nbecause typically you have no control over the length of its argument.\nThis means that long `url()` functions should not contribute to warnings.\n\n## Options\n\n`int`: Maximum number of characters allowed.\n\nFor example, with `20`:\n\nThe following patterns are considered warnings:\n\n```css\na { color: 0; top: 0; }\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: 0;\n  top: 0;\n}\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n\n## Optional options\n\n### `ignore: [\"non-comments\"]`\n\nOnly enforce the line-length limit for lines within comments.\n\nThis does not apply to comments that are stuck in between other stuff,\nonly to lines that begin at the beginning or in the middle of a comment.\n\nFor example, with a maximum length of `30`, the following each have only one warning:\n\n```css\n/* This line is too long for my rule */\na { color: pink; background: orange; }\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n\n```css\na { color: pink; background: orange; }\n/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n","raw":"---\ntitle: max-line-length\n---\n\n# max-line-length\n\nLimit the length of a line.\n\n```css\n    a { color: red }\n/**                ↑\n *           The end */\n```\n\nLines that exceed the maximum length but contain no whitespace (other than at the beginning of the line) are ignored.\n\nWhen evaluating the line length, `url(...)` functions are collapsed into just `url()`,\nbecause typically you have no control over the length of its argument.\nThis means that long `url()` functions should not contribute to warnings.\n\n## Options\n\n`int`: Maximum number of characters allowed.\n\nFor example, with `20`:\n\nThe following patterns are considered warnings:\n\n```css\na { color: 0; top: 0; }\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na {\n  color: 0;\n  top: 0;\n}\n```\n\n```css\na {\n  background: url(a-url-that-is-over-20-characters-long);\n}\n\n## Optional options\n\n### `ignore: [\"non-comments\"]`\n\nOnly enforce the line-length limit for lines within comments.\n\nThis does not apply to comments that are stuck in between other stuff,\nonly to lines that begin at the beginning or in the middle of a comment.\n\nFor example, with a maximum length of `30`, the following each have only one warning:\n\n```css\n/* This line is too long for my rule */\na { color: pink; background: orange; }\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n\n```css\na { color: pink; background: orange; }\n/**\n * This line is short,\n * but this line is too long for my liking,\n * though this one is fine\n */\na { color: pink; /* this comment is also long but not on its own line */ }\n```\n","__filename":"user-guide/rules/max-line-length.md","__url":"/user-guide/rules/max-line-length/"}