{"head":{"layout":"RulePage","next":"/user-guide/rules/no-unknown-animations/","prev":"/user-guide/rules/comment-word-blacklist/","description":"max-nesting-depth Limit the allowed nesting depth. This rule works by checking rules' and at-rules' actual \"nesting depth\" against your…","title":""},"body":"<h1 id=\"max-nesting-depth\"><a href=\"#max-nesting-depth\" class=\"phenomic-HeadingAnchor\">#</a>max-nesting-depth</h1>\n<p>Limit the allowed nesting depth.</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> { &#x26; > b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; } }\n<span class=\"hljs-comment\">/** ↑\n * This nesting */</span></code></pre>\n<p>This rule works by checking rules' and at-rules' actual \"nesting depth\" against your specified max. Here's how nesting depths works:</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; b { <span class=\"hljs-comment\">/* nesting depth 1 */</span>\n    &#x26; .foo { <span class=\"hljs-comment\">/* nesting depth 2 */</span>\n      @media print { <span class=\"hljs-comment\">/* nesting depth 3 */</span>\n        &#x26; .baz { <span class=\"hljs-comment\">/* nesting depth 4 */</span>\n          <span class=\"hljs-attribute\">color</span>: pink;\n        }\n      }\n    }\n  }\n}</code></pre>\n<p>Note that <strong>root-level at-rules will <em>not</em> be included in the nesting depth calculation</strong>, because most users would take for granted that root-level at-rules are \"free\" (because necessary). So both of the following <code>.foo</code> rules have a nesting depth of 2, and will therefore pass if your <code>max</code> is less than or equal to 2:</p>\n<pre><code class=\"hljs   language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  b { <span class=\"hljs-comment\">/* 1 */</span>\n    .foo {} <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}\n\n@<span class=\"hljs-keyword\">media</span> print { <span class=\"hljs-comment\">/* ignored */</span>\n  <span class=\"hljs-selector-tag\">a</span> {\n    b { <span class=\"hljs-comment\">/* 1 */</span>\n      .foo {} <span class=\"hljs-comment\">/* 2 */</span>\n    }\n  }\n}</code></pre>\n<p>This rule integrates into stylelint's core the functionality of the (now deprecated) plugin <a href=\"https://github.com/davidtheclark/stylelint-statement-max-nesting-depth\"><code>stylelint-statement-max-nesting-depth</code></a>.</p>\n<ul>\n<li><a href=\"#options\">Options</a></li>\n<li>\n<p><a href=\"#optional-secondary-options\">Optional secondary options</a></p>\n<ul>\n<li><a href=\"#ignore-blockless-at-rules\">ignore: [\"blockless-at-rules\"]</a></li>\n<li><a href=\"#ignore-pseudo-classes\">ignore: [\"pseudo-classes\"]</a></li>\n<li><a href=\"#ignoreatrules-regex-regex-string\">ignoreAtRules: [\"/regex/\", /regex/, \"string\"]</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>int</code>: Maximum nesting depth allowed.</p>\n<p>For example, with <code>2</code>:</p>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;__foo { <span class=\"hljs-comment\">/* 2 */</span>\n      &#x26; > .bar {} <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26; .foo { <span class=\"hljs-comment\">/* 2 */</span>\n      &#x26; .bar {} <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;__foo {} <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}\n\n<span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-class\">.foo__foo</span> <span class=\"hljs-selector-class\">.bar</span> <span class=\"hljs-selector-class\">.baz</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">media</span> print {\n  <span class=\"hljs-selector-tag\">a</span> {\n    &#x26; .foo { <span class=\"hljs-comment\">/* 1 */</span>\n      &#x26;__foo {} <span class=\"hljs-comment\">/* 2 */</span>\n    }\n  }\n}</code></pre>\n<h2 id=\"optional-secondary-options\"><a href=\"#optional-secondary-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional secondary options</h2>\n<h3 id=\"ignore-blockless-at-rules\"><a href=\"#ignore-blockless-at-rules\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"blockless-at-rules\"]</code></h3>\n<p>Ignore at-rules that only wrap other rules, and do not themselves have declaration blocks.</p>\n<p>For example, with <code>1</code>:</p>\n<p>The following patterns are considered violations:</p>\n<p>As the at-rules have a declarations blocks.</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  &#x26;:hover { <span class=\"hljs-comment\">/* 1 */</span>\n    @media (<span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">500px</span>) { color: pink; } <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @nest > b { <span class=\"hljs-comment\">/* 1 */</span>\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<p>As all of the following <code>.foo</code> rules would have a nesting depth of just 1.</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\">@<span class=\"hljs-keyword\">media</span> print { <span class=\"hljs-comment\">/* ignored regardless of options */</span>\n  <span class=\"hljs-selector-tag\">a</span> {\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print { <span class=\"hljs-comment\">/* ignored because it's an at-rule without a declaration block of its own */</span>\n    .foo { <span class=\"hljs-attribute\">color</span>: pink; } <span class=\"hljs-comment\">/* 1 */</span>\n  }\n}</code></pre>\n<h3 id=\"ignore-pseudo-classes\"><a href=\"#ignore-pseudo-classes\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [\"pseudo-classes\"]</code></h3>\n<p>Ignore rules where the first selector in each selector list item is a pseudo-class</p>\n<p>For example, with <code>1</code>:</p>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    .c { <span class=\"hljs-comment\">/* 2 */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  &#x26;:hover { <span class=\"hljs-comment\">/* ignored */</span>\n    .b { <span class=\"hljs-comment\">/* 1 */</span>\n      .c { <span class=\"hljs-comment\">/* 2 */</span>\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n      }\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;::selection { <span class=\"hljs-comment\">/* 2 */</span>\n      <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#64FFDA</span>;\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;:hover, .c { <span class=\"hljs-comment\">/* 2 */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    }\n  }\n}</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<p>As all of the following pseudoclasses rules would have a nesting depth of just 1.</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;:hover { <span class=\"hljs-comment\">/* ignored */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;:nest {\n      &#x26;:nest-lvl2 {  <span class=\"hljs-comment\">/* ignored */</span>\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n      }\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  &#x26;:hover {  <span class=\"hljs-comment\">/* ignored */</span>\n    .b { <span class=\"hljs-comment\">/* 1 */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  &#x26;:nest {  <span class=\"hljs-comment\">/* ignored */</span>\n    &#x26;:nest-lvl2 {  <span class=\"hljs-comment\">/* ignored */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n      .b { <span class=\"hljs-comment\">/* 1 */</span>\n        <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n      }\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.a</span> {\n  .b { <span class=\"hljs-comment\">/* 1 */</span>\n    &#x26;:hover, &#x26;:focus {  <span class=\"hljs-comment\">/* ignored */</span>\n      <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n    }\n  }\n}</code></pre>\n<h3 id=\"ignoreatrules-regex-regex-string\"><a href=\"#ignoreatrules-regex-regex-string\" class=\"phenomic-HeadingAnchor\">#</a><code>ignoreAtRules: [\"/regex/\", /regex/, \"string\"]</code></h3>\n<p>Ignore the specified at-rules.</p>\n<p>For example, with <code>1</code> and given:</p>\n<pre><code class=\"hljs language-js\">[<span class=\"hljs-string\">\"/^my-/\"</span>, <span class=\"hljs-string\">\"media\"</span>]</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @media print {      <span class=\"hljs-comment\">/* 1 */</span>\n    b {               <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }   <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  b {                 <span class=\"hljs-comment\">/* 1 */</span>\n    @media print {    <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }   <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @my-at-rule print {  <span class=\"hljs-comment\">/* 1 */</span>\n    b {                <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }    <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @my-other-at-rule print {  <span class=\"hljs-comment\">/* 1 */</span>\n    b {                      <span class=\"hljs-comment\">/* 2 */</span>\n      c { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }          <span class=\"hljs-comment\">/* 3 */</span>\n    }\n  }\n}</code></pre>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @import print {       <span class=\"hljs-comment\">/* 1 */</span>\n    b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }       <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-tag\">a</span> {\n  @not-my-at-rule print {   <span class=\"hljs-comment\">/* 1 */</span>\n    b { <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>; }       <span class=\"hljs-comment\">/* 2 */</span>\n  }\n}</code></pre>\n","__filename":"user-guide/rules/max-nesting-depth.md","__url":"/user-guide/rules/max-nesting-depth/","__resourceUrl":"/user-guide/rules/max-nesting-depth/index.html","__dataUrl":"/user-guide/rules/max-nesting-depth/index.html.8c052d1c1df1da0ba63b015f507d0c61.json"}