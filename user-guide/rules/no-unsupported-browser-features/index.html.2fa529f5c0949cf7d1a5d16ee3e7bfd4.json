{"head":{"title":"no-unsupported-browser-features","description":"no-unsupported-browser-features Disallow features that are unsupported by the browsers that you are targeting. This rule uses doiuse to…"},"body":"<h1 id=\"no-unsupported-browser-features\"><a href=\"#no-unsupported-browser-features\" class=\"phenomic-HeadingAnchor\">#</a>no-unsupported-browser-features</h1>\n<p>Disallow features that are unsupported by the browsers that you are targeting.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.foo</span> { <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">1</span>; }\n<span class=\"hljs-comment\">/**    ↑                 \n * Features like this, which is unsupported in IE 8 */</span></code></pre>\n<p>This rule uses <a href=\"https://github.com/anandthakker/doiuse\">doiuse</a> to detect browser support. doiuse itself checks your code against the <a href=\"http://caniuse.com/\">&quot;Can I use&quot;</a> database.</p>\n<p><strong>This is a good rule to use with &quot;warning&quot;-level severity</strong>, because its primary purpose is to warn you that you are using features not all browsers support <em>and therefore ought to provide fallbacks</em>. But the warning will continue even if you have a fallback in place (it doesn&#x27;t know); so you probably do not want this rule to break your build. Instead, consider it a friendly reminder to double-check certain spots for fallbacks.</p>\n<p>Bugs and feature requests should be reported on the <a href=\"https://github.com/anandthakker/doiuse/issues\">doiuse issue tracker</a>.</p>\n<h2 id=\"optional-options\"><a href=\"#optional-options\" class=\"phenomic-HeadingAnchor\">#</a>Optional Options</h2>\n<p>These options are passed directly to doiuse.</p>\n<h3 id=\"browsers-browserslist-string\"><a href=\"#browsers-browserslist-string\" class=\"phenomic-HeadingAnchor\">#</a><code>browsers: &quot;browserslist string&quot;</code></h3>\n<p>A string interpreted by <a href=\"https://github.com/ai/browserslist\">browserslist</a> that designates precisely which browsers you wish to support. Something like <code>&quot;&gt; 1%, last 2 versions, ie &gt;= 8&quot;</code>. For details about the syntax (which is the same as when using Autoprefixer, by the way), please read <a href=\"https://github.com/ai/browserslist\">the browserslist documentation</a>.</p>\n<p>Defaults to the doiuse default, which is <code>&quot;&gt; 1%, last 2 versions, Firefox ESR, Opera 12.1&quot;</code>.</p>\n<p>For example, with the default settings, the following is considered a warning, because IE8 (which as of this writing had <em>just over</em> 1% global usage) does not support <code>opacity</code>:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.foo</span> { <span class=\"hljs-attribute\">opacity</span>: <span class=\"hljs-number\">0.5</span>; }</code></pre>\n<p>But if you set <code>browsers: &quot;last 2 versions, ie &gt;=9&quot;</code> the declaration above is allowed.</p>\n<h3 id=\"ignore--array-of-features-to-ignore-\"><a href=\"#ignore--array-of-features-to-ignore-\" class=\"phenomic-HeadingAnchor\">#</a><code>ignore: [ &quot;array&quot;, &quot;of&quot;, &quot;features&quot;, &quot;to&quot;, &quot;ignore&quot; ]</code></h3>\n<p>If you no longer want to be warned about, say, your use of <code>rem</code>, you can use <code>ignore: [&quot;rem&quot;]</code>.</p>\n","rawBody":"\n# no-unsupported-browser-features\n\nDisallow features that are unsupported by the browsers that you are targeting.\n\n```css\n.foo { opacity: 1; }\n/**    ↑                 \n * Features like this, which is unsupported in IE 8 */\n```\n\nThis rule uses [doiuse](https://github.com/anandthakker/doiuse) to detect browser support. doiuse itself checks your code against the [\"Can I use\"](http://caniuse.com/) database.\n\n**This is a good rule to use with \"warning\"-level severity**, because its primary purpose is to warn you that you are using features not all browsers support *and therefore ought to provide fallbacks*. But the warning will continue even if you have a fallback in place (it doesn't know); so you probably do not want this rule to break your build. Instead, consider it a friendly reminder to double-check certain spots for fallbacks.\n\nBugs and feature requests should be reported on the [doiuse issue tracker](https://github.com/anandthakker/doiuse/issues).\n\n## Optional Options\n\nThese options are passed directly to doiuse.\n\n### `browsers: \"browserslist string\"`\n\nA string interpreted by [browserslist](https://github.com/ai/browserslist) that designates precisely which browsers you wish to support. Something like `\"> 1%, last 2 versions, ie >= 8\"`. For details about the syntax (which is the same as when using Autoprefixer, by the way), please read [the browserslist documentation](https://github.com/ai/browserslist).\n\nDefaults to the doiuse default, which is `\"> 1%, last 2 versions, Firefox ESR, Opera 12.1\"`.\n\nFor example, with the default settings, the following is considered a warning, because IE8 (which as of this writing had *just over* 1% global usage) does not support `opacity`:\n\n```css\n.foo { opacity: 0.5; }\n```\n\nBut if you set `browsers: \"last 2 versions, ie >=9\"` the declaration above is allowed.\n\n### `ignore: [ \"array\", \"of\", \"features\", \"to\", \"ignore\" ]`\n\nIf you no longer want to be warned about, say, your use of `rem`, you can use `ignore: [\"rem\"]`.\n","raw":"---\ntitle: no-unsupported-browser-features\n---\n\n# no-unsupported-browser-features\n\nDisallow features that are unsupported by the browsers that you are targeting.\n\n```css\n.foo { opacity: 1; }\n/**    ↑                 \n * Features like this, which is unsupported in IE 8 */\n```\n\nThis rule uses [doiuse](https://github.com/anandthakker/doiuse) to detect browser support. doiuse itself checks your code against the [\"Can I use\"](http://caniuse.com/) database.\n\n**This is a good rule to use with \"warning\"-level severity**, because its primary purpose is to warn you that you are using features not all browsers support *and therefore ought to provide fallbacks*. But the warning will continue even if you have a fallback in place (it doesn't know); so you probably do not want this rule to break your build. Instead, consider it a friendly reminder to double-check certain spots for fallbacks.\n\nBugs and feature requests should be reported on the [doiuse issue tracker](https://github.com/anandthakker/doiuse/issues).\n\n## Optional Options\n\nThese options are passed directly to doiuse.\n\n### `browsers: \"browserslist string\"`\n\nA string interpreted by [browserslist](https://github.com/ai/browserslist) that designates precisely which browsers you wish to support. Something like `\"> 1%, last 2 versions, ie >= 8\"`. For details about the syntax (which is the same as when using Autoprefixer, by the way), please read [the browserslist documentation](https://github.com/ai/browserslist).\n\nDefaults to the doiuse default, which is `\"> 1%, last 2 versions, Firefox ESR, Opera 12.1\"`.\n\nFor example, with the default settings, the following is considered a warning, because IE8 (which as of this writing had *just over* 1% global usage) does not support `opacity`:\n\n```css\n.foo { opacity: 0.5; }\n```\n\nBut if you set `browsers: \"last 2 versions, ie >=9\"` the declaration above is allowed.\n\n### `ignore: [ \"array\", \"of\", \"features\", \"to\", \"ignore\" ]`\n\nIf you no longer want to be warned about, say, your use of `rem`, you can use `ignore: [\"rem\"]`.\n","__filename":"user-guide/rules/no-unsupported-browser-features.md","__url":"/user-guide/rules/no-unsupported-browser-features/","__resourceUrl":"/user-guide/rules/no-unsupported-browser-features/index.html","__dataUrl":"/user-guide/rules/no-unsupported-browser-features/index.html.2fa529f5c0949cf7d1a5d16ee3e7bfd4.json"}