{"head":{"title":"property-no-vendor-prefix","description":"property-no-vendor-prefix\n\nDisallow vendor prefixes for properties.\n\nThis rule does not blanketly condemn vendor prefixes. Instead, it uses…"},"body":"<h1 id=\"property-no-vendor-prefix\"><a href=\"#property-no-vendor-prefix\" class=\"statinamic-HeadingAnchor\">#</a>property-no-vendor-prefix</h1>\n<p>Disallow vendor prefixes for properties.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1); }\n<span class=\"hljs-comment\">/**  ↑\n * These prefixes */</span></code></pre>\n<p>This rule does not blanketly condemn vendor prefixes. Instead, it uses <a href=\"https://github.com/postcss/autoprefixer\">Autoprefixer&#x27;s</a> up-to-date data (from <a href=\"http://caniuse.com/\">caniuse.com</a>) to know whether a vendor prefix should cause a warning or not. <em>If you&#x27;ve included a vendor prefixed property that has a standard alternative, one that Autoprefixer could take care of for you, this rule will warn about it</em>. If, however, you use a non-standard vendor-prefixed property, one that Autoprefixer would ignore and could not provide (such as <code>-webkit-touch-callout</code>), this rule will ignore it.</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-transform</span>: <span class=\"hljs-built_in\">scale</span>(1); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-moz-columns</span>: <span class=\"hljs-number\">2</span>; }</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">scale</span>(1); }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> {\n<span class=\"hljs-attribute\">columns</span>: <span class=\"hljs-number\">2</span>; }</code></pre>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-tag\">a</span> { <span class=\"hljs-attribute\">-webkit-touch-callout</span>: none; }</code></pre>\n","rawBody":"\n# property-no-vendor-prefix\n\nDisallow vendor prefixes for properties.\n\n```css\na { -webkit-transform: scale(1); }\n/**  ↑\n * These prefixes */\n```\n\nThis rule does not blanketly condemn vendor prefixes. Instead, it uses [Autoprefixer's](https://github.com/postcss/autoprefixer) up-to-date data (from [caniuse.com](http://caniuse.com/)) to know whether a vendor prefix should cause a warning or not. *If you've included a vendor prefixed property that has a standard alternative, one that Autoprefixer could take care of for you, this rule will warn about it*. If, however, you use a non-standard vendor-prefixed property, one that Autoprefixer would ignore and could not provide (such as `-webkit-touch-callout`), this rule will ignore it.\n\nThe following patterns are considered warnings:\n\n```css\na { -webkit-transform: scale(1); }\n```\n\n```css\na { -moz-columns: 2; }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: scale(1); }\n```\n\n```css\na {\ncolumns: 2; }\n```\n\n```css\na { -webkit-touch-callout: none; }\n```\n","raw":"---\ntitle: property-no-vendor-prefix\n---\n\n# property-no-vendor-prefix\n\nDisallow vendor prefixes for properties.\n\n```css\na { -webkit-transform: scale(1); }\n/**  ↑\n * These prefixes */\n```\n\nThis rule does not blanketly condemn vendor prefixes. Instead, it uses [Autoprefixer's](https://github.com/postcss/autoprefixer) up-to-date data (from [caniuse.com](http://caniuse.com/)) to know whether a vendor prefix should cause a warning or not. *If you've included a vendor prefixed property that has a standard alternative, one that Autoprefixer could take care of for you, this rule will warn about it*. If, however, you use a non-standard vendor-prefixed property, one that Autoprefixer would ignore and could not provide (such as `-webkit-touch-callout`), this rule will ignore it.\n\nThe following patterns are considered warnings:\n\n```css\na { -webkit-transform: scale(1); }\n```\n\n```css\na { -moz-columns: 2; }\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\na { transform: scale(1); }\n```\n\n```css\na {\ncolumns: 2; }\n```\n\n```css\na { -webkit-touch-callout: none; }\n```\n","__filename":"user-guide/rules/property-no-vendor-prefix.md","__url":"/user-guide/rules/property-no-vendor-prefix/","__resourceUrl":"/user-guide/rules/property-no-vendor-prefix/index.html","__dataUrl":"/user-guide/rules/property-no-vendor-prefix/index.html.7f6a6f670fc0c05b6346806bdb9a9ac8.json"}