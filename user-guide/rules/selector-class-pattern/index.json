{"head":{"title":"selector-class-pattern"},"body":"<h1 id=\"selector-class-pattern\"><a class=\"markdownIt-Anchor\" href=\"#selector-class-pattern\">#</a> selector-class-pattern</h1>\n<p>Specify a pattern for class selectors.</p>\n<pre><code class=\"language-css\">    <span class=\"hljs-selector-class\">.foo</span>, <span class=\"hljs-selector-id\">#bar</span><span class=\"hljs-selector-class\">.baz</span> <span class=\"hljs-selector-tag\">span</span>, <span class=\"hljs-selector-id\">#hoo</span><span class=\"hljs-selector-attr\">[disabled]</span> { <span class=\"hljs-attribute\">color</span>: pink; }\n<span class=\"hljs-comment\">/** ↑         ↑\n * These class selectors */</span>\n</code></pre>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p><code>regex</code> or <code>string</code></p>\n<p>A string will be translated into a RegExp — <code>new RegExp(yourString)</code> — so <em>be sure to escape properly</em>.</p>\n<p>The selector value <em>after <code>.</code></em> will be checked. No need to include <code>.</code> in your pattern.</p>\n<h3 id=\"e-g-foo-a-z\"><a class=\"markdownIt-Anchor\" href=\"#e-g-foo-a-z\">#</a> E.g. <code>/foo-[a-z]+/</code></h3>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.foop</span> {}\n<span class=\"hljs-selector-class\">.foo-BAR</span> {}\n<span class=\"hljs-selector-tag\">div</span> &gt; <span class=\"hljs-selector-id\">#zing</span> + <span class=\"hljs-selector-class\">.foo-BAR</span> {}\n</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.foo-bar</span> {}\n<span class=\"hljs-selector-tag\">div</span> &gt; <span class=\"hljs-selector-id\">#zing</span> + <span class=\"hljs-selector-class\">.foo-bar</span> {}\n<span class=\"hljs-selector-id\">#foop</span> {}\n<span class=\"hljs-selector-attr\">[foo='bar']</span> {}\n</code></pre>\n","rawBody":"\n# selector-class-pattern\n\nSpecify a pattern for class selectors.\n\n```css\n    .foo, #bar.baz span, #hoo[disabled] { color: pink; }\n/** ↑         ↑\n * These class selectors */\n```\n\n## Options\n\n`regex` or `string`\n\nA string will be translated into a RegExp — `new RegExp(yourString)` — so *be sure to escape properly*.\n\nThe selector value *after `.`* will be checked. No need to include `.` in your pattern.\n\n### E.g. `/foo-[a-z]+/`\n\nThe following patterns are considered warnings:\n\n```css\n.foop {}\n.foo-BAR {}\ndiv > #zing + .foo-BAR {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n.foo-bar {}\ndiv > #zing + .foo-bar {}\n#foop {}\n[foo='bar'] {}\n```\n","raw":"---\ntitle: selector-class-pattern\n---\n\n# selector-class-pattern\n\nSpecify a pattern for class selectors.\n\n```css\n    .foo, #bar.baz span, #hoo[disabled] { color: pink; }\n/** ↑         ↑\n * These class selectors */\n```\n\n## Options\n\n`regex` or `string`\n\nA string will be translated into a RegExp — `new RegExp(yourString)` — so *be sure to escape properly*.\n\nThe selector value *after `.`* will be checked. No need to include `.` in your pattern.\n\n### E.g. `/foo-[a-z]+/`\n\nThe following patterns are considered warnings:\n\n```css\n.foop {}\n.foo-BAR {}\ndiv > #zing + .foo-BAR {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n.foo-bar {}\ndiv > #zing + .foo-bar {}\n#foop {}\n[foo='bar'] {}\n```\n","__filename":"user-guide/rules/selector-class-pattern.md","__url":"/user-guide/rules/selector-class-pattern/"}