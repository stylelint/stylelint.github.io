{"head":{"title":"selector-id-pattern","description":"selector-id-pattern Specify a pattern for id selectors. Options regex or string A string will be translated into a RegExp — new RegExp…"},"body":"<h1 id=\"selector-id-pattern\"><a href=\"#selector-id-pattern\" class=\"phenomic-HeadingAnchor\">#</a>selector-id-pattern</h1>\n<p>Specify a pattern for id selectors.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.foo</span>, <span class=\"hljs-selector-id\">#bar</span><span class=\"hljs-selector-class\">.baz</span> <span class=\"hljs-selector-tag\">a</span>, <span class=\"hljs-selector-id\">#hoo</span><span class=\"hljs-selector-attr\">[disabled]</span> { <span class=\"hljs-attribute\">color</span>: pink; }\n<span class=\"hljs-comment\">/**   ↑           ↑\n * These id selectors */</span></code></pre>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>regex</code> or <code>string</code></p>\n<p>A string will be translated into a RegExp — <code>new RegExp(yourString)</code> — so <em>be sure to escape properly</em>.</p>\n<p>The selector value <em>after <code>#</code></em> will be checked. No need to include <code>#</code> in your pattern.</p>\n<h3 id=\"eg-foo-a-z\"><a href=\"#eg-foo-a-z\" class=\"phenomic-HeadingAnchor\">#</a>E.g. <code>/foo-[a-z]+/</code></h3>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-id\">#foop</span> {}\n<span class=\"hljs-selector-id\">#foo-BAR</span> {}\n<span class=\"hljs-selector-tag\">div</span> &gt; <span class=\"hljs-selector-class\">.zing</span> + <span class=\"hljs-selector-id\">#foo-BAR</span> {}</code></pre>\n<p>The following patterns are <em>not</em> considered warnings:</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-id\">#foo-bar</span> {}\n<span class=\"hljs-selector-tag\">div</span> &gt; <span class=\"hljs-selector-class\">.zing</span> + <span class=\"hljs-selector-id\">#foo-bar</span> {}\n<span class=\"hljs-selector-class\">.foop</span> {}\n<span class=\"hljs-selector-attr\">[foo='bar']</span> {}</code></pre>\n","rawBody":"\n# selector-id-pattern\n\nSpecify a pattern for id selectors.\n\n```css\n.foo, #bar.baz a, #hoo[disabled] { color: pink; }\n/**   ↑           ↑\n * These id selectors */\n```\n\n## Options\n\n`regex` or `string`\n\nA string will be translated into a RegExp — `new RegExp(yourString)` — so *be sure to escape properly*.\n\nThe selector value *after `#`* will be checked. No need to include `#` in your pattern.\n\n### E.g. `/foo-[a-z]+/`\n\nThe following patterns are considered warnings:\n\n```css\n#foop {}\n#foo-BAR {}\ndiv > .zing + #foo-BAR {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n#foo-bar {}\ndiv > .zing + #foo-bar {}\n.foop {}\n[foo='bar'] {}\n```\n","raw":"---\ntitle: selector-id-pattern\n---\n\n# selector-id-pattern\n\nSpecify a pattern for id selectors.\n\n```css\n.foo, #bar.baz a, #hoo[disabled] { color: pink; }\n/**   ↑           ↑\n * These id selectors */\n```\n\n## Options\n\n`regex` or `string`\n\nA string will be translated into a RegExp — `new RegExp(yourString)` — so *be sure to escape properly*.\n\nThe selector value *after `#`* will be checked. No need to include `#` in your pattern.\n\n### E.g. `/foo-[a-z]+/`\n\nThe following patterns are considered warnings:\n\n```css\n#foop {}\n#foo-BAR {}\ndiv > .zing + #foo-BAR {}\n```\n\nThe following patterns are *not* considered warnings:\n\n```css\n#foo-bar {}\ndiv > .zing + #foo-bar {}\n.foop {}\n[foo='bar'] {}\n```\n","__filename":"user-guide/rules/selector-id-pattern.md","__url":"/user-guide/rules/selector-id-pattern/","__resourceUrl":"/user-guide/rules/selector-id-pattern/index.html","__dataUrl":"/user-guide/rules/selector-id-pattern/index.html.51d93b7fd40062bd126df92e31745667.json"}