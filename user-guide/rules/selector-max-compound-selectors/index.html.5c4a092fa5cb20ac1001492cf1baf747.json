{"head":{"layout":"RulePage","next":"/user-guide/rules/selector-max-empty-lines/","prev":"/user-guide/rules/selector-max-combinators/","description":"selector-max-compound-selectors Limit the number of compound selectors in a selector. A compound selector is a chain of one or more simple…","title":""},"body":"<h1 id=\"selector-max-compound-selectors\"><a href=\"#selector-max-compound-selectors\" class=\"phenomic-HeadingAnchor\">#</a>selector-max-compound-selectors</h1>\n<p>Limit the number of compound selectors in a selector.</p>\n<pre><code class=\"hljs   language-css\">   <span class=\"hljs-selector-tag\">div</span> <span class=\"hljs-selector-class\">.bar</span><span class=\"hljs-selector-attr\">[data-val]</span> > <span class=\"hljs-selector-tag\">a</span><span class=\"hljs-selector-class\">.baz</span> + <span class=\"hljs-selector-class\">.boom</span> > <span class=\"hljs-selector-id\">#lorem</span> {}\n<span class=\"hljs-comment\">/* ↑   ↑                ↑       ↑       ↑\n   |   |                |       |       |\n  Lv1 Lv2              Lv3     Lv4     Lv5  -- these are compound selectors */</span></code></pre>\n<p>A <a href=\"https://www.w3.org/TR/selectors4/#compound\">compound selector</a> is a chain of one or more simple (tag, class, ID, universal, attribute) selectors. If there is more than one compound selector in a complete selector, they will be separated by combinators (e.g. <code></code>, <code>+</code>, <code>></code>). One reason why you might want to limit the number of compound selectors is described in the <a href=\"https://smacss.com/book/applicability\">SMACSS book</a>.</p>\n<p>This rule resolves nested selectors before calculating the depth of a selector.</p>\n<p><code>:not()</code> is considered one compound selector irrespective to the complexity of the selector inside it. The rule <em>does</em> process that inner selector, but does so separately, independent of the main selector.</p>\n<ul>\n<li><a href=\"#options\">Options</a></li>\n</ul>\n<h2 id=\"options\"><a href=\"#options\" class=\"phenomic-HeadingAnchor\">#</a>Options</h2>\n<p><code>int</code>: Maximum compound selectors allowed.</p>\n<p>For example, with <code>3</code>:</p>\n<p>The following patterns are considered violations:</p>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.foo</span> <span class=\"hljs-selector-class\">.bar</span> <span class=\"hljs-selector-class\">.baz</span> <span class=\"hljs-selector-class\">.lorem</span> {}</code></pre>\n<pre><code class=\"hljs  invalid-pattern language-css\"><span class=\"hljs-selector-class\">.foo</span> <span class=\"hljs-selector-class\">.baz</span> {\n  &#x26; > .bar .lorem {}\n}</code></pre>\n<p>The following patterns are <em>not</em> considered violations:</p>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-tag\">div</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.foo</span> <span class=\"hljs-selector-tag\">div</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-id\">#foo</span> <span class=\"hljs-selector-id\">#bar</span> > <span class=\"hljs-selector-id\">#baz</span> {}</code></pre>\n<pre><code class=\"hljs valid-pattern  language-css\"><span class=\"hljs-selector-class\">.foo</span> + <span class=\"hljs-selector-tag\">div</span> <span class=\"hljs-selector-pseudo\">:not</span> (<span class=\"hljs-selector-tag\">a</span> <span class=\"hljs-selector-tag\">b</span> ~ <span class=\"hljs-selector-tag\">c</span>) {} <span class=\"hljs-comment\">/* `a b ~ c` is inside :not() and is processed separately */</span></code></pre>\n","__filename":"user-guide/rules/selector-max-compound-selectors.md","__url":"/user-guide/rules/selector-max-compound-selectors/","__resourceUrl":"/user-guide/rules/selector-max-compound-selectors/index.html","__dataUrl":"/user-guide/rules/selector-max-compound-selectors/index.html.5c4a092fa5cb20ac1001492cf1baf747.json"}