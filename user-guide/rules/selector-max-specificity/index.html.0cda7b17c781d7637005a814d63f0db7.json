{"head":{"title":"selector-max-specificity","description":"selector-max-specificity\n\nLimit the specificity of selectors.\n\nVisit the Specificity Calculator for visual representation of selector…"},"body":"<h1 id=\"selector-max-specificity\"><a class=\"markdownIt-Anchor\" href=\"#selector-max-specificity\">#</a> selector-max-specificity</h1>\n<p>Limit the specificity of selectors.</p>\n<pre><code class=\"language-css\">    <span class=\"hljs-selector-class\">.foo</span>, <span class=\"hljs-selector-id\">#bar</span><span class=\"hljs-selector-class\">.baz</span> <span class=\"hljs-selector-tag\">span</span>, <span class=\"hljs-selector-id\">#hoo</span> { <span class=\"hljs-attribute\">color</span>: pink; }\n<span class=\"hljs-comment\">/** ↑     ↑              ↑\n * Each of these selectors */</span>\n</code></pre>\n<p>Visit the <a href=\"https://specificity.keegan.st\">Specificity Calculator</a> for visual representation of selector specificity.</p>\n<p>This rule ignores selectors with variable interpolation (<code>#{$var}</code>, <code>@{var}</code>, <code>$(var)</code>).</p>\n<p>This rule resolves nested selectors before calculating the specificity of a selector.</p>\n<h2 id=\"options\"><a class=\"markdownIt-Anchor\" href=\"#options\">#</a> Options</h2>\n<p><code>string</code>: Maximum specificity allowed.</p>\n<p>Format is <code>&quot;id,foo,type&quot;</code>, as laid out in the <a href=\"https://drafts.csswg.org/selectors/#specificity-rules\">W3C selector spec</a>.</p>\n<p>For example, with <code>&quot;0,2,0&quot;</code>:</p>\n<p>The following patterns are considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-id\">#id</span> {}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.foo</span> <span class=\"hljs-selector-class\">.baz</span> <span class=\"hljs-selector-class\">.bar</span> {}\n</code></pre>\n<pre><code class=\"language-css\">.foo .baz {\n  &amp; .bar {}\n}\n</code></pre>\n<pre><code class=\"language-css\">.foo {\n  color: red;\n  @nest .baz .bar &amp; {\n    color: blue;\n  }\n}\n</code></pre>\n<p>The following are <em>not</em> considered warnings:</p>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-tag\">div</span> {}\n</code></pre>\n<pre><code class=\"language-css\"><span class=\"hljs-selector-class\">.foo</span> <span class=\"hljs-selector-tag\">div</span> {}\n</code></pre>\n<pre><code class=\"language-css\">.foo div {\n  &amp; div a {}\n}\n</code></pre>\n<pre><code class=\"language-css\">.foo {\n  &amp; .baz {}\n}\n</code></pre>\n<pre><code class=\"language-css\">.foo {\n  color: red;\n  @nest .baz &amp; {\n    color: blue;\n  }\n}\n</code></pre>\n","rawBody":"\n# selector-max-specificity\n\nLimit the specificity of selectors.\n\n```css\n    .foo, #bar.baz span, #hoo { color: pink; }\n/** ↑     ↑              ↑\n * Each of these selectors */\n```\n\nVisit the [Specificity Calculator](https://specificity.keegan.st) for visual representation of selector specificity.\n\nThis rule ignores selectors with variable interpolation (`#{$var}`, `@{var}`, `$(var)`).\n\nThis rule resolves nested selectors before calculating the specificity of a selector.\n\n## Options\n\n`string`: Maximum specificity allowed.\n\nFormat is `\"id,foo,type\"`, as laid out in the [W3C selector spec](https://drafts.csswg.org/selectors/#specificity-rules).\n\nFor example, with `\"0,2,0\"`:\n\nThe following patterns are considered warnings:\n\n```css\n#id {}\n```\n\n```css\n.foo .baz .bar {}\n```\n\n```css\n.foo .baz {\n  & .bar {}\n}\n```\n\n```css\n.foo {\n  color: red;\n  @nest .baz .bar & {\n    color: blue;\n  }\n}\n```\n\nThe following are *not* considered warnings:\n\n```css\ndiv {}\n```\n\n```css\n.foo div {}\n```\n\n```css\n.foo div {\n  & div a {}\n}\n```\n\n```css\n.foo {\n  & .baz {}\n}\n```\n\n```css\n.foo {\n  color: red;\n  @nest .baz & {\n    color: blue;\n  }\n}\n```\n","raw":"---\ntitle: selector-max-specificity\n---\n\n# selector-max-specificity\n\nLimit the specificity of selectors.\n\n```css\n    .foo, #bar.baz span, #hoo { color: pink; }\n/** ↑     ↑              ↑\n * Each of these selectors */\n```\n\nVisit the [Specificity Calculator](https://specificity.keegan.st) for visual representation of selector specificity.\n\nThis rule ignores selectors with variable interpolation (`#{$var}`, `@{var}`, `$(var)`).\n\nThis rule resolves nested selectors before calculating the specificity of a selector.\n\n## Options\n\n`string`: Maximum specificity allowed.\n\nFormat is `\"id,foo,type\"`, as laid out in the [W3C selector spec](https://drafts.csswg.org/selectors/#specificity-rules).\n\nFor example, with `\"0,2,0\"`:\n\nThe following patterns are considered warnings:\n\n```css\n#id {}\n```\n\n```css\n.foo .baz .bar {}\n```\n\n```css\n.foo .baz {\n  & .bar {}\n}\n```\n\n```css\n.foo {\n  color: red;\n  @nest .baz .bar & {\n    color: blue;\n  }\n}\n```\n\nThe following are *not* considered warnings:\n\n```css\ndiv {}\n```\n\n```css\n.foo div {}\n```\n\n```css\n.foo div {\n  & div a {}\n}\n```\n\n```css\n.foo {\n  & .baz {}\n}\n```\n\n```css\n.foo {\n  color: red;\n  @nest .baz & {\n    color: blue;\n  }\n}\n```\n","__filename":"user-guide/rules/selector-max-specificity.md","__url":"/user-guide/rules/selector-max-specificity/","__resourceUrl":"/user-guide/rules/selector-max-specificity/index.html","__dataUrl":"/user-guide/rules/selector-max-specificity/index.html.0cda7b17c781d7637005a814d63f0db7.json"}